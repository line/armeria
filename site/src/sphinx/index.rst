.. _`Apache License 2.0`: https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)
.. _`BoringSSL`: https://boringssl.googlesource.com/boringssl/
.. _`gRPC`: https://grpc.io/
.. _`HTTP/2`: https://http2.github.io/
.. _`HTTP/2 connection preface`: https://tools.ietf.org/html/rfc7540#section-3.5
.. _`Java 8`: https://java.oracle.com/
.. _`LINE Corporation`: https://linecorp.com/en/
.. _`Netty`: https://netty.io/
.. _`Reactive Streams`: http://www.reactive-streams.org/
.. _`Spring Boot`: https://projects.spring.io/spring-boot/
.. _`the introductory slides`: https://speakerdeck.com/trustin/building-asynchronous-microservices-with-armeria
.. _`Thrift`: https://thrift.apache.org/
.. _`traditional HTTP/1 upgrade request`: https://tools.ietf.org/html/rfc7540#section-3.2
.. _`Zipkin`: http://zipkin.io/

.. _index:

Welcome to Armeria
==================

*Armeria* is an open-source asynchronous `HTTP/2`_ RPC/REST client/server library built on top of `Java 8`_,
`Netty`_, `Thrift`_ and `gRPC`_. Its primary goal is to help engineers build high-performance asynchronous
microservices that use HTTP/2 as a session layer protocol.

It is open-sourced and licensed under `Apache License 2.0`_ by `LINE Corporation`_, who uses it in production.

Want a quick tour?
------------------
Check out `the introductory slides`_:

.. raw:: html

    <div style="max-width: 512px; margin-bottom: 1em"><script async class="speakerdeck-embed" data-id="aa6b9f1dc9b34401997e8d737ebb2e52" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script></div>

Features
--------

HTTP/2
^^^^^^
- Supports HTTP/2 on both TLS and cleartext connections
- Supports protocol upgrade via both `HTTP/2 connection preface`_ and `traditional HTTP/1 upgrade request`_
- Fully compatible with existing HTTP/1 servers
- Integrated `PROXY protocol <https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt>`_ support for
  interoperability with load balancers such as `HAProxy <https://www.haproxy.org/>`_ and
  `AWS ELB <https://aws.amazon.com/elasticloadbalancing/>`_.

Integration with gRPC and Thrift
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Your gRPC or Thrift service implementation runs on top of Armeria without any modification.
- Works with the official gRPC or Thrift-over-HTTP client
- Works with the code generated by the official Protobuf or Thrift IDL compiler
- Supports various protocol combinations, such as:

  - gRPC-over-HTTP/1 & 2
  - Thrift-over-HTTP/1 & 2
  - gRPC-Web

- See :ref:`server-thrift` and :ref:`server-grpc`.

Essential features for building microservices
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Metrics
- Circuit breaker
- Client-side health-check and load-balancing
- Service discovery from various sources such as DNS and ZooKeeper

  - See :ref:`advanced-zookeeper`.

- Distributed call tracing via `Zipkin`_

Interactive web-based debug console
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Browse the list of available RPC operations
- Invoke a RPC operation via a web form
- Share a RPC request with your colleagues so they can reproduce the problem easily

  - Just like sharing a cURL command, but works for RPC

- See :ref:`server-docservice`.

Completely asynchronous and reactive
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Built on top of `Reactive Streams`_ and Java 8 ``CompletableFuture``
- Asynchronous connection pool ensures your application never blocks even on pool exhaustion.
- Domain name lookups are also fully asynchronous thanks to Netty's asynchronous domain name resolver.

Compatibility with existing Java EE web applications
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Runs any Java EE web applications such as `Spring Boot`_ on the same TCP/IP port
- Your Java EE web application speaks HTTP/2!
- See :ref:`server-servlet`.

Even higher performance on Linux
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- JNI-based socket I/O
- `BoringSSL`_-based TLS connections

Read more
---------
.. toctree::
    :maxdepth: 2

    setup
    server
    client
    advanced
    Release notes <https://github.com/line/armeria/releases>
    API documentation <apidocs/index.html#://>
    Source cross-reference <xref/index.html#://>
    Questions and answers <https://github.com/line/armeria/issues?q=label%3Aquestion-answered>
    Fork me at GitHub <https://github.com/line/armeria>
    Contributing <https://github.com/line/armeria/blob/master/CONTRIBUTING.md>
