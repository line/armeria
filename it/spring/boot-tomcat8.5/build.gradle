final def SPRING_BOOT_VERSION = '2.1.14.RELEASE'
final def SPRING_VERSION = '5.1.15.RELEASE'
final def TOMCAT_VERSION = '8.5.55'

dependencies {
    implementation project(':spring:boot-starter')
    implementation project(':tomcat8.5')

    [ 'spring-boot-starter', 'spring-boot-autoconfigure', 'spring-boot-starter-web' ].each {
        implementation("org.springframework.boot:$it") {
            version {
                // Will fail the build if the override doesn't work
                strictly SPRING_BOOT_VERSION
            }
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
    }

    [ 'spring-beans', 'spring-web' ].each {
        implementation("org.springframework:$it") {
            version {
                // Will fail the build if the override doesn't work
                strictly SPRING_VERSION
            }
        }
    }

    [ 'tomcat-embed-core', 'tomcat-embed-jasper', 'tomcat-embed-el' ].each {
        implementation("org.apache.tomcat.embed:$it") {
            version {
                // Will fail the build if the override doesn't work
                strictly TOMCAT_VERSION
            }
        }
    }

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        version {
            // Will fail the build if the override doesn't work
            strictly SPRING_BOOT_VERSION
        }
    }
}

// Use the sources from ':it:spring:boot-tomcat'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
def tomcatProjectDir = "${rootProject.projectDir}/it/spring/boot-tomcat"
tasks.compileJava.source "${tomcatProjectDir}/src/main/java"
tasks.processResources.from "${tomcatProjectDir}/src/main/resources"
tasks.compileTestJava.source "${tomcatProjectDir}/src/test/java", "${tomcatProjectDir}/gen-src/test/java"
tasks.processTestResources.from "${tomcatProjectDir}/src/test/resources"
tasks.sourcesJar.from "${tomcatProjectDir}/src/main/java"
tasks.sourcesJar.from "${tomcatProjectDir}/src/main/resources"
tasks.javadoc.source "${tomcatProjectDir}/src/main/java"

// Disable checkstyle because it's checked by ':it:spring:boot-tomcat'.
tasks.withType(Checkstyle) {
    onlyIf { false }
}
