allprojects {
    ext {
        hasSourceDirectory = this.&hasSourceDirectory.curry(project)
        getGenerateSourcesTask = this.&getGenerateSourcesTask.curry(project)
        getLintTask = this.&getLintTask.curry(project)
    }
}

static boolean hasSourceDirectory(Project project, String name) {
    return new File(project.projectDir, 'src').listFiles(new FileFilter() {
        @Override
        boolean accept(File pathname) {
            return pathname.isDirectory()
        }
    }).find {
        dir -> new File(dir, name).isDirectory()
    } != null
}

static Task getGenerateSourcesTask(Project project) {
    Task task = project.tasks.findByName('generateSources')
    if (task == null) {
        task = project.task([
                group: 'Build', description: 'Generates required source files.'
        ], 'generateSources');
    }
    return task
}

static Task getLintTask(Project project) {
    Task task = project.tasks.findByName('lint')
    if (task == null) {
        task = project.task([
                group: 'Verification', description: 'Runs all linting tools.'
        ], 'lint')

        if (project.tasks.findByName('check') != null) {
            project.tasks.check.dependsOn(task)
        }
    }
    return task
}
