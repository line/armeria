dependencies {
    // Thrift
    api 'org.apache.thrift:libthrift'
    api 'javax.annotation:javax.annotation-api'

    // Jetty, for testing TServlet interoperability.
    testImplementation 'org.eclipse.jetty:jetty-webapp'
    testImplementation 'org.eclipse.jetty.http2:http2-server'

    // Dropwizard and Prometheus, for testing metrics integration
    testImplementation 'io.dropwizard.metrics:metrics-core'
    testImplementation 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'io.prometheus:simpleclient_common'
}

ext {
    enableThriftFullCamel()
}

// Use the sources from ':thrift0.13'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
tasks.compileJava.source "${rootProject.projectDir}/thrift0.13/src/main/java"
tasks.processResources.from "${rootProject.projectDir}/thrift0.13/src/main/resources"
tasks.sourcesJar.from "${rootProject.projectDir}/thrift0.13/src/main/java"
tasks.sourcesJar.from "${rootProject.projectDir}/thrift0.13/src/main/resources"
tasks.javadoc.source "${rootProject.projectDir}/thrift0.13/src/main/java"


//// Keep the original Guava references in ThriftListenableFuture,
//// which is the only place we expose Guava classes in our public API.
//// NB: Keep this same with 'armeria-thrift0.9'.
tasks.shadedJar.exclude 'com/linecorp/armeria/common/thrift/ThriftListenableFuture*'
tasks.shadedJar.doLast {
    ant.jar(update: true, destfile: tasks.shadedJar.archivePath) {
        sourceSets.main.output.classesDirs.each { classesDir ->
            fileset(dir: "${classesDir}",
                    includes: 'com/linecorp/armeria/common/thrift/ThriftListenableFuture*')
        }
    }
}

tasks.withType(Checkstyle) {
    onlyIf { false }
}
