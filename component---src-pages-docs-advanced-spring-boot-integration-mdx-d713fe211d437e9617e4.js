"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[6042],{64911:function(e,r,a){a.r(r),a.d(r,{_frontmatter:function(){return l},default:function(){return h},pageTitle:function(){return c}});var t=a(63366),n=(a(67294),a(64983)),i=a(28819),o=["components"],c="Spring Boot integration",l={},p=function(e){return function(r){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",r)}},s=p("Tip"),m=p("RequiredDependencies"),d={pageTitle:c,_frontmatter:l},u=i.Z;function h(e){var r=e.components,a=(0,t.Z)(e,o);return(0,n.kt)(u,Object.assign({},d,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"spring-boot-integration",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h1",href:"#spring-boot-integration","aria-label":"spring boot integration permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Spring Boot integration"),(0,n.kt)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"#integrating-with-spring-mvc-with-tomcat"},"Integrating with Spring MVC (with Tomcat)"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"#integrating-with-spring-boot"},"Integrating with Spring Boot"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"#internal-services"},"Internal services")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#documentation-service"},"Documentation service")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#health-check"},"Health check")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#collecting-metrics"},"Collecting metrics")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#actuator-support"},"Actuator support")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"#other-bean-configurations"},"Other bean configurations")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#typearmeriaserverconfigurator-vs-consumerserverbuilder"},"type://ArmeriaServerConfigurator vs Consumer<ServerBuilder>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#typedependencyinjector"},"type://DependencyInjector"))))),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://spring.io/"},"Spring")," framework provides powerful features necessary for building web applications\nsuch as dependency injection, data binding, AOP and transaction management.\nBy integrating your Spring application with Armeria, you can serve both legacy Spring services\nand gRPC or Thrift services on the same port. Additionally, you can gradually migrate your services to Armeria\nfor improved performance."),(0,n.kt)("p",null,"Armeria provides a simple way to integrate legacy Spring Boot applications with just a few lines of code.\nFurthermore, Armeria supports several internal services for monitoring and management purposes,\nwhich can be conveniently configured through beans."),(0,n.kt)("h2",{id:"integrating-with-spring-mvc-with-tomcat",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#integrating-with-spring-mvc-with-tomcat","aria-label":"integrating with spring mvc with tomcat permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Integrating with Spring MVC (with Tomcat)"),(0,n.kt)(s,{mdxType:"Tip"},(0,n.kt)("p",null,"  Visit ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/tree/main/examples/spring-boot-tomcat"},"armeria-examples/spring-boot-tomcat")," to\nfind a fully working example.")),(0,n.kt)("p",null,"You can integrate your Spring MVC with Armeria using ",(0,n.kt)("a",{parentName:"p",href:"type://TomcatService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/tomcat/TomcatService.html"},"type://TomcatService"),".\nFirst, add the following dependency to your application."),(0,n.kt)(m,{boms:[{groupId:"com.linecorp.armeria",artifactId:"armeria-bom"}],dependencies:[{groupId:"com.linecorp.armeria",artifactId:"armeria-spring-boot3-starter"},{groupId:"com.linecorp.armeria",artifactId:"armeria-tomcat10"}],mdxType:"RequiredDependencies"}),(0,n.kt)("p",null,"Serve the embedded ",(0,n.kt)("a",{parentName:"p",href:"type://TomcatService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/tomcat/TomcatService.html"},"type://TomcatService")," via Armeria by using the ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," bean."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},'import com.linecorp.armeria.server.tomcat.TomcatService;\nimport com.linecorp.armeria.spring.ArmeriaServerConfigurator;\nimport org.apache.catalina.connector.Connector;\nimport org.springframework.boot.web.embedded.tomcat.TomcatWebServer;\nimport org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class ArmeriaConfiguration {\n   public static Connector getConnector(ServletWebServerApplicationContext applicationContext) {\n       final TomcatWebServer container = (TomcatWebServer) applicationContext.getWebServer();\n       container.start();\n       return container.getTomcat().getConnector();\n   }\n\n   @Bean\n   public TomcatService tomcatService(ServletWebServerApplicationContext applicationContext) {\n       return TomcatService.of(getConnector(applicationContext));\n   }\n\n   @Bean\n   public ArmeriaServerConfigurator armeriaServerConfigurator(TomcatService tomcatService) {\n       return sb -> sb.serviceUnder("/", tomcatService);\n   }\n}\n')),(0,n.kt)("p",null,"Add the following properties to your ",(0,n.kt)("inlineCode",{parentName:"p"},"application.yml")," (or ",(0,n.kt)("inlineCode",{parentName:"p"},"application.properties"),") file.\nThis configuration will prevent the exposure of the embedded Tomcat service and instead expose your Armeria service.\nYou can explore additional configuration options in ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaSettings:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaSettings.html"},"type://ArmeriaSettings"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"# Prevent the embedded Tomcat from opening a TCP/IP port.\nserver:\n  port: -1\n\narmeria:\n  ports:\n    - port: 8080\n      protocols:\n        - HTTP\n")),(0,n.kt)("p",null,"With this simple configuration, everything is set up. Now you can serve your legacy Spring service through Armeria.\nAlthough it may not seem like much has changed compared to before, your application is now ready to serve both RPC services\n(such as gRPC or Thrift) and RESTful services via Armeria."),(0,n.kt)("h2",{id:"integrating-with-spring-boot",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#integrating-with-spring-boot","aria-label":"integrating with spring boot permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Integrating with Spring Boot"),(0,n.kt)(s,{mdxType:"Tip"},(0,n.kt)("p",null,"  Visit ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/line/armeria-examples/tree/main/spring-boot-minimal"},"armeria-examples/spring-boot-minimal")," to\nfind a fully working example.")),(0,n.kt)("p",null,"Even if you don't utilize Spring MVC based on web servlets like Tomcat, there is still significant value in combining Spring and Armeria.\nYou can leverage the automatic configuration and dependency injection features of Spring Boot to develop an Armeria application."),(0,n.kt)("p",null,"First, you need the ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria-spring-boot3-starter")," dependency:"),(0,n.kt)(m,{boms:[{groupId:"com.linecorp.armeria",artifactId:"armeria-bom"}],dependencies:[{groupId:"com.linecorp.armeria",artifactId:"armeria-spring-boot3-starter"}],mdxType:"RequiredDependencies"}),(0,n.kt)("p",null,"Armeria's ",(0,n.kt)("a",{parentName:"p",href:"/docs/server-annotated-service"},"annotated service")," is similar to a Spring controller.\nYou can declare the annotated service as a bean and inject it into the ",(0,n.kt)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder"),".\nHere's an example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=TodoAnnotatedService.java",filename:"TodoAnnotatedService.java"},'import com.linecorp.armeria.common.HttpResponse;\nimport com.linecorp.armeria.common.HttpStatus;\nimport com.linecorp.armeria.server.annotation.*;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport java.util.List;\n\n// Make this annotated service a bean.\n@Component\n@PathPrefix("/todos")\npublic class TodoAnnotatedService {\n\n    private final TodoRepository todoRepository;\n\n    // Automatically injected by Spring\n    @Autowired\n    public TodoAnnotatedService(TodoRepository todoRepository) {\n        this.todoRepository = todoRepository;\n    }\n\n    @Get("/:id")\n    public HttpResponse get(@Param Integer id) {\n        Todo todo = todoRepository.get(id);\n        if (todo == null) {\n            return HttpResponse.of(HttpStatus.NO_CONTENT);\n        }\n        return HttpResponse.ofJson(todo);\n    }\n\n    @Post\n    public HttpResponse create(Todo todo) {\n        final int result = todoRepository.create(todo);\n        if (result == 0) {\n            return HttpResponse.of(HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n        return HttpResponse.of(HttpStatus.CREATED);\n    }\n}\n')),(0,n.kt)("p",null,"To inject the annotated service into the ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," bean, you can follow this approach:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},'@Bean\npublic ArmeriaServerConfigurator armeriaServerConfigurator(TodoAnnotatedService todoAnnotatedService) {\n   return serverBuilder -> {\n       serverBuilder.serviceUnder("/docs", new DocService())\n                    .decorator(LoggingService.newDecorator())\n                    .annotatedService("/api", todoAnnotatedService);\n   };\n}\n')),(0,n.kt)("p",null,"The following configuration prevents the execution of Spring's embedded web server and instead runs Armeria."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"# See https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.webserver.disable.\n# The application should not run as a web application and should not start an embedded web server.\nspring.main.web-application-type: none\n\narmeria:\n  ports:\n    - port: 8080\n      protocols:\n        - http\n")),(0,n.kt)("h2",{id:"internal-services",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#internal-services","aria-label":"internal services permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Internal services"),(0,n.kt)("p",null,"Armeria supports four internal services that are useful for monitoring and management purposes.\nYou can enable these services by including their service IDs in your ",(0,n.kt)("inlineCode",{parentName:"p"},"application.yml")," (or ",(0,n.kt)("inlineCode",{parentName:"p"},"application.properties"),") file.\nService ids are ",(0,n.kt)("inlineCode",{parentName:"p"},"docs"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"health"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"metrics"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"actuator"),". You can include one or multiple service IDs based on your requirements."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"armeria:\n  ports:\n    - port: 8080\n      protocols:\n        - HTTP\n  # Add the below configuration\n  internal-services:\n    include: docs, health, metrics, actuator  # you can add all of the services using `all`\n    port: 8090\n")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.internal-services.port")," configuration is not necessary. If the port is not specified or left as ",(0,n.kt)("inlineCode",{parentName:"p"},"0"),",\nArmeria will automatically bind the internal service to a random unused port.\nIt is acceptable to set the port of the internal service to be the same as one of the armeria.ports."),(0,n.kt)(s,{mdxType:"Tip"},(0,n.kt)("p",null,"  The internal services should be configured using the beans described in the documentation.\nAvoid directly using the ",(0,n.kt)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder")," method with ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"Consumer<ServerBuilder>")," beans,\nas they may be overridden by Armeria's automatic configuration.")),(0,n.kt)("h3",{id:"documentation-service",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h3",href:"#documentation-service","aria-label":"documentation service permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Documentation service"),(0,n.kt)("p",null,"Armeria has its own ",(0,n.kt)("a",{parentName:"p",href:"/docs/server-docservice"},"documentation service")," that offers useful features.\nFor instance, it allows you to test RPC protocols in a web browser console, similar to ",(0,n.kt)("a",{parentName:"p",href:"https://swagger.io/"},"Swagger"),"."),(0,n.kt)("p",null,"Add the service ID ",(0,n.kt)("inlineCode",{parentName:"p"},"docs")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.internal-services.include")," configuration.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.docs-path")," is not necessary, as the default path for the documentation service is ",(0,n.kt)("inlineCode",{parentName:"p"},"/internal/docs"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"armeria:\n  internal-services:\n    include: docs\n  docs-path: /internal/docs\n")),(0,n.kt)("p",null,"To add custom configuration to your documentation service, you can utilize the ",(0,n.kt)("a",{parentName:"p",href:"type://DocServiceConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/DocServiceConfigurator.html"},"type://DocServiceConfigurator")," bean."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},'@Bean\npublic DocServiceConfigurator docServiceConfigurator() {\n    return docServiceBuilder -> docServiceBuilder\n            .exampleRequests(TodoAnnotatedService.class, "create", "{\\"id\\":\\"42\\", \\"value\\":\\"foo bar\\"}");\n}\n')),(0,n.kt)("h3",{id:"health-check",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h3",href:"#health-check","aria-label":"health check permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Health check"),(0,n.kt)("p",null,"To customize the health check operation, you can utilize the ",(0,n.kt)("a",{parentName:"p",href:"type://HealthChecker:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/healthcheck/HealthChecker.html"},"type://HealthChecker")," bean."),(0,n.kt)("p",null,"Add the service ID ",(0,n.kt)("inlineCode",{parentName:"p"},"health")," to the ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.internal-services.include")," configuration.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.health-check-path")," is not necessary, as the default path for the health check service is ",(0,n.kt)("inlineCode",{parentName:"p"},"/internal/healthcheck"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"armeria:\n  internal-services:\n    include: health\n  health-check-path: /internal/healthcheck\n")),(0,n.kt)("p",null,"You can create a ",(0,n.kt)("a",{parentName:"p",href:"type://HealthChecker:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/healthcheck/HealthChecker.html"},"type://HealthChecker")," bean that implements your custom health check logic.\nFor example, the below code determines if the server is healthy using Tomcat connector state."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},"@Bean\npublic HealthChecker tomcatConnectorHealthChecker(ServletWebServerApplicationContext applicationContext) {\n    final Connector connector = getConnector(applicationContext);\n    return () -> connector.getState().isAvailable();\n}\n")),(0,n.kt)("p",null,"You can also add custom configuration to the service using the ",(0,n.kt)("a",{parentName:"p",href:"type://HealthCheckServiceConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/HealthCheckServiceConfigurator.html"},"type://HealthCheckServiceConfigurator")," bean, similar to the documentation service."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},"@Bean\npublic HealthCheckServiceConfigurator healthCheckServiceConfigurator() {\n    return healthCheckServiceBuilder -> healthCheckServiceBuilder\n            .updatable(true)\n            .startUnhealthy();\n}\n")),(0,n.kt)("h3",{id:"collecting-metrics",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h3",href:"#collecting-metrics","aria-label":"collecting metrics permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Collecting metrics"),(0,n.kt)("p",null,"Armeria provides a ",(0,n.kt)("a",{parentName:"p",href:"/docs/advanced-metrics"},"built-in metric service")," using the ",(0,n.kt)("a",{parentName:"p",href:"https://micrometer.io"},"Micrometer")," library.\nYou can expose the collected metrics to various monitoring systems, such as ",(0,n.kt)("a",{parentName:"p",href:"https://prometheus.io"},"Prometheus")," or ",(0,n.kt)("a",{parentName:"p",href:"https://metrics.dropwizard.io/"},"Dropwizard"),"\nfor comprehensive monitoring and analysis."),(0,n.kt)("p",null,"To include the metrics service, simply add the service ID ",(0,n.kt)("inlineCode",{parentName:"p"},"metrics")," to the ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.internal-services.include")," configuration.\nYou do not need to specify ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.enable-metrics")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.metrics-path")," as the default path for the metrics service is ",(0,n.kt)("inlineCode",{parentName:"p"},"/internal/metrics"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"armeria:\n  internal-services:\n    include: metrics\n  metrics-path: /internal/metrics\n  enable-metrics: true  # default is true\n")),(0,n.kt)(s,{mdxType:"Tip"},(0,n.kt)("p",null,"  The current internal metric service in Armeria supports automatic configuration for Prometheus and Dropwizard monitoring systems.\nIf you intend to use a different monitoring system, you will need to utilize the ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," or\n",(0,n.kt)("inlineCode",{parentName:"p"},"Consumer<ServerBuilder>")," bean and set ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.enable-metrics")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"false")," to disable the auto-configured service.")),(0,n.kt)("p",null,"We will illustrate the bean configuration using an example with the Prometheus monitoring system.\nFirst, create a ",(0,n.kt)("a",{parentName:"p",href:"https://www.javadoc.io/doc/io.micrometer/micrometer-registry-prometheus/latest/io/micrometer/prometheus/PrometheusMeterRegistry.html"},(0,n.kt)("inlineCode",{parentName:"a"},"PrometheusMeterRegistry"))," bean.\nIf you are using a different monitoring system, create a bean of ",(0,n.kt)("a",{parentName:"p",href:"https://www.javadoc.io/doc/io.micrometer/micrometer-core/latest/io/micrometer/core/instrument/MeterRegistry.html"},(0,n.kt)("inlineCode",{parentName:"a"},"MeterRegistry"))," type."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},"@Bean\npublic PrometheusMeterRegistry prometheusMeterRegistry() {\n    return new PrometheusMeterRegistry(PrometheusConfig.DEFAULT);\n}\n")),(0,n.kt)(s,{mdxType:"Tip"},(0,n.kt)("p",null,"  If you are using ",(0,n.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/current/actuator-api/htmlsingle/"},"Spring Boot Actuator"),",\nthe ",(0,n.kt)("inlineCode",{parentName:"p"},"PrometheusMeterRegistry")," bean will already be configured by the actuator. Therefore, you should not create the above bean\nto avoid potential problems.")),(0,n.kt)("p",null,"To add a prefix to the ID of collected metrics, you can use the ",(0,n.kt)("a",{parentName:"p",href:"type://MeterIdPrefixFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/metric/MeterIdPrefixFunction.html"},"type://MeterIdPrefixFunction")," bean.\nAdditionally, you can customize the configuration of the service by utilizing the ",(0,n.kt)("a",{parentName:"p",href:"type://MetricCollectingServiceConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/MetricCollectingServiceConfigurator.html"},"type://MetricCollectingServiceConfigurator")," bean."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},'@Bean\npublic MeterIdPrefixFunction meterIdPrefixFunction() {\n    return MeterIdPrefixFunction.ofDefault("my.armeria.service");\n}\n\n@Bean\npublic MetricCollectingServiceConfigurator metricCollectingServiceConfigurator() {\n    return metricCollectingServiceBuilder -> metricCollectingServiceBuilder\n            .successFunction((context, log) -> {\n                final int statusCode = log.responseHeaders().status().code();\n                // Treat a 404 response as a success\n                return statusCode >= 200 && statusCode < 400 || statusCode == 404;\n            });\n}\n')),(0,n.kt)("h3",{id:"actuator-support",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h3",href:"#actuator-support","aria-label":"actuator support permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Actuator support"),(0,n.kt)("p",null,"If you are using ",(0,n.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/current/actuator-api/htmlsingle/"},"Spring Boot Actuator"),",\nyou can serve it at the ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.internal-services.port"),".\nThe internal services may also be served at the ",(0,n.kt)("inlineCode",{parentName:"p"},"management.server.port")," if specified."),(0,n.kt)("p",null,"In order to use the actuator service, you need to first add the following dependencies."),(0,n.kt)(m,{dependencies:[{groupId:"com.linecorp.armeria",artifactId:"armeria-spring-boot3-actuator-starter"}],mdxType:"RequiredDependencies"}),(0,n.kt)("p",null,"To include the actuator service, add the service ID ",(0,n.kt)("inlineCode",{parentName:"p"},"actuator")," to the ",(0,n.kt)("inlineCode",{parentName:"p"},"armeria.internal-services.include")," configuration."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"armeria:\n  internal-services:\n    include: actuator\n")),(0,n.kt)("h2",{id:"other-bean-configurations",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#other-bean-configurations","aria-label":"other bean configurations permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Other bean configurations"),(0,n.kt)("p",null,"We will provide an explanation of some additional bean configurations that can be helpful to know."),(0,n.kt)("h3",{id:"typearmeriaserverconfigurator-vs-consumerserverbuilder",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h3",href:"#typearmeriaserverconfigurator-vs-consumerserverbuilder","aria-label":"typearmeriaserverconfigurator vs consumerserverbuilder permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),(0,n.kt)("a",{parentName:"h3",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," vs ",(0,n.kt)("inlineCode",{parentName:"h3"},"Consumer<ServerBuilder>")),(0,n.kt)("p",null,"You can use both ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Consumer<ServerBuilder>")," to configure the server using ",(0,n.kt)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder"),".\nIn fact, both are essentially same functions of ",(0,n.kt)("inlineCode",{parentName:"p"},"ServerBuilder -> void"),". The most significant difference lies in the order in which they are applied to the server.\nArmeria first configures all ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," beans and subsequently applies all ",(0,n.kt)("inlineCode",{parentName:"p"},"Consumer<ServerBuilder>")," beans."),(0,n.kt)("p",null,"If you have multiple ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"Consumer<ServerBuilder>")," beans, you can set the order\nusing the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/annotation/Order.html"},"@Order")," annotation.\nIt is important to note that the default order of ",(0,n.kt)("a",{parentName:"p",href:"type://ArmeriaServerConfigurator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/spring/ArmeriaServerConfigurator.html"},"type://ArmeriaServerConfigurator")," is zero,\nand not ",(0,n.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/Ordered.html#LOWEST_PRECEDENCE"},(0,n.kt)("inlineCode",{parentName:"a"},"Ordered.LOWEST_PRECEDENCE")),"."),(0,n.kt)("h3",{id:"typedependencyinjector",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h3",href:"#typedependencyinjector","aria-label":"typedependencyinjector permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),(0,n.kt)("a",{parentName:"h3",href:"type://DependencyInjector:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/DependencyInjector.html"},"type://DependencyInjector")),(0,n.kt)("p",null,"Armeria provides the ability to manually inject dependencies using ",(0,n.kt)("a",{parentName:"p",href:"type://DependencyInjector:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/DependencyInjector.html"},"type://DependencyInjector"),".\nYou can refer to the example in the ",(0,n.kt)("a",{parentName:"p",href:"/release-notes/1.17.0"},"1.17.0 release notes")," for more details."),(0,n.kt)("p",null,"Create the ",(0,n.kt)("a",{parentName:"p",href:"type://DependencyInjector:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/DependencyInjector.html"},"type://DependencyInjector")," bean, which will replace the default dependency injector.\nIt's important to note that in this case dependencies that were automatically injected before may not be injected anymore."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=ArmeriaConfiguration.java",filename:"ArmeriaConfiguration.java"},'@Bean\npublic DependencyInjector dependencyInjector() {\n    return DependencyInjector.ofSingletons(\n            new BadRequestExceptionHandler(),\n            new AuthDecorator((ctx, req) ->\n                    CompletableFuture.supplyAsync(() -> req.headers().get(AUTHORIZATION).equals("auth-token"))\n            )\n    );\n}\n')),(0,n.kt)("p",null,"You can also utilize a dependency injector that leverages the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html"},(0,n.kt)("inlineCode",{parentName:"a"},"BeanFactory")),"\nof Spring. After configuring the properties, you can effortlessly create beans to be injected, similar to how you would do it in a Spring-based setup."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"filename=application.yml",filename:"application.yml"},"armeria:\n  enable-auto-injection: true\n")))}h.isMDXComponent=!0},28819:function(e,r,a){a.d(r,{Z:function(){return c}});var t=a(25444),n=a(67294),i=JSON.parse('{"root":["index","setup"],"Useful links":{"Tutorials":"/tutorials","Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-graphql","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse","server-service-registration","server-multipart","server-timeouts"],"Client":["client-http","client-thrift","client-grpc","client-factory","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-streaming-backpressure","advanced-structured-logging-kafka","advanced-metrics","advanced-unit-testing","advanced-production-checklist","advanced-saml","advanced-spring-boot-integration","advanced-spring-webflux-integration","advanced-dropwizard-integration","advanced-kotlin","advanced-scala","advanced-scalapb","advanced-flags-provider","advanced-zipkin","advanced-client-interoperability"]}'),o=a(46731),c=function(e){var r=(0,t.useStaticQuery)("1217743243").allMdx.nodes;return n.createElement(o.Z,Object.assign({},e,{candidateMdxNodes:r,index:i,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}}}]);
//# sourceMappingURL=component---src-pages-docs-advanced-spring-boot-integration-mdx-d713fe211d437e9617e4.js.map