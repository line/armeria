final def SPRING_BOOT_VERSION = '1.5.22.RELEASE'

evaluationDependsOn ':spring:boot-autoconfigure'


dependencies {
    // To let a user choose between thrift and thrift0.9.
    compileOnly project(':thrift')
    implementation project(':logback')

    implementation 'io.micrometer:micrometer-spring-legacy'

    // TODO(anuraaga): Consider removing these since this module does not have related functionality.
    optionalApi 'io.micrometer:micrometer-registry-prometheus'
    optionalApi 'io.dropwizard.metrics:metrics-json'

    api 'javax.inject:javax.inject'
    compileOnly 'javax.validation:validation-api'
    api("org.springframework.boot:spring-boot-starter") {
        version {
            // Will fail the build if the override doesn't work
            strictly SPRING_BOOT_VERSION
        }
    }
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor") {
        version {
            // Will fail the build if the override doesn't work
            strictly SPRING_BOOT_VERSION
        }
    }

    testImplementation project(':grpc')
    testImplementation project(':thrift')
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        version {
            // Will fail the build if the override doesn't work
            strictly SPRING_BOOT_VERSION
        }
    }
}

// Use the sources from ':spring:boot-autoconfigure'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
def autoconfigureProjectDir = "${rootProject.projectDir}/spring/boot-autoconfigure"
tasks.compileJava.source "${autoconfigureProjectDir}/src/main/java"
tasks.processResources.from "${autoconfigureProjectDir}/src/main/resources"
tasks.compileTestJava.source "${autoconfigureProjectDir}/src/test/java",
        "${autoconfigureProjectDir}/gen-src/test/grpc",
        "${autoconfigureProjectDir}/gen-src/test/java"
tasks.processTestResources.from "${autoconfigureProjectDir}/src/test/resources"
tasks.sourcesJar.from "${autoconfigureProjectDir}/src/main/java"
tasks.sourcesJar.from "${autoconfigureProjectDir}/src/main/resources"
tasks.javadoc.source "${autoconfigureProjectDir}/src/main/java"

tasks.compileTestJava.dependsOn(project(':spring:boot-autoconfigure').tasks.compileTestThrift)
tasks.compileTestJava.dependsOn(project(':spring:boot-autoconfigure').tasks.generateTestProto)

// Disable checkstyle because it's checked by ':spring:boot-autoconfigure'.
tasks.withType(Checkstyle) {
    onlyIf { false }
}
