name: Upload Gradle build scans to ge.armeria.dev

on:
  workflow_run:
    workflows: [CI]
    types:
      - completed

env:
  LC_ALL: "en_US.UTF-8"
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  RUN_ID: ${{ github.event.workflow_run.id }}
  COMMIT_SHA: ${{ github.event.workflow_run.head_sha }}
  # Used by Octokit
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  upload-gradle-build-scan:
    name: Upload Gradle build scans
    if: github.repository == 'line/armeria'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - id: setup-jdk-19
        name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow_conclusion: ""
          run_id: ${{ env.RUN_ID }}
          name: build-scan.*
          name_is_regexp: true
          path: build-scans
          check_artifacts: true
          search_artifacts: true

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - id: get-pr-number-by-sha
        name: Get PR number by SHA
        working-directory: .github/actions
        run: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          npm install
          npm run get-pr-number-by-sha

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - id: upload-build-scans
        name: Upload build scans
        run: |
          DOWNLOAD_DIR="build-scans/"
          BUILD_SCAN_DIR="${HOME}/.gradle/build-scan-data"
          BUILD_SCANS=""

          echo "## Build ScanÂ®" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"

          for SCAN in $(ls $DOWNLOAD_DIR) ; do
            mkdir -p $BUILD_SCAN_DIR
            echo "ðŸšš Copying build scan: ${DOWNLOAD_DIR}${SCAN}/ to $BUILD_SCAN_DIR ..."
            cp -r ${DOWNLOAD_DIR}${SCAN}/* $BUILD_SCAN_DIR

            JOB_NAME=$(echo ${SCAN} | sed 's/build-scan-\(.*\)/\1/')
            echo "ðŸ“¤ Uploading build scan for job ${JOB_NAME} ..."
            ./gradlew --no-daemon --stacktrace clean buildScanPublishPrevious
            echo "âœ… Published build scan: ${JOB_NAME}"

            BUILD_SCANS="${JOB_NAME} $(cat build/build-scan-url.txt),${BUILD_SCANS}"
            echo "- [${JOB_NAME}]($(cat build/build-scan-url.txt))" >> "$GITHUB_STEP_SUMMARY"

            rm -rf $BUILD_SCAN_DIR
          done

          echo "BUILD_SCANS=${BUILD_SCANS}" >> "$GITHUB_OUTPUT"
        shell: bash

      - id: create-or-update-comment
        name: Create or update comment
        if: steps.get-pr-number-by-sha.outputs.pr_number
        working-directory: .github/actions
        run: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          npm run comment-build-scan
        env:
          BUILD_SCANS: ${{ steps.upload-build-scans.outputs.BUILD_SCANS }}
          PR_NUMBER: ${{ steps.get-pr-number-by-sha.outputs.pr_number }}
