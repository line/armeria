buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${managedVersions['org.springframework.boot:spring-boot-dependencies']}"
        classpath "io.spring.gradle:dependency-management-plugin:${managedVersions['io.spring.gradle:dependency-management-plugin']}"
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    implementation project(':spring:boot-starter')
    implementation 'org.hibernate.validator:hibernate-validator'

    implementation "com.spotify:completable-futures:${managedVersions['com.spotify:completable-futures']}"
    implementation "it.unimi.dsi:fastutil:${managedVersions['it.unimi.dsi:fastutil']}"
    implementation "com.google.guava:guava:${managedVersions['com.google.guava:guava']}"
    implementation "com.google.code.findbugs:jsr305:${managedVersions['com.google.code.findbugs:jsr305']}"
    implementation "org.jctools:jctools-core:${managedVersions['org.jctools:jctools-core']}"
    implementation "org.reflections:reflections:${managedVersions['org.reflections:reflections']}"
    implementation "org.bouncycastle:bcprov-jdk15on:${managedVersions['org.bouncycastle:bcprov-jdk15on']}"
    implementation "javax.inject:javax.inject:${managedVersions['javax.inject:javax.inject']}"

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // Preprocessor that enables you to use JavaDoc to add description to REST API parameters.
    // If you don't want to use it, you can use the annotation
    // com.linecorp.armeria.server.annotation.Description otherwise.
    annotationProcessor project(':annotation-processor')

    runtimeOnly project(':spring:boot-actuator-starter')

    testImplementation 'net.javacrumbs.json-unit:json-unit-fluent'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
