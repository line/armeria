// This module builds and publishes 'armeria-thrift0.15', which is compiled with
// the source code of ':thrift0.13' and ':thrift0.14.0'.
final def THRIFT_VERSION = '0.15.0'

dependencies {
    api("org.apache.thrift:libthrift") {
        version {
            // Will fail the build if the override doesn't work
            strictly THRIFT_VERSION
        }
    }

    api 'javax.annotation:javax.annotation-api'

    // Jetty, for testing TServlet interoperability.
    testImplementation 'org.eclipse.jetty:jetty-webapp'
    testImplementation 'org.eclipse.jetty.http2:http2-server'

    // Dropwizard and Prometheus, for testing metrics integration
    testImplementation 'io.dropwizard.metrics:metrics-core'
    testImplementation 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'io.prometheus:simpleclient_common'
}

// Use the sources from ':thrift0.13' and ':thrift0.14'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
def thrift013ProjectDir = "${rootProject.projectDir}/thrift0.13"
def thrift014ProjectDir = "${rootProject.projectDir}/thrift0.14"

// Copy common files from ':thrift0.13' and ':thrift0.14' to gen-src directory
// in order to use them as a source set.
task generateSources(type: Copy) {
    from("${thrift013ProjectDir}/src/main/java") {
        exclude '**/TByteBufTransport.java'
        exclude '**/common/thrift/package-info.java'
    }
    from "${thrift014ProjectDir}/src/main/java"
    into "${project.ext.genSrcDir}/main/java"
}

task generateTestSources(type: Copy) {
    from("${thrift013ProjectDir}/src/test/java") {
        exclude '**/THttp2Client.java'
    }
    from "${thrift014ProjectDir}/src/test/java"
    into "${project.ext.genSrcDir}/test/java"
}

ext {
    testThriftSrcDirs = ["$thrift013ProjectDir/src/test/thrift"]
}

tasks.generateSources.dependsOn(generateTestSources)
tasks.compileJava.dependsOn(generateSources)
tasks.compileTestJava.dependsOn(generateSources)

tasks.processResources.from "${thrift013ProjectDir}/src/main/resources"
tasks.processTestResources.from "${thrift013ProjectDir}/src/test/resources"
tasks.sourcesJar.from "${thrift013ProjectDir}/src/main/resources"

// Keep the original Guava references in ThriftListenableFuture,
// which is the only place we expose Guava classes in our public API.
// NB: Keep this same with ':thrift0.13'.
tasks.shadedJar.exclude 'com/linecorp/armeria/common/thrift/ThriftListenableFuture*'
tasks.shadedJar.doLast {
    ant.jar(update: true, destfile: tasks.shadedJar.archivePath) {
        sourceSets.main.output.classesDirs.each { classesDir ->
            fileset(dir: "$classesDir",
                    includes: 'com/linecorp/armeria/common/thrift/ThriftListenableFuture*')
        }
    }
}
