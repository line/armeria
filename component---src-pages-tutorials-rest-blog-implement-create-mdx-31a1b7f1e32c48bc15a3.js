"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[1920],{59806:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return p},default:function(){return v},pageTitle:function(){return l}});var r,n=a(63366),o=(a(67294),a(64983)),i=a(89791),s=["components"],l="Implementing CREATE operation",p={},c=(r="TutorialSteps",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),m={pageTitle:l,_frontmatter:p},h=i.Z;function v(e){var t=e.components,a=(0,n.Z)(e,s);return(0,o.kt)(h,Object.assign({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"implementing-create-operation",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h1",href:"#implementing-create-operation","aria-label":"implementing create operation permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Implementing CREATE operation"),(0,o.kt)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#what-you-need"},"What you need"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#1-map-http-method"},"1. Map HTTP method"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#2-handle-parameters"},"2. Handle parameters")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#write-a-request-converter"},"Write a request converter")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#register-a-request-converter"},"Register a request converter")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#3-implement-service-code"},"3. Implement service code"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#4-return-response"},"4. Return response"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#5-create-a-test-file"},"5. Create a test file"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#6-register-a-serverextension"},"6. Register a ServerExtension"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#7-test-creating-a-blog-post"},"7. Test creating a blog post"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#next-step"},"Next step")))),(0,o.kt)("p",null,"In this step, you'll write a service method for creating a blog post and a test method to verify the service method.\nBy completing this step, you'll learn to map your service with the HTTP POST (",(0,o.kt)("a",{parentName:"p",href:"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html"},"type://@Post"),") method,\nmake your own request converter (",(0,o.kt)("a",{parentName:"p",href:"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html"},"type://@RequestConverter"),"), and utilize a server extension for testing (",(0,o.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension"),")."),(0,o.kt)(c,{current:4,mdxType:"TutorialSteps"}),(0,o.kt)("h2",{id:"what-you-need",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#what-you-need","aria-label":"what you need permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What you need"),(0,o.kt)("p",null,"You need to have the following files obtained from previous steps.\nYou can always ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/line/armeria-examples/blob/main/tutorials/rest-api-annotated-service/src/main/java/example/armeria/server/blog/"},"download")," the full version, instead of creating one yourself."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Main.java")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BlogPost.java")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BlogService.java"))),(0,o.kt)("h2",{id:"1-map-http-method",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#1-map-http-method","aria-label":"1 map http method permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"1. Map HTTP method"),(0,o.kt)("p",null,"Let's start ",(0,o.kt)("a",{parentName:"p",href:"/docs/server-annotated-service#mapping-http-service-methods"},"mapping the HTTP POST method")," with our service method:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Declare a service method, ",(0,o.kt)("inlineCode",{parentName:"li"},"createBlogPost()"),", in the class ",(0,o.kt)("inlineCode",{parentName:"li"},"BlogService"),"."),(0,o.kt)("li",{parentName:"ol"},"Map this service method with the HTTP POST method by adding the ",(0,o.kt)("a",{parentName:"li",href:"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html"},"type://@Post")," annotation."),(0,o.kt)("li",{parentName:"ol"},"Bind the endpoint ",(0,o.kt)("inlineCode",{parentName:"li"},"/blogs")," to the method.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=6",filename:"BlogService.java",highlight:"6"},'import com.linecorp.armeria.server.annotation.Post;\n\npublic final class BlogService {\n  ...\n\n  @Post("/blogs")\n  public void createBlogPost(BlogPost blogPost) {}\n}\n')),(0,o.kt)("h2",{id:"2-handle-parameters",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#2-handle-parameters","aria-label":"2 handle parameters permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"2. Handle parameters"),(0,o.kt)("p",null,"Let's receive blog post information through a request body. Armeria's ",(0,o.kt)("a",{parentName:"p",href:"/docs/server-annotated-service#converting-an-http-request-to-a-java-object"},"request converter")," converts request parameters in HTTP messages into Java objects for you. In the request converter, we define what keys of a JSON object to map with what properties of a Java object."),(0,o.kt)("p",null,"Let's first ",(0,o.kt)("a",{parentName:"p",href:"#write-a-request-converter"},"write a request converter")," and then ",(0,o.kt)("a",{parentName:"p",href:"#register-a-request-converter"},"register the request converter")," to the service method."),(0,o.kt)("h3",{id:"write-a-request-converter",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h3",href:"#write-a-request-converter","aria-label":"write a request converter permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Write a request converter"),(0,o.kt)("p",null,"Armeria's ",(0,o.kt)("a",{parentName:"p",href:"/docs/server-annotated-service#converting-an-http-request-to-a-java-object"},"request converter")," converts a request body from a client into a Java object for you."),(0,o.kt)("p",null,"We can use Armeria's default ",(0,o.kt)("a",{parentName:"p",href:"type://JacksonRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/JacksonRequestConverterFunction.html"},"type://JacksonRequestConverterFunction")," as is, but here let's give a go at customizing a request converter for our blog post requests. We want to convert blog post details into a Java object."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"BlogPostRequestConverter.java")," file and declare a class, implementing the ",(0,o.kt)("a",{parentName:"p",href:"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html"},"type://RequestConverterFunction")," interface. For the sake of simplicity, generate impromptu IDs for this tutorial."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogRequestConverter.java",filename:"BlogRequestConverter.java"},"package example.armeria.server.blog;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.linecorp.armeria.server.annotation.RequestConverterFunction;\nimport java.util.concurrent.atomic.AtomicInteger;\n\nfinal class BlogPostRequestConverter implements RequestConverterFunction {\n  private static final ObjectMapper mapper = new ObjectMapper();\n  private AtomicInteger idGenerator = new AtomicInteger(); // Blog post ID\n}\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add a method retrieving a value of a given key in a JSON object:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogRequestConverter.java highlight=6-12",filename:"BlogRequestConverter.java",highlight:"6-12"},'import com.fasterxml.jackson.databind.JsonNode;\n\nfinal class BlogPostRequestConverter implements RequestConverterFunction {\n  ...\n\n  static String stringValue(JsonNode jsonNode, String field) {\n    JsonNode value = jsonNode.get(field);\n    if (value == null) {\n      throw new IllegalArgumentException(field + " is missing!");\n    }\n    return value.textValue();\n  }\n}\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Customize the default ",(0,o.kt)("inlineCode",{parentName:"p"},"convertRequest()")," method as follows."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogRequestConverter.java highlight=10-22",filename:"BlogRequestConverter.java",highlight:"10-22"},'import com.linecorp.armeria.server.ServiceRequestContext;\nimport com.linecorp.armeria.common.AggregatedHttpRequest;\nimport com.linecorp.armeria.common.annotation.Nullable;\nimport java.lang.reflect.ParameterizedType;\n\nfinal class BlogPostRequestConverter implements RequestConverterFunction {\n  ...\n\n  @Override\n  public Object convertRequest(ServiceRequestContext ctx,\n    AggregatedHttpRequest request, Class<?> expectedResultType,\n    @Nullable ParameterizedType expectedParameterizedResultType)\n      throws Exception {\n    if (expectedResultType == BlogPost.class) {\n      JsonNode jsonNode = mapper.readTree(request.contentUtf8());\n      int id = idGenerator.getAndIncrement();\n      String title = stringValue(jsonNode, "title");\n      String content = stringValue(jsonNode, "content");\n      return new BlogPost(id, title, content); // Create an instance of BlogPost object\n    }\n    return RequestConverterFunction.fallthrough();\n  }\n  ...\n}\n')))),(0,o.kt)("h3",{id:"register-a-request-converter",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h3",href:"#register-a-request-converter","aria-label":"register a request converter permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Register a request converter"),(0,o.kt)("p",null,"In this step, assign the ",(0,o.kt)("a",{parentName:"p",href:"#write-a-request-converter"},"request converter we customized")," to our service method. Annotate the service method with ",(0,o.kt)("a",{parentName:"p",href:"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html"},"type://@RequestConverter")," and specify the ",(0,o.kt)("a",{parentName:"p",href:"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html"},"type://RequestConverterFunction")," class as ",(0,o.kt)("inlineCode",{parentName:"p"},"BlogPostRequestConverter.class"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=7",filename:"BlogService.java",highlight:"7"},'import com.linecorp.armeria.server.annotation.RequestConverter;\n\npublic final class BlogService {\n  ...\n\n  @Post("/blogs")\n  @RequestConverter(BlogPostRequestConverter.class)\n  public void createBlogPost(BlogPost blogPost) {\n    // Implement blog service\n  }\n}\n')),(0,o.kt)("h2",{id:"3-implement-service-code",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#3-implement-service-code","aria-label":"3 implement service code permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"3. Implement service code"),(0,o.kt)("p",null,"When the request for creation is received, our request converter creates an instance of a blog post object for us. We want to save the blog post object in the map (",(0,o.kt)("inlineCode",{parentName:"p"},"blogPosts"),") created in the ",(0,o.kt)("inlineCode",{parentName:"p"},"BlogService")," class."),(0,o.kt)("p",null,"Let's store the blog post information in the map by adding line 4, in the ",(0,o.kt)("inlineCode",{parentName:"p"},"createBlogPost()")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=4 showlineno=true",filename:"BlogService.java",highlight:"4",showlineno:"true"},'@Post("/blogs")\n@RequestConverter(BlogPostRequestConverter.class)\npublic void createBlogPost(BlogPost blogPost) {\n  blogPosts.put(blogPost.getId(), blogPost);\n}\n')),(0,o.kt)("h2",{id:"4-return-response",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#4-return-response","aria-label":"4 return response permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"4. Return response"),(0,o.kt)("p",null,"Now, it's time to return a response to our client. As the response, return the information received, with additional information including the ID of the post, created time, plus the modified time which would be identical to the created\ntime."),(0,o.kt)("p",null,"Let's return a response for blog post creation:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Replace the return type of the ",(0,o.kt)("inlineCode",{parentName:"p"},"createBlogPost()")," method from ",(0,o.kt)("inlineCode",{parentName:"p"},"void")," to ",(0,o.kt)("a",{parentName:"p",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create and return an HTTP response using Armeria's ",(0,o.kt)("a",{parentName:"p",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse")," with the information of the post created."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=5,7",filename:"BlogService.java",highlight:"5,7"},"import com.linecorp.armeria.common.HttpResponse;\n\npublic final class BlogService {\n  ...\n  public HttpResponse createBlogPost(BlogPost blogPost) {\n    ...\n    return HttpResponse.ofJson(blogPost);\n  }\n}\n")))),(0,o.kt)("h2",{id:"5-create-a-test-file",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#5-create-a-test-file","aria-label":"5 create a test file permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"5. Create a test file"),(0,o.kt)("p",null,"Let's start writing test code.\nWe'll use test code to verify what we implement along the way."),(0,o.kt)("p",null,"Create the ",(0,o.kt)("inlineCode",{parentName:"p"},"BlogServiceTest.java")," file as follows.\nYou can see the full version of the file ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/line/armeria-examples/blob/main/tutorials/rest-api-annotated-service/src/test/java/example/armeria/server/blog/BlogServiceTest.java"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},"package example.armeria.server.blog;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nclass BlogServiceTest {\n  private static final ObjectMapper mapper = new ObjectMapper();\n}\n")),(0,o.kt)("h2",{id:"6-register-a-serverextension",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#6-register-a-serverextension","aria-label":"6 register a serverextension permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"6. Register a ServerExtension"),(0,o.kt)("p",null,"Armeria's ",(0,o.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension")," automatically handles set-up and tear-down of a server for testing.\nThis is convenient as it eliminates the need to execute the main method to set up a server before running our tests."),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"BlogServiceTest")," class, register a ",(0,o.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension")," as follows.\nNote that the service instance is added to the configuration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},"import org.junit.jupiter.api.extension.RegisterExtension;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport com.linecorp.armeria.testing.junit5.server.ServerExtension;\n\nclass BlogServiceTest {\n...\n  @RegisterExtension\n  static final ServerExtension server = new ServerExtension() {\n    @Override\n    protected void configure(ServerBuilder sb) throws Exception {\n      sb.annotatedService(new BlogService());\n    }\n  };\n}\n")),(0,o.kt)("h2",{id:"7-test-creating-a-blog-post",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#7-test-creating-a-blog-post","aria-label":"7 test creating a blog post permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"7. Test creating a blog post"),(0,o.kt)("p",null,"Let's test if we can create a blog post."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"BlogServiceTest")," class, add a private method as follows."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},'import java.util.Map;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.linecorp.armeria.common.HttpRequest;\nimport com.linecorp.armeria.common.MediaType;\n...\nprivate static HttpRequest createBlogPostRequest(Map<String, String> content)\n      throws JsonProcessingException {\n  return HttpRequest.builder()\n              .post("/blogs")\n              .content(MediaType.JSON_UTF_8, mapper.writeValueAsString(content))\n              .build();\n}\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add a test method as follows to test creating a blog post."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},'import static net.javacrumbs.jsonunit.fluent.JsonFluentAssert.assertThatJson;\nimport org.junit.jupiter.api.Test;\nimport com.linecorp.armeria.client.WebClient;\nimport com.linecorp.armeria.common.AggregatedHttpResponse;\n...\n@Test\nvoid createBlogPost() throws JsonProcessingException {\n    final WebClient client = WebClient.of(server.httpUri());\n    final HttpRequest request = createBlogPostRequest(Map.of("title", "My first blog",\n              "content", "Hello Armeria!"));\n    final AggregatedHttpResponse res = client.execute(request).aggregate().join();\n\n    final Map<String, Object> expected = Map.of("id", 0,\n              "title", "My first blog",\n              "content", "Hello Armeria!");\n\n    assertThatJson(res.contentUtf8()).whenIgnoringPaths("createdAt", "modifiedAt")\n              .isEqualTo(mapper.writeValueAsString(expected));\n}\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the test case on your IDE or using Gradle."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./gradlew test\n")),(0,o.kt)("p",{parentName:"li"},"The service worked as expected if you see the test case passed."))),(0,o.kt)("p",null,"You can test this also with Armeria's ",(0,o.kt)("a",{parentName:"p",href:"/docs/server-docservice"},"Documentation service"),". See ",(0,o.kt)("a",{parentName:"p",href:"/tutorials/rest/blog/add-services-to-server#using-docservice-after-adding-service-methods"},"Using DocService after adding service methods")," for instructions."),(0,o.kt)("h2",{id:"next-step",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#next-step","aria-label":"next step permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Next step"),(0,o.kt)("p",null,"In this step, we've written a method to implement a CREATE operation and used Armeria's annotations; ",(0,o.kt)("a",{parentName:"p",href:"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html"},"type://@Post")," and ",(0,o.kt)("a",{parentName:"p",href:"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html"},"type://@RequestConverter"),".\nWe've also registered ",(0,o.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension")," to our test and written a test method."),(0,o.kt)("p",null,"Next, at ",(0,o.kt)("a",{parentName:"p",href:"/tutorials/rest/blog/implement-read"},"Step 5. Implement READ"),", we'll implement a READ operation to read a\nsingle post and also multiple posts."),(0,o.kt)(c,{current:4,mdxType:"TutorialSteps"}))}v.isMDXComponent=!0},89791:function(e,t,a){a.d(t,{Z:function(){return s}});var r=a(25444),n=a(67294),o=JSON.parse('{"root":["index"],"Useful links":{"User manual":"/docs","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"REST service":["rest/blog","rest/blog/create-server","rest/blog/prepare-data-object","rest/blog/add-services-to-server","rest/blog/implement-create","rest/blog/implement-read","rest/blog/implement-update","rest/blog/implement-delete"],"gRPC service":["grpc/blog","grpc/blog/define-service","grpc/blog/run-service","grpc/blog/implement-create","grpc/blog/implement-read","grpc/blog/implement-update","grpc/blog/implement-delete"],"Thrift service":["thrift/blog","thrift/blog/define-service","thrift/blog/run-service","thrift/blog/implement-create","thrift/blog/implement-read","thrift/blog/implement-update","thrift/blog/implement-delete"]}'),i=a(46731),s=function(e){var t=(0,r.useStaticQuery)("3172452987").allMdx.nodes;return n.createElement(i.Z,Object.assign({},e,{candidateMdxNodes:t,index:o,prefix:"tutorials",menuTitle:!0,pageTitleSuffix:"Armeria tutorial"}))}}}]);
//# sourceMappingURL=component---src-pages-tutorials-rest-blog-implement-create-mdx-31a1b7f1e32c48bc15a3.js.map