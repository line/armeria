// Because 0.10, 0.11 and 0.12 are both ABI and API compatible with each other,
// we do not publish 'armeria-thrift0.10' or 'armeria-thrift0.11' but just run
// tests to make sure the classes generated by ':thrift' works with the classes
// compiled with an older version of libthrift.
//
// See also: ../thrift0.9/build.gradle

final def THRIFT_VERSION = '0.11.0'

dependencyManagement {
    dependencies {
        dependency("org.apache.thrift:libthrift:${THRIFT_VERSION}") {
            exclude group: 'org.apache.httpcomponents', name: 'httpcore'
            exclude group: 'org.apache.httpcomponents', name: 'httpclient'
        }
    }
}

dependencies {
    // Use the classes compiled with the latest libthrift,
    // but use an older version for test classes.
    testCompile(project(':thrift')) {
        exclude group: 'org.apache.thrift', module: 'libthrift'
    }
    testCompile 'org.apache.thrift:libthrift'

    // Jetty, for testing TServlet interoperability.
    testCompile 'org.eclipse.jetty:jetty-webapp'
    testCompile 'org.eclipse.jetty.http2:http2-server'

    // Dropwizard and Prometheus, for testing metrics integration
    testCompile 'io.dropwizard.metrics:metrics-core'
    testCompile 'io.prometheus:simpleclient_common'
}

// Use the test sources from ':thrift'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
tasks.compileTestJava.source "${rootProject.projectDir}/thrift/src/test/java"
tasks.processTestResources.from "${rootProject.projectDir}/thrift/src/test/resources"

// Use the old compiler.
ext {
    thriftVersion = THRIFT_VERSION.substring(0, THRIFT_VERSION.lastIndexOf('.'));
}

// Disable checkstyle because it's checked by ':thrift'.
tasks.withType(Checkstyle) {
    onlyIf { false }
}

// Make sure the correct Thrift versions are used.
afterEvaluate {
    [configurations.runtime, configurations.testRuntime].each { cfg ->
        cfg.resolvedConfiguration.resolvedArtifacts.each { artifact ->
            def group = artifact.moduleVersion.id.group
            def version = artifact.moduleVersion.id.version
            switch (group) {
                case 'org.apache.thrift':
                    assert version == THRIFT_VERSION
                    break
            }
        }
    }
}
