{"version":3,"file":"component---src-pages-docs-client-grpc-mdx-ee29ad42b215de3190b3.js","mappings":"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","sources":["webpack://armeria-site/./src/layouts/docs.tsx","webpack://armeria-site/./src/pages/docs/client-grpc.mdx"],"sourcesContent":["import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Calling a gRPC service\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"calling-a-grpc-service\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#calling-a-grpc-service\",\n        \"aria-label\": \"calling a grpc service permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Calling a gRPC service`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#exception-propagation\"\n        }}>{`Exception propagation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#see-also\"\n        }}>{`See also`}</a></li>\n    </ul>\n    <Tip mdxType=\"Tip\">\n      <p>{`Visit `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/line/armeria-examples\"\n        }}>{`armeria-examples`}</a>{` to find a fully working example.`}</p>\n    </Tip>\n  \n    <p>{`Let's assume we have the following `}<a parentName=\"p\" {...{\n        \"href\": \"https://grpc.io/\"\n      }}>{`gRPC`}</a>{` service definition, served at `}<inlineCode parentName=\"p\">{`http://127.0.0.1:8080/`}</inlineCode>{`, just like\nwhat we used in `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-grpc\"\n      }}>{`Running a gRPC service`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-protobuf\"\n      }}>{`syntax = \"proto3\";\n\npackage grpc.hello;\n\noption java_package = \"com.example.grpc.hello\";\n\nservice HelloService {\n  rpc Hello (HelloRequest) returns (HelloReply) {}\n}\n\nmessage HelloRequest {\n  string name = 1;\n}\n\nmessage HelloReply {\n  string message = 1;\n}\n`}</code></pre>\n    <p>{`Making a call starts from creating a client:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.client.grpc.GrpcClients;\n\nHelloServiceBlockingStub helloService = GrpcClients.newClient(\n        \"gproto+http://127.0.0.1:8080/\",\n        HelloServiceBlockingStub.class); // or HelloServiceFutureStub.class or HelloServiceStub.class\n\nHelloRequest request = HelloRequest.newBuilder().setName(\"Armerian World\").build();\nHelloReply reply = helloService.hello(request);\nassert reply.getMessage().equals(\"Hello, Armerian World!\");\n`}</code></pre>\n    <p>{`Note that we added the serialization format of the call using the `}<inlineCode parentName=\"p\">{`+`}</inlineCode>{` operator in the scheme part of the URI.\nBecause we are calling a `}<a parentName=\"p\" {...{\n        \"href\": \"https://grpc.io/\"\n      }}>{`gRPC`}</a>{` server, we can choose: `}<inlineCode parentName=\"p\">{`gproto`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`gjson`}</inlineCode>{`. If you are using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md\"\n      }}>{`gRPC-Web`}</a>{`,\nyou can use `}<inlineCode parentName=\"p\">{`gproto-web`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`gproto-web-text`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`gjson-web`}</inlineCode>{`.`}</p>\n    <Tip mdxType=\"Tip\">\n      <p>{`If a serialization format is not specified, `}<inlineCode parentName=\"p\">{`gproto`}</inlineCode>{` will be used by default.`}</p>\n    </Tip>\n    <p>{`Since we specified `}<inlineCode parentName=\"p\">{`HelloServiceBlockingStub.class`}</inlineCode>{` as the client type, `}<inlineCode parentName=\"p\">{`Clients.newClient()`}</inlineCode>{` will return a\nsynchronous client implementation.  If we specified `}<inlineCode parentName=\"p\">{`HelloServiceFutureStub`}</inlineCode>{`, the calling code would have\nlooked like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.google.common.util.concurrent.Futures;\nimport com.google.common.util.concurrent.ListenableFuture;\nimport com.google.common.util.concurrent.MoreExecutors;\nimport com.linecorp.armeria.client.grpc.GrpcClients;\nimport java.util.concurrent.ForkJoinPool;\n\nHelloServiceFutureStub helloService = GrpcClients.newClient(\n        \"gproto+http://127.0.0.1:8080/\",\n        HelloServiceFutureStub.class);\n\nHelloRequest request = HelloRequest.newBuilder().setName(\"Armerian World\").build();\nListenableFuture<HelloReply> future = helloService.hello(request);\n\nFutures.addCallback(future, new FutureCallback<HelloReply>() {\n    @Override\n    public void onSuccess(HelloReply result) {\n        assert result.getMessage().equals(\"Hello, Armerian World!\");\n    }\n\n    @Override\n    public void onFailure(Throwable t) {\n        t.printStackTrace();\n    }\n}, MoreExecutors.directExecutor());\n\n// You can also wait until the call is finished.\nHelloReply reply = future.get();\n`}</code></pre>\n    <p>{`The asynchronous stub uses Guava's `}<a parentName=\"p\" {...{\n        \"href\": \"https://google.github.io/guava/releases/21.0/api/docs/com/google/common/util/concurrent/ListenableFuture.html\"\n      }}>{`ListenableFuture`}</a>{` and can be operated on using methods on `}<a parentName=\"p\" {...{\n        \"href\": \"https://google.github.io/guava/releases/21.0/api/docs/com/google/common/util/concurrent/Futures.html\"\n      }}>{`Futures`}</a>{`. The\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/spotify/futures-extra\"\n      }}>{`futures-extra`}</a>{` library is very convenient for working with `}<a parentName=\"p\" {...{\n        \"href\": \"https://google.github.io/guava/releases/21.0/api/docs/com/google/common/util/concurrent/ListenableFuture.html\"\n      }}>{`ListenableFuture`}</a>{` in Java 8, including the ability\nto convert it to `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/CompletableFuture.html\"\n      }}>{`CompletableFuture`}</a>{`.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://grpc.io/\"\n      }}>{`gRPC`}</a>{` also natively supports streaming RPC. If our service definition included this method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-protobuf\"\n      }}>{`service HelloService {\n  rpc ManyHellos (stream HelloRequest) returns (stream HelloReply) {}\n}\n`}</code></pre>\n    <p>{`You can also use the builder pattern for client construction:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.HttpRequest;\nimport com.linecorp.armeria.common.HttpResponse;\nimport com.linecorp.armeria.common.grpc.GrpcSerializationFormats;\n\nHelloServiceBlockingStub helloService =\n    GrpcClients.builder(\"http://127.0.0.1:8080/\")\n           .serializationFormat(GrpcSerializationFormats.PROTO)\n           .responseTimeoutMillis(10000)\n           .decorator(LoggingClient.newDecorator())\n           .build(HelloServiceBlockingStub.class); // or HelloServiceFutureStub.class\n                                                   // or HelloServiceStub.class\n\nHelloRequest request = HelloRequest.newBuilder().setName(\"Armerian World\").build();\nHelloReply reply = helloService.hello(request);\nassert reply.getMessage().equals(\"Hello, Armerian World!\");\n`}</code></pre>\n    <p>{`As you might have noticed already, we decorated the client using `}<a parentName=\"p\" {...{\n        \"href\": \"type://LoggingClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/logging/LoggingClient.html\"\n      }}>{`type://LoggingClient`}</a>{`, which logs all\nrequests and responses. You might be interested in decorating a client using other decorators, for example\nto gather metrics. Please also refer to `}<a parentName=\"p\" {...{\n        \"href\": \"type://ClientBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/ClientBuilder.html\"\n      }}>{`type://ClientBuilder`}</a>{` for more configuration options.`}</p>\n    <h2 {...{\n      \"id\": \"exception-propagation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#exception-propagation\",\n        \"aria-label\": \"exception propagation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Exception propagation`}</h2>\n    <p>{`If you have enabled `}<inlineCode parentName=\"p\">{`Flags.verboseResponses()`}</inlineCode>{` in the server being accessed by specifying\n`}<inlineCode parentName=\"p\">{`-Dcom.linecorp.armeria.verboseResponses=true`}</inlineCode>{` system property, then any exception during processing\nin the server will be returned to the client as a `}<a parentName=\"p\" {...{\n        \"href\": \"type://StatusCauseException:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/grpc/StatusCauseException.html\"\n      }}>{`type://StatusCauseException`}</a>{` attached to the normal gRPC\n`}<inlineCode parentName=\"p\">{`Status`}</inlineCode>{`. This can be used for programmatic access to the exception that happened in the server. In this\nexample, the server always fails with `}<inlineCode parentName=\"p\">{`throw new IllegalStateException(\"Failed!\");`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.client.grpc.GrpcClients;\nimport com.linecorp.armeria.common.grpc.StatusCauseException;\n\nimport io.grpc.StatusRuntimeException;\n\nHelloServiceBlockingStub helloService = GrpcClients.newClient(\n        \"gproto+http://127.0.0.1:8080/\",\n        HelloServiceBlockingStub.class); // or HelloServiceFutureStub.class or HelloServiceStub.class\n\nHelloRequest request = HelloRequest.newBuilder().setName(\"Armerian World\").build();\ntry {\n    HelloReply reply = helloService.hello(request);\n} catch (StatusRuntimeException e) {\n    if (e.getCause() instanceof StatusCauseException) {\n        StatusCauseException cause = (StatusCauseException) e.getCause();\n        // The name of the class of the exception and its message in the server can be accessed.\n        assert cause.getOriginalClassName().equals(\"java.lang.IllegalStateException\");\n        assert cause.getOriginalMessage().equals(\"Failed!\");\n\n        // The exception's message is a combination of both the class name and original message.\n        assert cause.getMessage().equals(\"java.lang.IllegalStateException: Failed!\");\n\n        // The exception's stack trace is that which occurred when the server threw the exception.\n        cause.printStackTrace();\n\n        // Logging frameworks, as used by e.g., LoggingClient, will print the stack trace if configured\n        // to do so.\n\n        // Now you know exactly where to look in the server to figure out what may have gone wrong.\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/server-grpc\"\n        }}>{`Running a gRPC service`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/client-decorator\"\n        }}>{`Decorating a client`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/client-custom-http-headers\"\n        }}>{`Sending custom HTTP headers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/advanced-kotlin#calling-a-grpc-kotlin-service\"\n        }}>{`Calling a gRPC kotlin service`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["props","allMdx","nodes","candidateMdxNodes","useStaticQuery","React","MdxLayout","Object","assign","index","docsIndex","prefix","pageTitleSuffix","pageTitle","_frontmatter","Tip","name","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","mdxType","parentName","isMDXComponent"],"sourceRoot":""}