[versions]
akka = "2.6.19"
bouncycastle = "1.70"
brotli4j = "1.7.1"
curator = "5.2.1"
dagger = "2.42"
dropwizard1 = "1.3.29"
dropwizard2 = "2.1.0"
errorprone = "2.14.0"
eureka = "1.10.17"
graphql-kotlin = "5.3.2"
grpc-kotlin = "1.3.0"
groovy = "3.0.5"
guava = "31.1-jre"
hamcrest = "2.2"
jetty93 = '9.3.30.v20211001'
jetty94 = "9.4.46.v20220331"
jmh = "1.35"
json-unit = "2.35.0"
junit5 = "5.8.2"
kotlin = "1.7.0"
kotlin-coroutine = "1.6.3"
micrometer = "1.9.1"
micrometer13 = "1.3.20"
mockito = "4.6.1"
monix = "3.4.1"
munit = "0.7.29"
okhttp4 = "4.10.0"
opensaml = "3.4.6"
protobuf = "3.19.2"
reactive-grpc = "1.2.3"
reactive-streams = "1.0.4"
reactor = "3.4.19"
resteasy = "5.0.2.Final"
retrofit2 = "2.9.0"
sangria = "3.0.0"
sangria-slowlog = "2.0.4"
scala-java8-compat = "1.0.2"
scalapb = "0.11.11"
scalapb-json = "0.12.0"
slf4j = "1.7.36"
spring-boot1 = "1.5.22.RELEASE"
spring-boot2 = "2.7.1"
tomcat8 = "8.5.78"
tomcat9 = "9.0.62"

[boms]
brave = { module = "io.zipkin.brave:brave-bom", version = "5.13.9" }
dropwizard-metrics = { module = "io.dropwizard.metrics:metrics-bom", version = "4.2.10" }
# Ensure that we use the same Protobuf version as what gRPC depends on.
# See: https://github.com/grpc/grpc-java/blob/master/build.gradle
#      (Switch to the right tag and look for "protobufVersion" and "protocVersion".)
grpc-java = { module = "io.grpc:grpc-bom", version = "1.47.0" }
jackson = { module = "com.fasterxml.jackson:jackson-bom", version = "2.13.3" }
junit5 = { module = "org.junit:junit-bom", version = "5.8.2" }
netty = { module = "io.netty:netty-bom", version = "4.1.78.Final" }

# Akka is used only for testing in it:grpcweb module.
[libraries.akka-http-cors_v213]
module = "ch.megard:akka-http-cors_2.13"
version = "1.0.0"
[libraries.akka-grpc-runtime_v213]
module = "com.lightbend.akka.grpc:akka-grpc-runtime_2.13"
version = "1.0.3"
[libraries.akka-actor-typed_v213]
module = "com.typesafe.akka:akka-actor-typed_2.13"
version.ref = "akka"
[libraries.akka-discovery_v213]
module = "com.typesafe.akka:akka-discovery_2.13"
version.ref = "akka"
[libraries.akka-stream_v213]
module = "com.typesafe.akka:akka-stream_2.13"
version.ref = "akka"

[libraries.apache-httpclient]
module = "org.apache.httpcomponents:httpclient"
version = "4.5.13"
exclusions = "commons-logging:commons-logging"

[libraries.assertj]
module = "org.assertj:assertj-core"
version = "3.23.1"

[libraries.awaitility]
module = "org.awaitility:awaitility"
version = "4.2.0"

[libraries.bouncycastle-bcpkix]
module = "org.bouncycastle:bcpkix-jdk15on"
version = "1.70"
relocations = { from = "org.bouncycastle", to = "com.linecorp.armeria.internal.shaded.bouncycastle" }
[libraries.bouncycastle-bcprov]
module = "org.bouncycastle:bcprov-jdk15on"
version = "1.70"
relocations = { from = "org.bouncycastle", to = "com.linecorp.armeria.internal.shaded.bouncycastle" }
[libraries.bouncycastle-bcutil]
module = "org.bouncycastle:bcutil-jdk15on"
version = "1.70"
relocations = { from = "org.bouncycastle", to = "com.linecorp.armeria.internal.shaded.bouncycastle" }

[libraries.brave]
module = "io.zipkin.brave:brave"
# ":site:javadoc" fails when we use a newer version of Javadoc.
javadocs = [
    "https://www.javadoc.io/doc/io.zipkin.brave/brave/5.6.3/",
    "https://www.javadoc.io/doc/io.zipkin.brave/brave-instrumentation-http/5.6.3/"]
[libraries.brave-context-slf4j]
module = 'io.zipkin.brave:brave-context-slf4j'
[libraries.brave-instrumentation-http]
module = "io.zipkin.brave:brave-instrumentation-http"
[libraries.brave-instrumentation-http-tests]
module = "io.zipkin.brave:brave-instrumentation-http-tests"

[libraries.brotli4j]
module = "com.aayushatharva.brotli4j:brotli4j"
version.ref = "brotli4j"
[libraries.brotli4j-linux]
module = "com.aayushatharva.brotli4j:native-linux-x86_64"
version.ref = "brotli4j"
[libraries.brotli4j-osx]
module = "com.aayushatharva.brotli4j:native-osx-x86_64"
version.ref = "brotli4j"
[libraries.brotli4j-windows]
module = "com.aayushatharva.brotli4j:native-windows-x86_64"
version.ref = "brotli4j"

[libraries.bucket4j]
module = "com.github.vladimir-bukhtoyarov:bucket4j-core"
version = "7.5.0"
javadocs = "https://javadoc.io/doc/com.github.vladimir-bukhtoyarov/bucket4j-core/7.5.0/"

# Don"t upgrade Caffeine to 3.x that requires Java 11.
[libraries.caffeine]
module = "com.github.ben-manes.caffeine:caffeine"
version = "2.9.3"
exclusions = "com.google.errorprone:error_prone_annotations"
javadocs = "https://www.javadoc.io/doc/com.github.ben-manes.caffeine/caffeine/2.9.3/"
relocations = { from = "com.github.benmanes.caffeine", to = "com.linecorp.armeria.internal.shaded.caffeine" }

[libraries.cglib]
module = "cglib:cglib"
version = "3.3.0"

[libraries.checkerframework]
module = "org.checkerframework:checker-compat-qual"
version = "2.5.5"

[libraries.checkstyle]
module = "com.puppycrawl.tools:checkstyle"
version = "10.3.1"

[libraries.consul]
module = "com.pszymczyk.consul:embedded-consul"
version = "2.2.1"

# Ensure that we use the same ZooKeeper version as what Curator depends on.
# See: https://github.com/apache/curator/blob/master/pom.xml
#      (Switch to the right tag to find out the right version.)
[libraries.curator-recipes]
module = "org.apache.curator:curator-recipes"
version.ref = "curator"
javadocs = [
    "https://www.javadoc.io/doc/org.apache.curator/curator-framework/5.1.0/",
    "https://www.javadoc.io/doc/org.apache.curator/curator-recipes/5.1.0/"]
exclusions = "org.apache.zookeeper:zookeeper"
[libraries.curator-discovery]
module = "org.apache.curator:curator-x-discovery"
version.ref = "curator"
javadocs = "https://www.javadoc.io/doc/org.apache.curator/curator-x-discovery/5.1.0/"

# This is only used for examples/context-propagation/dagger
[libraries.dagger]
module = "com.google.dagger:dagger"
version.ref = "dagger"
[libraries.dagger-compiler]
module = "com.google.dagger:dagger-compiler"
version.ref = "dagger"
[libraries.dagger-producers]
module = "com.google.dagger:dagger-producers"
version.ref = "dagger"

# DGS is used only for testing in it:dgs module.
[libraries.dgs]
module = "com.netflix.graphql.dgs:graphql-dgs-client"
version = "5.0.4"

[libraries.dropwizard1-core]
module = "io.dropwizard:dropwizard-core"
version.ref = "dropwizard1"
[libraries.dropwizard1-util]
module = "io.dropwizard:dropwizard-util"
version.ref = "dropwizard1"
[libraries.dropwizard1-lifecycle]
module = "io.dropwizard:dropwizard-lifecycle"
version.ref = "dropwizard1"
[libraries.dropwizard1-jackson]
module = "io.dropwizard:dropwizard-jackson"
version.ref = "dropwizard1"
[libraries.dropwizard1-validation]
module = "io.dropwizard:dropwizard-validation"
version.ref = "dropwizard1"
[libraries.dropwizard1-jersey]
module = "io.dropwizard:dropwizard-jersey"
version.ref = "dropwizard1"
[libraries.dropwizard1-jetty]
module = "io.dropwizard:dropwizard-jetty"
version.ref = "dropwizard1"
[libraries.dropwizard1-testing]
module = "io.dropwizard:dropwizard-testing"
version.ref = "dropwizard1"

[libraries.dropwizard2-core]
module = "io.dropwizard:dropwizard-core"
version.ref = "dropwizard2"
javadocs = "https://www.javadoc.io/doc/io.dropwizard/dropwizard-core/2.1.0/"
[libraries.dropwizard2-jackson]
module = "io.dropwizard:dropwizard-jackson"
version.ref = "dropwizard2"
[libraries.dropwizard2-lifecycle]
module = "io.dropwizard:dropwizard-lifecycle"
version.ref = "dropwizard2"
[libraries.dropwizard2-jersey]
module = "io.dropwizard:dropwizard-jersey"
version.ref = "dropwizard2"
[libraries.dropwizard2-jetty]
module = "io.dropwizard:dropwizard-jetty"
version.ref = "dropwizard2"
[libraries.dropwizard2-testing]
module = "io.dropwizard:dropwizard-testing"
version.ref = "dropwizard2"
[libraries.dropwizard2-util]
module = "io.dropwizard:dropwizard-util"
version.ref = "dropwizard2"
[libraries.dropwizard2-validation]
module = "io.dropwizard:dropwizard-validation"
version.ref = "dropwizard2"

[libraries.dropwizard-metrics-core]
module = "io.dropwizard.metrics:metrics-core"
[libraries.dropwizard-metrics-json]
module = "io.dropwizard.metrics:metrics-json"

[libraries.errorprone-core]
module = "com.google.errorprone:error_prone_core"
version.ref = "errorprone"
[libraries.errorprone-annotations]
module = "com.google.errorprone:error_prone_annotations"
version.ref = "errorprone"

# Eureka is used only for testing in eureka module.
[libraries.eureka-client]
module = "com.netflix.eureka:eureka-client"
version.ref = "eureka"
[libraries.eureka-test-utils]
module = "com.netflix.eureka:eureka-test-utils"
version.ref = "eureka"

[libraries.fastutil]
module = "it.unimi.dsi:fastutil"
version = "8.5.8"
relocations = { from = "it.unimi.dsi.fastutil", to = "com.linecorp.armeria.internal.shaded.fastutil" }

# Finagle is used only for testing in zookeeper module.
[libraries.finagle-serversets_v213]
module = "com.twitter:finagle-serversets_2.13"
version = "22.4.0"

[libraries.findbugs]
module = "com.google.code.findbugs:jsr305"
version = "3.0.2"

[libraries.futures-completable]
module = "com.spotify:completable-futures"
version = "0.3.5"
relocations = { from = "com.spotify.futures", to = "com.linecorp.armeria.internal.shaded.futures" }
[libraries.futures-extra]
module = "com.spotify:futures-extra"
version = "4.3.1"

# gax-grpc is only used for gRPC test module.
[libraries.gax-grpc]
module = "com.google.api:gax-grpc"
version = "2.18.2"

[libraries.graphql-java]
module = "com.graphql-java:graphql-java"
version = "18.2"

[libraries.graphql-kotlin-client]
module = "com.expediagroup:graphql-kotlin-client"
version.ref = "graphql-kotlin"
[libraries.graphql-kotlin-client-jackson]
module = "com.expediagroup:graphql-kotlin-client-jackson"
version.ref = "graphql-kotlin"
[libraries.graphql-kotlin-client-serialization]
module = "com.expediagroup:graphql-kotlin-client-serialization"
version.ref = "graphql-kotlin"
[libraries.graphql-kotlin-schema-generator]
module = "com.expediagroup:graphql-kotlin-schema-generator"
version.ref = "graphql-kotlin"

# Groovy is only used for testing consul
[libraries.groovy-xml]
module = "org.codehaus.groovy:groovy-xml"
version = "3.0.11"

[libraries.grpc-core]
module = "io.grpc:grpc-core"
javadocs = [
    "https://grpc.io/grpc-java/javadoc/",
    "https://developers.google.com/protocol-buffers/docs/reference/java/"]
exclusions = [
    "com.google.errorprone:error_prone_annotations",
    "org.codehaus.mojo:animal-sniffer-annotations"]
[libraries.grpc-interop-testing]
module = "io.grpc:grpc-interop-testing"
exclusions = [
    "com.google.errorprone:error_prone_annotations",
    "com.google.guava:guava-jdk5",
    "com.google.j2objc:j2objc-annotations",
    "io.grpc:grpc-alts",
    "io.grpc:grpc-xds",
    "io.netty:netty-codec-http",
    "io.netty:netty-codec-http2",
    "io.netty:netty-codec-socks",
    "io.netty:netty-handler-proxy",
    "io.netty:netty-transport",
    "io.netty:netty-tcnative-boringssl-static"]
[libraries.grpc-protobuf]
module = "io.grpc:grpc-protobuf"
[libraries.grpc-services]
module = "io.grpc:grpc-services"
[libraries.grpc-stub]
module = "io.grpc:grpc-stub"
[libraries.grpc-okhttp]
module = "io.grpc:grpc-okhttp"
[libraries.grpc-testing]
module = 'io.grpc:grpc-testing'
[libraries.grpc-netty-shaded]
module = "io.grpc:grpc-netty-shaded"

[libraries.grpc-kotlin]
module = "io.grpc:grpc-kotlin-stub"
version.ref = "grpc-kotlin"

[libraries.grpc-kotlin-protoc]
module = "io.grpc:protoc-gen-grpc-kotlin"
version.ref = "grpc-kotlin"

[libraries.guava]
module = "com.google.guava:guava"
version.ref = "guava"
exclusions = [
    "com.google.errorprone:error_prone_annotations",
    "com.google.j2objc:j2objc-annotations",
    "org.codehaus.mojo:animal-sniffer-annotations"]
relocations = [
    { from = "com.google.common", to = "com.linecorp.armeria.internal.shaded.guava" },
    { from = "com.google.thirdparty.publicsuffix", to = "com.linecorp.armeria.internal.shaded.publicsuffix" }]
[libraries.guava-testlib]
module = "com.google.guava:guava-testlib"
version.ref = "guava"
exclusions = ["com.google.errorprone:error_prone_annotations", "com.google.j2objc:j2objc-annotations"]
relocations = { from = "com.google.common", to = "com.linecorp.armeria.internal.shaded.guava" }
# A transitive dependency of Guava which needs relocation as well.
[libraries.guava-failureaccess]
module = "com.google.guava:failureaccess"
version.ref = "guava"
exclusions = ["com.google.errorprone:error_prone_annotations", "com.google.j2objc:j2objc-annotations"]
relocations = { from = "com.google.common", to = "com.linecorp.armeria.internal.shaded.guava" }

[libraries.hamcrest]
module = "org.hamcrest:hamcrest"
version.ref = "hamcrest"
[libraries.hamcrest-library]
module = "org.hamcrest:hamcrest-library"
version.ref = "hamcrest"

# # This is only used for it/server test
[libraries.hbase]
module = "org.apache.hbase:hbase-shaded-client"
version = "1.2.6"
exclusions = [
    "com.github.stephenc.findbugs:findbugs-annotations",
    "commons-logging:commons-logging",
    "log4j:log4j",
    "org.slf4j:slf4j-log4j12"]

# Validator is only used for examples and testings in Spring
[libraries.hibernate-validator]
module = "org.hibernate.validator:hibernate-validator"
version = "6.2.3.Final"

# We do not depend on j2objc-annotations. We just need this to stop Javadoc from
# complaining about "unknown enum constant Level.FULL".
[libraries.j2objc]
module = "com.google.j2objc:j2objc-annotations"
version = "1.3"

[libraries.jackson-annotations]
module = "com.fasterxml.jackson.core:jackson-annotations"
javadocs = "https://fasterxml.github.io/jackson-annotations/javadoc/2.13/"
[libraries.jackson-core]
module = "com.fasterxml.jackson.core:jackson-core"
javadocs = "https://fasterxml.github.io/jackson-core/javadoc/2.13/"
[libraries.jackson-databind]
module = "com.fasterxml.jackson.core:jackson-databind"
javadocs = "https://fasterxml.github.io/jackson-databind/javadoc/2.13/"
[libraries.jackson-kotlin]
module = "com.fasterxml.jackson.module:jackson-module-kotlin"
[libraries.jackson-scala_v212]
module = "com.fasterxml.jackson.module:jackson-module-scala_2.12"
[libraries.jackson-scala_v213]
module = "com.fasterxml.jackson.module:jackson-module-scala_2.13"
[libraries.jackson-scala_v3]
module = "com.fasterxml.jackson.module:jackson-module-scala_3"

[libraries.javax-annotation]
module = "javax.annotation:javax.annotation-api"
version = "1.3.2"
[libraries.javax-inject]
module = "javax.inject:javax.inject"
version = "1"
[libraries.javax-jsr311]
module = "javax.ws.rs:jsr311-api"
version = "1.1.1"
[libraries.javax-validation]
module = "javax.validation:validation-api"
version = "2.0.1.Final"
# Ensure that we use the same javax.ws.rs version as what eureka-client depends on.
# See: https://github.com/Netflix/eureka/blob/master/eureka-client/build.gradle

[libraries.jctools]
module = "org.jctools:jctools-core"
version = "3.3.0"
relocations = { from = "org.jctools", to = "com.linecorp.armeria.internal.shaded.jctools" }

[libraries.jetty93-annotations]
module = "org.eclipse.jetty:jetty-annotations"
exclusions = ["org.ow2.asm:asm", "org.ow2.asm:asm-commons"]
version.ref = "jetty93"
[libraries.jetty93-server]
module = "org.eclipse.jetty:jetty-server"
javadocs = "https://javadoc.io/doc/org.eclipse.jetty/jetty-server/9.4.42.v20210604/"
version.ref = "jetty93"
# jetty-webapp for testing interoperability with other servers.
[libraries.jetty93-webapp]
module = "org.eclipse.jetty:jetty-webapp"
version.ref = "jetty93"
[libraries.jetty93-apache-jsp]
module = "org.eclipse.jetty:apache-jsp"
version.ref = "jetty93"
[libraries.jetty93-apache-jstl]
module = "org.eclipse.jetty:apache-jstl"
version.ref = "jetty93"

[libraries.jetty94-annotations]
module = "org.eclipse.jetty:jetty-annotations"
exclusions = ["org.ow2.asm:asm", "org.ow2.asm:asm-commons"]
version.ref = "jetty94"
[libraries.jetty94-server]
module = "org.eclipse.jetty:jetty-server"
javadocs = "https://javadoc.io/doc/org.eclipse.jetty/jetty-server/9.4.42.v20210604/"
version.ref = "jetty94"
# jetty-webapp for testing interoperability with other servers.
[libraries.jetty94-webapp]
module = "org.eclipse.jetty:jetty-webapp"
version.ref = "jetty94"
[libraries.jetty94-http2-server]
module = "org.eclipse.jetty.http2:http2-server"
version.ref = "jetty94"
[libraries.jetty94-apache-jsp]
module = "org.eclipse.jetty:apache-jsp"
version.ref = "jetty94"
[libraries.jetty94-apache-jstl]
module = "org.eclipse.jetty:apache-jstl"
version.ref = "jetty94"

[libraries.jetty-alpn-api]
module = "org.eclipse.jetty.alpn:alpn-api"
version = "1.1.3.v20160715"
[libraries.jetty-alpn-agent]
module = "org.mortbay.jetty.alpn:jetty-alpn-agent"
version = "2.0.10"

[libraries.jmh-extras]
module = "pl.project13.scala:sbt-jmh-extras"
version = "0.3.7"

[libraries.joor]
module = "org.jooq:joor"
version = "0.9.14"

[libraries.json-unit]
module = "net.javacrumbs.json-unit:json-unit"
version.ref = "json-unit"
[libraries.json-unit-fluent]
module = "net.javacrumbs.json-unit:json-unit-fluent"
version.ref = "json-unit"

# JSoup is only used for Gradle script and SAML testing.
[libraries.jsoup]
module = "org.jsoup:jsoup"
version = "1.15.1"

[libraries.junit4]
module = "junit:junit"
version = "4.13.2"
javadocs = "https://junit.org/junit4/javadoc/4.13/"

[libraries.junit5-jupiter-api]
module = "org.junit.jupiter:junit-jupiter-api"
# ":site:javadoc" fails when we use a newer version of Javadoc.
javadocs = "https://junit.org/junit5/docs/5.5.2/api/"
[libraries.junit5-jupiter-params]
module = "org.junit.jupiter:junit-jupiter-params"
[libraries.junit5-jupiter-engine]
module = "org.junit.jupiter:junit-jupiter-engine"
[libraries.junit5-vintage-engine]
module = "org.junit.vintage:junit-vintage-engine"
[libraries.junit5-platform-commons]
module = "org.junit.platform:junit-platform-commons"
[libraries.junit5-platform-launcher]
module = "org.junit.platform:junit-platform-launcher"

[libraries.junit-pioneer]
module = "org.junit-pioneer:junit-pioneer"
version = "1.7.1"

[libraries.jwt]
module = "com.auth0:java-jwt"
version = "3.19.1"
javadocs = "https://www.javadoc.io/doc/com.auth0/java-jwt/3.19.0/"

[libraries.kafka]
module = "org.apache.kafka:kafka-clients"
version = "3.2.0"
javadocs = "https://kafka.apache.org/30/javadoc/"

[libraries.kotlin-allopen]
module = "org.jetbrains.kotlin:kotlin-allopen"
version.ref = "kotlin"
[libraries.kotlin-stdlib-jdk8]
module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
version.ref = "kotlin"
[libraries.kotlin-reflect]
module = "org.jetbrains.kotlin:kotlin-reflect"
version.ref = "kotlin"

[libraries.kotlin-coroutines-core]
module = "org.jetbrains.kotlinx:kotlinx-coroutines-core"
version.ref = "kotlin-coroutine"
[libraries.kotlin-coroutines-jdk8]
module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8"
version.ref = "kotlin-coroutine"
# kotlinx-coroutines-reactor is only used for testing :it:spring:boot2-kotlin
[libraries.kotlin-coroutines-reactor]
module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor"
version.ref = "kotlin-coroutine"
[libraries.kotlin-coroutines-rx2]
module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2"
version.ref = "kotlin-coroutine"

[libraries.logback]
module = "ch.qos.logback:logback-classic"
version = "1.2.11"
javadocs = "https://www.javadoc.io/doc/ch.qos.logback/logback-classic/1.2.11/"

[libraries.micrometer-core]
module = "io.micrometer:micrometer-core"
version.ref = "micrometer"
javadocs = "https://www.javadoc.io/doc/io.micrometer/micrometer-core/1.9.1/"
[libraries.micrometer-prometheus]
module = "io.micrometer:micrometer-registry-prometheus"
version.ref = "micrometer"
javadocs = "https://www.javadoc.io/doc/io.micrometer/micrometer-registry-prometheus/1.9.1/"
[libraries.micrometer-spring-legacy]
module = "io.micrometer:micrometer-spring-legacy"
version.ref = "micrometer"
javadocs = "https://www.javadoc.io/doc/io.micrometer/micrometer-spring-legacy/1.3.9/"
exclusions = ["org.springframework:spring-web", "org.springframework:spring-webmvc"]

[libraries.micrometer13-core]
module = "io.micrometer:micrometer-core"
version.ref = "micrometer13"
[libraries.micrometer13-prometheus]
module = "io.micrometer:micrometer-registry-prometheus"
version.ref = "micrometer13"
[libraries.micrometer13-spring-legacy]
module = "io.micrometer:micrometer-spring-legacy"
version.ref = "micrometer13"
exclusions = ["org.springframework:spring-web", "org.springframework:spring-webmvc"]

[libraries.mockito]
module = "org.mockito:mockito-core"
version.ref = "mockito"
[libraries.mockito-junit-jupiter]
module = "org.mockito:mockito-junit-jupiter"
version.ref = "mockito"

[libraries.monix-reactive_v212]
module = "io.monix:monix-reactive_2.12"
version.ref = "monix"
[libraries.monix-reactive_v213]
module = "io.monix:monix-reactive_2.13"
version.ref = "monix"
[libraries.monix-reactive_v3]
module = "io.monix:monix-reactive_3"
version.ref = "monix"

[libraries.munit_v212]
module = "org.scalameta:munit_2.12"
version.ref = "munit"
[libraries.munit_v213]
module = "org.scalameta:munit_2.13"
version.ref = "munit"
[libraries.munit_v3]
module = "org.scalameta:munit_3"
version.ref = "munit"

[libraries.netty-codec-http2]
module = "io.netty:netty-codec-http2"
[libraries.netty-codec-haproxy]
module = "io.netty:netty-codec-haproxy"
[libraries.netty-common]
module = "io.netty:netty-common"
javadocs = "https://netty.io/4.1/api/"
[libraries.netty-handler-proxy]
module = "io.netty:netty-handler-proxy"
[libraries.netty-transport]
module = "io.netty:netty-transport"
[libraries.netty-resolver-dns]
module = "io.netty:netty-resolver-dns"
[libraries.netty-resolver-dns-native-macos]
module = "io.netty:netty-resolver-dns-native-macos"
[libraries.netty-transport-native-unix-common]
module = "io.netty:netty-transport-native-unix-common"
[libraries.netty-transport-native-epoll]
module = "io.netty:netty-transport-native-epoll"
[libraries.netty-tcnative-boringssl]
module = 'io.netty:netty-tcnative-boringssl-static'
[libraries.netty-io_uring]
module = "io.netty.incubator:netty-incubator-transport-native-io_uring"
version = "0.0.14.Final"

[libraries.prometheus]
module = "io.prometheus:simpleclient_common"
version = "0.16.0"
javadocs = "https://prometheus.github.io/client_java/"

# Ensure that we use the same Protobuf version as what gRPC depends on.
# See: https://github.com/grpc/grpc-java/blob/master/build.gradle
#      (Switch to the right tag and look for "protobufVersion" and "protocVersion".)
#      e.g. https://github.com/grpc/grpc-java/blob/v1.47.0/build.gradle
[libraries.protobuf-java]
module = "com.google.protobuf:protobuf-java"
version.ref = "protobuf"
[libraries.protobuf-java-util]
module = "com.google.protobuf:protobuf-java-util"
version.ref = "protobuf"
exclusions = "com.google.errorprone:error_prone_annotations"
[libraries.protobuf-protoc]
module = "com.google.protobuf:protoc"
version.ref = "protobuf"
[libraries.protobuf-gradle-plugin]
module = "com.google.protobuf:protobuf-gradle-plugin"
version = "0.8.18"

[libraries.protobuf-jackson]
module = "org.curioswitch.curiostack:protobuf-jackson"
version = "2.0.0"
exclusions = "javax.annotation:javax.annotation-api"
javadocs = "https://developers.curioswitch.org/apidocs/java/"

[libraries.reactor-core]
module = "io.projectreactor:reactor-core"
version.ref = "reactor"
javadocs = "https://projectreactor.io/docs/core/release/api/"
[libraries.reactor-test]
module = "io.projectreactor:reactor-test"
version.ref = "reactor"
[libraries.reactor-kotlin]
module = "io.projectreactor.kotlin:reactor-kotlin-extensions"
version = '1.1.6'

[libraries.reactor-grpc]
module = "com.salesforce.servicelibs:reactor-grpc"
version.ref = "reactive-grpc"
[libraries.reactor-grpc-stub]
module = "com.salesforce.servicelibs:reactor-grpc-stub"
version.ref = "reactive-grpc"

[libraries.resteasy-core]
module = "org.jboss.resteasy:resteasy-core"
version.ref = "resteasy"
[libraries.resteasy-core-spi]
module = "org.jboss.resteasy:resteasy-core-spi"
version.ref = "resteasy"
javadocs = "https://docs.jboss.org/resteasy/docs/5.0.2.Final/javadocs/"
[libraries.resteasy-client]
module = "org.jboss.resteasy:resteasy-client"
version.ref = "resteasy"
[libraries.resteasy-jackson2-provider]
module = "org.jboss.resteasy:resteasy-jackson2-provider"
version.ref = "resteasy"
# "provided" dependency required by RESTEasy "resteasy-core-spi"
[libraries.resteasy-jboss-logging]
module = "org.jboss.logging:jboss-logging"
version = "3.4.3.Final"
javadocs = "https://javadoc.io/doc/org.jboss.logging/jboss-logging/3.4.3.Final/"
[libraries.resteasy-jboss-logging-annotations]
module = "org.jboss.logging:jboss-logging-annotations"
version = "2.2.1.Final"
javadocs = "https://javadoc.io/doc/org.jboss.logging/jboss-logging-annotations/2.2.1.Final/"

[libraries.rxjava2]
module = "io.reactivex.rxjava2:rxjava"
version = "2.2.21"
javadocs = "http://reactivex.io/RxJava/2.x/javadoc/"
[libraries.rxjava3]
module = "io.reactivex.rxjava3:rxjava"
version = "3.1.5"
javadocs = "http://reactivex.io/RxJava/3.x/javadoc/"

[libraries.shibboleth-utilities]
module = "net.shibboleth.utilities:java-support"
version = "7.5.2"

# snappy-java is only used for testing zookeeper3 module.
[libraries.snappy]
module = "org.xerial.snappy:snappy-java"
version = "1.1.8.4"

# Don"t upgrade OpenSAML to 4.x that requires Java 11.
[libraries.opensaml-core]
module = "org.opensaml:opensaml-core"
version.ref = "opensaml"
[libraries.opensaml-messaging-api]
module = "org.opensaml:opensaml-messaging-api"
version.ref = "opensaml"
[libraries.opensaml-messaging-impl]
module = "org.opensaml:opensaml-messaging-impl"
version.ref = "opensaml"
[libraries.opensaml-saml-api]
module = "org.opensaml:opensaml-saml-api"
version.ref = "opensaml"
[libraries.opensaml-saml-impl]
module = "org.opensaml:opensaml-saml-impl"
version.ref = "opensaml"
[libraries.opensaml-soap-api]
module = "org.opensaml:opensaml-soap-api"
version.ref = "opensaml"
[libraries.opensaml-soap-impl]
module = "org.opensaml:opensaml-soap-impl"
version.ref = "opensaml"

[libraries.okhttp2]
module = "com.squareup.okhttp:okhttp"
version = "2.7.5"
[libraries.okhttp3]
module = "com.squareup.okhttp:okhttp"
version = { strictly = "3.14.9" }
[libraries.okhttp4]
module = "com.squareup.okhttp3:okhttp"
version.ref = "okhttp4"
[libraries.okhttp4-tls]
module = "com.squareup.okhttp3:okhttp-tls"
version.ref = "okhttp4"

[libraries.proguard]
module = "com.guardsquare:proguard-gradle"
version = "7.2.2"

[libraries.retrofit2]
module = "com.squareup.retrofit2:retrofit"
version.ref = "retrofit2"
javadocs = "https://square.github.io/retrofit/2.x/retrofit/"
[libraries.retrofit2-converter-jackson]
module = "com.squareup.retrofit2:converter-jackson"
version.ref = "retrofit2"

[libraries.reactivestreams]
module = "org.reactivestreams:reactive-streams"
version.ref = "reactive-streams"
[libraries.reactivestreams-tck]
module = "org.reactivestreams:reactive-streams-tck"
version.ref = "reactive-streams"
exclusions = "org.yaml:snakeyaml"

# Upgrade once https://github.com/ronmamo/reflections/issues/279 is fixed.
[libraries.reflections]
module = "org.reflections:reflections"
module = "org.reflections:reflections"
version = "0.9.11"
exclusions = [
    "com.google.errorprone:error_prone_annotations",
    "com.google.j2objc:j2objc-annotations",
    "org.codehaus.mojo:animal-sniffer-annotations"]
relocations = { from = "org.reflections", to = "com.linecorp.armeria.internal.shaded.reflections" }

[libraries.sangria_v212]
module = "org.sangria-graphql:sangria_2.12"
version.ref = "sangria"
[libraries.sangria_v213]
module = "org.sangria-graphql:sangria_2.13"
version.ref = "sangria"
[libraries.sangria-slowlog_v212]
module = "org.sangria-graphql:sangria-slowlog_2.12"
version.ref = "sangria-slowlog"
[libraries.sangria-slowlog_v213]
module = "org.sangria-graphql:sangria-slowlog_2.13"
version.ref = "sangria-slowlog"

# If you want to change `scala_v212` or `scala_v213`,
# you also need to change the scala version in `scala.gradle`.
[libraries.scala_v212]
module = "org.scala-lang:scala-library"
version = "2.12.15"
[libraries.scala_v213]
module = "org.scala-lang:scala-library"
version = "2.13.8"
[libraries.scala_v3]
module = "org.scala-lang:scala3-library_3"
version = "3.1.2"

[libraries.scala-collection-compat_v212]
module = "org.scala-lang.modules:scala-collection-compat_2.12"
version = "2.7.0"
[libraries.scala-java8-compat_v212]
module = "org.scala-lang.modules:scala-java8-compat_2.12"
version.ref = "scala-java8-compat"
[libraries.scala-java8-compat_v213]
module = "org.scala-lang.modules:scala-java8-compat_2.13"
version.ref = "scala-java8-compat"
[libraries.scala-java8-compat_v3]
module = "org.scala-lang.modules:scala-java8-compat_3"
version.ref = "scala-java8-compat"

[libraries.scalapb-runtime_v212]
module = "com.thesamet.scalapb:scalapb-runtime_2.12"
version.ref = "scalapb"
[libraries.scalapb-runtime_v213]
module = "com.thesamet.scalapb:scalapb-runtime_2.13"
version.ref = "scalapb"
[libraries.scalapb-runtime_v3]
module = "com.thesamet.scalapb:scalapb-runtime_3"
version.ref = "scalapb"
[libraries.scalapb-runtime-grpc_v212]
module = "com.thesamet.scalapb:scalapb-runtime-grpc_2.12"
version.ref = "scalapb"
[libraries.scalapb-runtime-grpc_v213]
module = "com.thesamet.scalapb:scalapb-runtime-grpc_2.13"
version.ref = "scalapb"
[libraries.scalapb-runtime-grpc_v3]
module = "com.thesamet.scalapb:scalapb-runtime-grpc_3"
version.ref = "scalapb"
[libraries.scalapb-json4s_v212]
module = "com.thesamet.scalapb:scalapb-json4s_2.12"
version.ref = "scalapb-json"
[libraries.scalapb-json4s_v213]
module = "com.thesamet.scalapb:scalapb-json4s_2.13"
version.ref = "scalapb-json"
[libraries.scalapb-json4s_v3]
module = "com.thesamet.scalapb:scalapb-json4s_3"
version.ref = "scalapb-json"

[libraries.shadow-gradle-plugin]
module = "com.github.jengelman.gradle.plugins:shadow"
version = "6.1.0"

[libraries.slf4j-api]
module = "org.slf4j:slf4j-api"
version.ref = "slf4j"
javadocs = "https://www.javadoc.io/doc/org.slf4j/slf4j-api/1.7.36/"
[libraries.slf4j-jcl-over-slf4j]
module = "org.slf4j:jcl-over-slf4j"
version.ref = "slf4j"
[libraries.slf4j-jul-to-slf4j]
module = "org.slf4j:jul-to-slf4j"
version.ref = "slf4j"
[libraries.slf4j-log4j-over-slf4j]
module = "org.slf4j:log4j-over-slf4j"
version.ref = "slf4j"
[libraries.slf4j-simple]
module = "org.slf4j:slf4j-simple"
version.ref = "slf4j"

[libraries.spring-web]
module = "org.springframework:spring-web"
version = "5.3.21"

[libraries.spring-boot1-autoconfigure]
module = "org.springframework.boot:spring-boot-autoconfigure"
version.ref = "spring-boot1"
[libraries.spring-boot1-configuration-processor]
module = "org.springframework.boot:spring-boot-configuration-processor"
version.ref = "spring-boot1"
[libraries.spring-boot1-starter]
module = "org.springframework.boot:spring-boot-starter"
version.ref = "spring-boot1"
[libraries.spring-boot1-starter-test]
module = "org.springframework.boot:spring-boot-starter-test"
version.ref = "spring-boot1"

[libraries.spring-boot2-actuator-autoconfigure]
module = "org.springframework.boot:spring-boot-actuator-autoconfigure"
version.ref = "spring-boot2"
[libraries.spring-boot2-autoconfigure]
module = "org.springframework.boot:spring-boot-autoconfigure"
version.ref = "spring-boot2"
[libraries.spring-boot2-starter]
module = "org.springframework.boot:spring-boot-starter"
version.ref = "spring-boot2"
javadocs = "https://docs.spring.io/spring/docs/current/javadoc-api/"
[libraries.spring-boot2-starter-actuator]
module = "org.springframework.boot:spring-boot-starter-actuator"
version.ref = "spring-boot2"
[libraries.spring-boot2-starter-security]
module = "org.springframework.boot:spring-boot-starter-security"
version.ref = "spring-boot2"
[libraries.spring-boot2-starter-test]
module = "org.springframework.boot:spring-boot-starter-test"
version.ref = "spring-boot2"
[libraries.spring-boot2-starter-web]
module = "org.springframework.boot:spring-boot-starter-web"
version.ref = "spring-boot2"
[libraries.spring-boot2-starter-webflux]
module = "org.springframework.boot:spring-boot-starter-webflux"
version.ref = "spring-boot2"
exclusions = "org.springframework.boot:spring-boot-starter-reactor-netty"
[libraries.spring-boot2-configuration-processor]
module = "org.springframework.boot:spring-boot-configuration-processor"
version.ref = "spring-boot2"

[libraries.testng]
module = "org.testng:testng"
version = "7.5"

[libraries.thrift09]
module = "org.apache.thrift:libthrift"
version = { strictly = "0.9.3-1" }
exclusions = [
    "javax.annotation:javax.annotation-api",
    "org.apache.httpcomponents:httpcore",
    "org.apache.httpcomponents:httpclient"]
[libraries.thrift012]
module = "org.apache.thrift:libthrift"
version = { strictly = "0.12.0" }
exclusions = [
    "javax.annotation:javax.annotation-api",
    "org.apache.httpcomponents:httpcore",
    "org.apache.httpcomponents:httpclient"]
[libraries.thrift013]
module = "org.apache.thrift:libthrift"
version = { strictly = "0.13.0" }
exclusions = [
    "javax.annotation:javax.annotation-api",
    "org.apache.httpcomponents:httpcore",
    "org.apache.httpcomponents:httpclient"]
[libraries.thrift014]
module = "org.apache.thrift:libthrift"
version = { strictly = "0.14.2" }
exclusions = [
    "javax.annotation:javax.annotation-api",
    "org.apache.httpcomponents:httpcore",
    "org.apache.httpcomponents:httpclient"]
[libraries.thrift015]
module = "org.apache.thrift:libthrift"
version = { strictly = "0.15.0" }
exclusions = [
    "javax.annotation:javax.annotation-api",
    "org.apache.httpcomponents:httpcore",
    "org.apache.httpcomponents:httpclient"]
[libraries.thrift016]
module = "org.apache.thrift:libthrift"
version = { strictly = "0.16.0" }
javadocs = "https://www.javadoc.io/doc/org.apache.thrift/libthrift/0.16.0/"
exclusions = [
    "javax.annotation:javax.annotation-api",
    "org.apache.httpcomponents:httpcore",
    "org.apache.httpcomponents:httpclient"]

[libraries.tomcat8-core]
module = "org.apache.tomcat.embed:tomcat-embed-core"
version.ref = "tomcat8"
javadocs = "https://tomcat.apache.org/tomcat-9.0-doc/api/"
[libraries.tomcat8-jasper]
module = "org.apache.tomcat.embed:tomcat-embed-jasper"
version.ref = "tomcat8"
[libraries.tomcat9-core]
module = "org.apache.tomcat.embed:tomcat-embed-core"
version.ref = "tomcat9"
javadocs = "https://tomcat.apache.org/tomcat-9.0-doc/api/"
[libraries.tomcat9-jasper]
module = "org.apache.tomcat.embed:tomcat-embed-jasper"
version.ref = "tomcat9"
[libraries.tomcat9-el]
module = "org.apache.tomcat.embed:tomcat-embed-el"
version.ref = "tomcat9"

# Needed to work around the problem with Gradle not supporting POM relocation correctly.
[libraries.xml-apis]
module = "xml-apis:xml-apis"
version = "1.4.01"

# Ensure that we use the same ZooKeeper version as what Curator depends on.
# See: https://github.com/apache/curator/blob/master/pom.xml
#      (Switch to the right tag to find out the right version.)
[libraries.zookeeper]
module = "org.apache.zookeeper:zookeeper"
version = "3.6.3"
exclusions = [
    "io.netty:netty-all",
    "log4j:log4j",
    "org.slf4j:slf4j-log4j12"]

[libraries.zookeeper-junit]
module = "org.dmonix.junit:zookeeper-junit"
version = "1.2"

[plugins]
jmh = { id = "me.champeau.jmh", version = "0.6.6" }
osdetector = { id = "com.google.osdetector", version = "1.6.2" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
scalafmt = { id = "cz.alenkacz.gradle.scalafmt", version = "1.16.2" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version = "1.1.0" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "10.1.0" }
errorprone = { id = "net.ltgt.errorprone", version = "2.0.2" }
node-gradle = { id = "com.github.node-gradle.node", version = "3.4.0" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot2" }
