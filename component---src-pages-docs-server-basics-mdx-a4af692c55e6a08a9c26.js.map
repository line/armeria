{"version":3,"file":"component---src-pages-docs-server-basics-mdx-a4af692c55e6a08a9c26.js","mappings":"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","sources":["webpack://armeria-site/./src/layouts/docs.tsx","webpack://armeria-site/./src/pages/docs/server-basics.mdx"],"sourcesContent":["import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Server basics\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"server-basics\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#server-basics\",\n        \"aria-label\": \"server basics permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Server basics`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#ports\"\n        }}>{`Ports`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#services\"\n        }}>{`Services`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#path-patterns\"\n        }}>{`Path patterns`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#per-service-configuration\"\n        }}>{`Per service configuration`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#ssltls\"\n        }}>{`SSL/TLS`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#proxy-protocol\"\n        }}>{`PROXY protocol`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#serving-http-and-https-on-the-same-port\"\n        }}>{`Serving HTTP and HTTPS on the same port`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#virtual-hosts\"\n        }}>{`Virtual hosts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#getting-an-ip-address-of-a-client-who-initiated-a-request\"\n        }}>{`Getting an IP address of a client who initiated a request`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#see-also\"\n        }}>{`See also`}</a></li>\n    </ul>\n    <p>{`To start a server, you need to build it first. Use `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html\"\n      }}>{`type://ServerBuilder`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\n\nServerBuilder sb = Server.builder();\n// TODO: Configure your server here.\nServer server = sb.build();\nCompletableFuture<Void> future = server.start();\n// Wait until the server is ready.\nfuture.join();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ports\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#ports\",\n        \"aria-label\": \"ports permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Ports`}</h2>\n    <p>{`To serve anything, you need to specify which TCP/IP port you want to bind onto:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ServerBuilder sb = Server.builder();\n// Configure an HTTP port.\nsb.http(8080);\n// TODO: Add your services here.\nServer server = sb.build();\nCompletableFuture<Void> future = server.start();\nfuture.join();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"services\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#services\",\n        \"aria-label\": \"services permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Services`}</h2>\n    <p>{`Even if we opened a port, it's of no use if we didn't bind any services to them. Let's add some:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.HttpRequest;\nimport com.linecorp.armeria.common.HttpResponse;\nimport com.linecorp.armeria.common.HttpStatus;\nimport com.linecorp.armeria.common.MediaType;\nimport com.linecorp.armeria.common.MediaTypeNames;\nimport com.linecorp.armeria.common.QueryParams;\n\nimport com.linecorp.armeria.server.AbstractHttpService;\nimport com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport com.linecorp.armeria.server.ServiceRequestContext;\nimport com.linecorp.armeria.server.annotation.Consumes;\nimport com.linecorp.armeria.server.annotation.Default;\nimport com.linecorp.armeria.server.annotation.Get;\nimport com.linecorp.armeria.server.annotation.Param;\nimport com.linecorp.armeria.server.annotation.Post;\nimport com.linecorp.armeria.server.annotation.Produces;\nimport com.linecorp.armeria.server.logging.LoggingService;\n\nServerBuilder sb = Server.builder();\nsb.http(8080);\n\n// Add a simple 'Hello, world!' service.\nsb.service(\"/\", (ctx, req) -> HttpResponse.of(\"Hello, world!\"));\n\n// Using path variables:\nsb.service(\"/greet/{name}\", new AbstractHttpService() {\n    @Override\n    protected HttpResponse doGet(ServiceRequestContext ctx, HttpRequest req) {\n        String name = ctx.pathParam(\"name\");\n        return HttpResponse.of(\"Hello, %s!\", name);\n    }\n}.decorate(LoggingService.newDecorator())); // Enable logging\n\n// Using an annotated service object:\nsb.annotatedService(new Object() {\n    @Get(\"/greet2/:name\") // \\`:name\\` style is also available\n    public HttpResponse greet(@Param(\"name\") String name) {\n        return HttpResponse.of(\"Hello, %s!\", name);\n    }\n});\n\n// Just in case your name contains a slash:\nsb.serviceUnder(\"/greet3\", (ctx, req) -> {\n    String path = ctx.mappedPath();  // Get the path without the prefix ('/greet3')\n    String name = path.substring(1); // Strip the leading slash ('/')\n    return HttpResponse.of(\"Hello, %s!\", name);\n});\n\n// Using an annotated service object:\nsb.annotatedService(new Object() {\n    @Get(\"regex:^/greet4/(?<name>.*)$\")\n    public HttpResponse greet(@Param(\"name\") String name) {\n        return HttpResponse.of(\"Hello, %s!\", name);\n    }\n});\n\n// Using a query parameter (e.g. /greet5?name=alice) on an annotated service object:\nsb.annotatedService(new Object() {\n    @Get(\"/greet5\")\n    public HttpResponse greet(@Param(\"name\") String name,\n                              @Param(\"title\") @Default(\"Mr.\") String title) {\n        // \"Mr.\" is used by default if there is no title parameter in the request.\n        return HttpResponse.of(\"Hello, %s %s!\", title, name);\n    }\n});\n\n// Getting a map of query parameters on an annotated service object:\nsb.annotatedService(new Object() {\n    @Get(\"/greet6\")\n    public HttpResponse greet(QueryParams params) {\n        return HttpResponse.of(\"Hello, %s!\", params.get(\"name\"));\n    }\n});\n\n// Using media type negotiation:\nsb.annotatedService(new Object() {\n    @Get(\"/greet7\")\n    @Produces(MediaTypeNames.JSON_UTF_8)\n    public HttpResponse greetGet(@Param(\"name\") String name) {\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               \"{\\\\\"name\\\\\":\\\\\"%s\\\\\"}\", name);\n    }\n\n    @Post(\"/greet7\")\n    @Consumes(MediaTypeNames.FORM_DATA)\n    public HttpResponse greetPost(@Param(\"name\") String name) {\n        return HttpResponse.of(HttpStatus.OK);\n    }\n});\n\nServer server = sb.build();\nCompletableFuture<Void> future = server.start();\nfuture.join();\n`}</code></pre>\n    <p>{`As described in the example, `}<inlineCode parentName=\"p\">{`service()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`serviceUnder()`}</inlineCode>{` perform an exact match and a prefix match\non a request path respectively. `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html\"\n      }}>{`type://ServerBuilder`}</a>{` also provides advanced path mapping such as regex and\nglob pattern matching.`}</p>\n    <p>{`Also, we decorated the second service using `}<a parentName=\"p\" {...{\n        \"href\": \"type://LoggingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/logging/LoggingService.html\"\n      }}>{`type://LoggingService`}</a>{`, which logs all requests and responses.\nYou might be interested in decorating a service using other decorators, for example to gather metrics.`}</p>\n    <p>{`You can also use an arbitrary object that's annotated by the `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Path:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Path.html\"\n      }}>{`type://@Path`}</a>{` annotation\nusing `}<inlineCode parentName=\"p\">{`annotatedService()`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"path-patterns\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#path-patterns\",\n        \"aria-label\": \"path patterns permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Path patterns`}</h2>\n    <p>{`You can use the following path patterns to map an HTTP request path to a service or a decorator.`}</p>\n    <table><thead parentName=\"table\"><tr parentName=\"thead\"><th parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"th\">{`Pattern`}</p></th><th parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"th\">{`Example`}</p></th></tr></thead><tbody parentName=\"table\"><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Exact match`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\"><inlineCode parentName=\"p\">{`/foo/bar`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`exact:/foo/bar`}</inlineCode></p></td></tr><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Curly-brace style path variables`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\"><inlineCode parentName=\"p\">{`/users/{userId}`}</inlineCode></p></td></tr><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Colon style path variables`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\"><inlineCode parentName=\"p\">{`/list/:productType/by/:ordering`}</inlineCode></p></td></tr><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Prefix match`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\"><inlineCode parentName=\"p\">{`prefix:/files`}</inlineCode></p></td></tr><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Glob pattern`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\"><inlineCode parentName=\"p\">{`glob:/*/downloads/**`}</inlineCode></p></td></tr><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Regular expression`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\"><inlineCode parentName=\"p\">{`regex:^/files/(?<filePath>.\\\\*)$`}</inlineCode></p></td></tr></tbody></table>\n    <Tip mdxType=\"Tip\">\nBy default, colon style path variables assume that a path segment starting with a ':' is a parameter name.\nIf the colon starting a path segment should signify a literal, you can prefix the ':' with '\\\\'.\n      <p>{`e.g.`}</p>\n      <ul>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/foo/\\\\\\\\:colon:`}</inlineCode>{` will match a request with path `}<inlineCode parentName=\"li\">{`/foo/:colon:`}</inlineCode>{`.`}\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`Note that only the first colon starting the segment should be escaped.`}</li>\n          </ul>\n        </li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/foo/:colon`}</inlineCode>{` will match a request with path `}<inlineCode parentName=\"li\">{`/foo/bar`}</inlineCode>{`. The path parameter 'colon' will be bound to 'bar'.`}</li>\n      </ul>\n    </Tip>\n    <h2 {...{\n      \"id\": \"per-service-configuration\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#per-service-configuration\",\n        \"aria-label\": \"per service configuration permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Per service configuration`}</h2>\n    <p>{`The examples above are just mapping the path of an HTTP request on a service. If you want to set configuration\nfor a specific service, you can use fluent API:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ServerBuilder sb = Server.builder();\nsb.route()                    // Configure the service.\n  .post(\"/foo/bar\")           // Matched when the path is \"/foo/bar\" and the method is POST.\n  .consumes(MediaType.JSON)   // Matched when the \"content-type\" header is \"application/json\".\n  .produces(MediaType.JSON)   // Matched when the \"accept\" headers is \"application/json\".\n  .matchesHeaders(\"baz=qux\")  // Matched when the \"baz\" header is \"qux\".\n  .matchesParams(\"quux=quuz\") // Matched when the \"quux\" parameter is \"quuz\".\n  .requestTimeoutMillis(5000)\n  .maxRequestLength(8192)\n  .verboseResponses(true)\n  .build((ctx, req) -> HttpResponse.of(OK)); // Should call to finish and return to the ServerBuilder.\n`}</code></pre>\n    <p>{`Or use a `}<inlineCode parentName=\"p\">{`Consumer`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.HttpMethod;\n\nServerBuilder sb = Server.builder();\nsb.withRoute(builder -> builder.path(\"/baz\") // Matched when the path is \"/baz\".\n                               // Matched when the method is GET or POST.\n                               .methods(HttpMethod.GET, HttpMethod.POST)\n                               ...\n                               .build((ctx, req) -> HttpResponse.of(OK)));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ssltls\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#ssltls\",\n        \"aria-label\": \"ssltls permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`SSL/TLS`}</h2>\n    <p>{`You can also add an HTTPS port with your certificate and its private key files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ServerBuilder sb = Server.builder();\nsb.https(8443)\n  .tls(new File(\"certificate.crt\"), new File(\"private.key\"), \"myPassphrase\");\n...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"proxy-protocol\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#proxy-protocol\",\n        \"aria-label\": \"proxy protocol permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`PROXY protocol`}</h2>\n    <p>{`Armeria supports both text (v1) and binary (v2) versions of\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\"\n      }}>{`PROXY protocol`}</a>{`.\nIf your server is behind a load balancer such as `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.haproxy.org/\"\n      }}>{`HAProxy`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://aws.amazon.com/elasticloadbalancing/\"\n      }}>{`AWS ELB`}</a>{`, you could consider enabling the PROXY protocol:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import static com.linecorp.armeria.common.SessionProtocol.HTTP;\nimport static com.linecorp.armeria.common.SessionProtocol.HTTPS;\nimport static com.linecorp.armeria.common.SessionProtocol.PROXY;\n\nServerBuilder sb = Server.builder();\nsb.port(8080, PROXY, HTTP);\nsb.port(8443, PROXY, HTTPS);\n...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"serving-http-and-https-on-the-same-port\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#serving-http-and-https-on-the-same-port\",\n        \"aria-label\": \"serving http and https on the same port permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Serving HTTP and HTTPS on the same port`}</h2>\n    <p>{`For whatever reason, you may have to serve both HTTP and HTTPS on the same port. Armeria is one of the few\nimplementations that supports port unification:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ServerBuilder sb = Server.builder();\nsb.port(8888, HTTP, HTTPS);\n// Enable PROXY protocol, too.\nsb.port(9999, PROXY, HTTP, HTTPS);\n...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"virtual-hosts\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#virtual-hosts\",\n        \"aria-label\": \"virtual hosts permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Virtual hosts`}</h2>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerBuilder#virtualHost(String):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html#virtualHost(java.lang.String)\"\n      }}>{`type://ServerBuilder#virtualHost(String)`}</a>{` to configure `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Virtual_hosting#Name-based\"\n      }}>{`a name-based virtual host`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ServerBuilder sb = Server.builder();\n// Configure foo.com.\nsb.virtualHost(\"foo.com\")\n  .service(...)\n  .tls(...)\n  .and() // Configure *.bar.com.\n  .virtualHost(\"*.bar.com\")\n  .service(...)\n  .tls(...)\n  .and() // Configure the default virtual host.\n  .service(...)\n  .tls(...);\n...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"getting-an-ip-address-of-a-client-who-initiated-a-request\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#getting-an-ip-address-of-a-client-who-initiated-a-request\",\n        \"aria-label\": \"getting an ip address of a client who initiated a request permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Getting an IP address of a client who initiated a request`}</h2>\n    <p>{`You may want to get an IP address of a client who initiated a request in your service. In that case,\nyou can use `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServiceRequestContext#clientAddress():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#clientAddress()\"\n      }}>{`type://ServiceRequestContext#clientAddress()`}</a>{`. But you need to configure\nyour `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html\"\n      }}>{`type://ServerBuilder`}</a>{` before doing that:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.util.InetAddressPredicates;\nimport com.linecorp.armeria.server.ClientAddressSource;\n\nServerBuilder sb = Server.builder();\n\n// Configure a filter which evaluates whether an address of a remote endpoint is\n// trusted. If unspecified, no remote endpoint is trusted.\n// e.g. servers who have an IP address in 10.0.0.0/8.\nsb.clientAddressTrustedProxyFilter(InetAddressPredicates.ofCidr(\"10.0.0.0/8\"));\n\n// Configure a filter which evaluates whether an address can be used as\n// a client address. If unspecified, any address would be accepted.\n// e.g. public addresses\nsb.clientAddressFilter(address -> !address.isSiteLocalAddress());\n\n// Configure a list of sources which are used to determine where to look for\n// the client address, in the order of preference. If unspecified, 'Forwarded',\n// 'X-Forwarded-For' and the source address of a PROXY protocol header would be used.\nsb.clientAddressSources(ClientAddressSource.ofHeader(HttpHeaderNames.FORWARDED),\n                        ClientAddressSource.ofHeader(HttpHeaderNames.X_FORWARDED_FOR),\n                        ClientAddressSource.ofProxyProtocol());\n\n// Get an IP address of a client who initiated a request.\nsb.service(\"/\", (ctx, res) ->\n        HttpResponse.of(\"A request was initiated by %s!\", \n                        ctx.clientAddress().getHostAddress()));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/server-decorator\"\n        }}>{`Decorating a service`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["props","allMdx","nodes","candidateMdxNodes","useStaticQuery","React","MdxLayout","Object","assign","index","docsIndex","prefix","pageTitleSuffix","pageTitle","_frontmatter","Tip","name","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","mdxType","parentName","isMDXComponent"],"sourceRoot":""}