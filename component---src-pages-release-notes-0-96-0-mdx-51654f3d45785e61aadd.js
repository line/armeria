"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[672],{92691:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return u}});var a,i=n(63366),r=(n(67294),n(64983)),l=n(20370),s=["components"],p={},o=(a="ThankYou",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),c={_frontmatter:p},m=l.Z;function u(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)(m,Object.assign({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"date"},"23rd November 2019"),(0,r.kt)("h2",{id:"-new-features",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-new-features","aria-label":" new features permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🌟 New features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The type signature of clients and services has been greatly simplified. Note that this involves various breaking changes unfortunately. See the 'Breaking changes' section for the details. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2239"},"#2239")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2254"},"#2254")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Before:\npublic class FooHttpService implements Service<HttpRequest, HttpResponse> { ... }\npublic class FooRpcService implements Service<RpcRequest, RpcResponse> { ... }\npublic class FooHttpClient implements Client<HttpRequest, HttpResponse> { ... }\npublic class FooRpcClient implements Client<RpcRequest, RpcResponse> { ... }\n\nService<HttpRequest, HttpResponse> foo(Service<HttpRequest, HttpResponse> bar) { ... }\n\nFunction<Service<HttpRequest, HttpResponse>,\n         ? extends Service<HttpRequest, HttpResponse>> httpServiceDecorator;\nFunction<Service<RpcRequest, RpcResponse>,\n         ? extends Service<RpcRequest, RpcResponse>> rpcServiceDecorator;\nFunction<Client<HttpRequest, HttpResponse>,\n         ? extends Client<HttpRequest, HttpResponse>> httpClientDecorator;\nFunction<Client<RpcRequest, RpcResponse>,\n         ? extends Client<RpcRequest, RpcResponse>> rpcClientDecorator;\n\n// After:\npublic class FooHttpService implements HttpService { ... }\npublic class FooRpcService implements RpcService { ... }\npublic class FooHttpClient implements HttpClient { ... }\npublic class FooRpcClient implements RpcClient { ... }\n\nHttpService foo(HttpService bar) { ... }\n\nFunction<? super HttpService, ? extends HttpService> httpServiceDecorator;\nFunction<? super RpcService, ? extends RpcService> rpcServiceDecorator;\nFunction<? super HttpClient, ? extends HttpClient> httpClientDecorator;\nFunction<? super RpcClient, ? extends RpcClient> rpcClientDecorator;\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can now specify service-level settings for annotated services, just like other service types. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2180"},"#2180")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2222"},"#2222")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Server server =\n    Server.builder()\n          .annotatedService().pathPrefix("/api")\n                             .requestTimeoutMillis(5000)\n                             .exceptionHandler((ctx, req, cause) -> ...)\n                             .build(new Object() { ... }))\n          .build();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"RequestContext")," now has its own ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestId"),", which is a 64-bit random integer by default. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2001"},"#2001")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2174"},"#2174")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2203"},"#2203")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2224"},"#2224")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Server server =\n    Server.builder()\n          .service("/", (ctx, req) -> {\n              return HttpResponse.of("Request ID: %s", ctx.id().text());\n          })\n          .build();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can now add a cause to an ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpStatusException"),". ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2253"},"#2253")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"HttpService service = (ctx, req) -> {\n    try (FileInputStream in = new FileInputStream(...)) {\n        ...\n    } catch (FileNotFoundException e) {\n        throw HttpStatusException.of(HttpStatus.NOT_FOUND, e);\n    }\n};\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Armeria server now always has a fallback service which is matched when no routes match a request. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/1625"},"#1625")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2255"},"#2255")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"As a result, a route decorator bound at ",(0,r.kt)("inlineCode",{parentName:"li"},"prefix:/")," can intercept any requests, even the requests not handled by any services:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// CorsService will intercept any requests,\n// even the ones not handled by any services.\nServer server =\n    Server.builder()\n          .service("/foo", fooService)\n          .service("/bar", barService)\n          .routeDecorator().pathPrefix("/")\n                           .build(CorsService.newDecorator(...))\n          .build();\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can now determine the log level of ",(0,r.kt)("inlineCode",{parentName:"p"},"LoggingClient")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"LoggingService")," dynamically. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2250"},"#2250")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2258"},"#2258")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"LoggingClient.builder()\n             .requestLogLevel(log -> ...)\n             .responseLogLevel(log -> {\n                 if (log.responseCause() == null ||\n                     log.responseCause() instanceof HarmlessException) {\n                     return LogLevel.INFO;\n                 } else {\n                     return LogLevel.WARN;\n                 }\n             });\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ClientFactoryOptions")," has been added to allow programmatic access to the ",(0,r.kt)("inlineCode",{parentName:"p"},"ClientFactory")," settings. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2230"},"#2230")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ClientFactory factory = ...;\nboolean pipelining = factory.options().useHttp1Pipelining();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can now disable Armeria's Netty-based asynchronous DNS resolver by specifying ",(0,r.kt)("inlineCode",{parentName:"p"},"-Dcom.linecorp.armeria.useJdkDnsResolver=true")," JVM option. Use it only when the default resolver does not work. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2261"},"#2261")))),(0,r.kt)("h2",{id:"-improvements",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-improvements","aria-label":" improvements permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"💪 Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Armeria client does not block a request anymore when DNS resolution takes long time. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2017"},"#2017")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2217"},"#2217")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2231"},"#2231")),(0,r.kt)("li",{parentName:"ul"},"You do not have to prepend ",(0,r.kt)("inlineCode",{parentName:"li"},"none+")," prefix to non-RPC URIs anymore. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2219"},"#2219")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2241"},"#2241"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Before:\nClients.of("none+https://...", ...);\n// After:\nClients.of("https://...", ...);\n')),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The behavior of ",(0,r.kt)("inlineCode",{parentName:"li"},"Scheme.parse()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"tryParse()")," has been improved in the same manner:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Scheme.parse() now uses SerializationFormat.NONE automatically:\nassert Scheme.parse("http") == Scheme.parse("none+http");\n')))))),(0,r.kt)("h2",{id:"️-bug-fixes",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#%EF%B8%8F-bug-fixes","aria-label":"️ bug fixes permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🛠️ Bug fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Armeria Spring auto-configuration now works correctly even when only ",(0,r.kt)("inlineCode",{parentName:"li"},"GrpcServiceRegistrationBean"),"s are given. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2234"},"#2234")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext")," is not pushed more often than necessary anymore when notifying ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestLogListener"),"s. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2227"},"#2227")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DynamicEndpointGroup")," now handles the case where an endpoint address does not change but only a weight. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2240"},"#2240")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpStatusException")," now respects ",(0,r.kt)("inlineCode",{parentName:"li"},"Flags.verboseExceptionSampler()"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2253"},"#2253")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AccessLogWriter")," does not fail with a ",(0,r.kt)("inlineCode",{parentName:"li"},"ClassCastException")," anymore. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2259"},"#2259")),(0,r.kt)("li",{parentName:"ul"},"Fixed a bug where a service receives an ",(0,r.kt)("inlineCode",{parentName:"li"},"OPTIONS")," request even if the service did not opt-in for ",(0,r.kt)("inlineCode",{parentName:"li"},"OPTIONS")," method. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2263"},"#2263"))),(0,r.kt)("h2",{id:"️-deprecations",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#%EF%B8%8F-deprecations","aria-label":"️ deprecations permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🏚️ Deprecations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactory.DEFAULT")," has been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactory.ofDefault()"),"."),(0,r.kt)("li",{parentName:"ul"},"The getters for host-level settings in ",(0,r.kt)("inlineCode",{parentName:"li"},"ServerConfig")," have been deprecated. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2244"},"#2244")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2246"},"#2246"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Before:\nHttpService service = (ctx, req) -> {\n    return HttpResponse.of("maxRequestLength: %d",\n                           ctx.server().maxRequestLength());\n};\n// After:\nHttpService service = (ctx, req) -> {\n    return HttpResponse.of("maxRequestLength: %d",\n                           ctx.virtualHost().maxRequestLength());\n};\n'))),(0,r.kt)("li",{parentName:"ul"},"Continuing the migration to static ",(0,r.kt)("inlineCode",{parentName:"li"},"builder()")," factory methods, the following classes have switched from constructors to static ",(0,r.kt)("inlineCode",{parentName:"li"},"builder()")," methods: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2221"},"#2221"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientCacheControl")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientConnectionTimings")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientDecoration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientRequestContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"EndpointInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FieldInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpClient")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LoggingClient")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LoggingService")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestContextCurrentTraceContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RetrofitMeterIdPrefixFunction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServerCacheControl")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServiceRequestContext"))))),(0,r.kt)("h2",{id:"️-breaking-changes",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#%EF%B8%8F-breaking-changes","aria-label":"️ breaking changes permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"☢️ Breaking changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The signatures of ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestContext.newDerivedContext()")," have been changed so they always require ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpRequest")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcRequest")," for less ambiguity. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2209"},"#2209")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2224"},"#2224"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Scheme.parse()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"tryParse()")," do not fail anymore even if the scheme does not start with ",(0,r.kt)("inlineCode",{parentName:"p"},"none+"),": ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2219"},"#2219")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2241"},"#2241")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Scheme.parse() now uses SerializationFormat.NONE automatically:\nassert Scheme.parse("http") == Scheme.parse("none+http");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ClientBuilderParams.uri()")," does not return a URI with ",(0,r.kt)("inlineCode",{parentName:"p"},"none+")," prefix anymore. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2219"},"#2219")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2241"},"#2241"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"HttpClient")," interface has been renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"WebClient"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpClient")," is now a different interface that extends ",(0,r.kt)("inlineCode",{parentName:"p"},"Client<HttpRequest, HttpResponse>"),". ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2254"},"#2254")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Doesn\'t work:\nHttpClient client = HttpClient.of("https://www.google.com/");\n// Good:\nWebClient client = WebClient.of("https://www.google.com/");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Services must implement ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpService")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcService")," and clients must implement ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpClient")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcClient"),": ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2239"},"#2239")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2254"},"#2254")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Before:\npublic class FooHttpService implements Service<HttpRequest, HttpResponse> { ... }\npublic class FooRpcService implements Service<RpcRequest, RpcResponse> { ... }\npublic class FooHttpClient implements Client<HttpRequest, HttpResponse> { ... }\npublic class FooRpcClient implements Client<RpcRequest, RpcResponse> { ... }\n// After:\npublic class FooHttpService implements HttpService { ... }\npublic class FooRpcService implements RpcService { ... }\npublic class FooHttpClient implements HttpClient { ... }\npublic class FooRpcClient implements RpcClient { ... }\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You'll have to change any ",(0,r.kt)("inlineCode",{parentName:"p"},"Service<...>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Client<...>")," usages in your code into ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpService"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcService"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpClient")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcClient"),", unless you intended to express ",(0,r.kt)("em",{parentName:"p"},"both")," HTTP- and RPC- level types."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Before:\nService<HttpRequest, HttpResponse> foo(Service<HttpRequest, HttpResponse> bar) { ... }\n// After:\nHttpService foo(HttpService bar) { ... }\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Similarly, you must use ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecoratingHttpClient")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecoratingRpcClient")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecoratingClient"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecoratingHttpService")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecoratingRpcService")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecoratingService"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Does not work:\nclass MyDecoratorService extends SimpleDecoratingService<HttpRequest, HttpResponse> {\n    MyDecoratorService(Service<HttpRequest, HttpResponse> delegate) {\n        super(delegate);\n    }\n    ...\n}\n// Good:\nclass MyDecoratorService extends SimpleDecoratingHttpService {\n    // Note the constructor parameter change.\n    MyDecoratorService(HttpService delegate) {\n        super(delegate);\n    }\n    ...\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If you implemented your decorator without extending the ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecorating{Http,Rpc}Service")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleDecorating{Http,Rpc}Client"),", then you must make sure that it implements ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpService"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcRequest"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpClient")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcClient"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Does not work:\nclass MyDecoratorService implements Service<HttpRequest, HttpResponse> {\n\n    final Service<HttpRequest, HttpResponse> delegate;\n\n    MyDecoratorService(Service<HttpRequest, HttpResponse> delegate) {\n        this.delegate = delegate;\n    }\n    ...\n}\n// Good:\nclass MyDecoratorService implements HttpService {\n    // Note the type change.\n    final HttpService delegate;\n    // Note the constructor parameter change.\n    MyDecoratorService(HttpService delegate) {\n        this.delegate = delegate;\n    }\n    ...\n}\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Service.decorate()")," has been pushed down to ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpService")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"RpcService"),": ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2239"},"#2239")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2254"},"#2254")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Does not work:\nService<HttpRequest, HttpResponse> service = (ctx, req) -> ...;\nservice.decorate(myDecorator); // No such method\n// Good:\nHttpService service (ctx, req) -> ...;\nservice.decorate(myDecorator); // OK!\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The type parameters of decorator ",(0,r.kt)("inlineCode",{parentName:"p"},"Function"),"s have been changed. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2239"},"#2239")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/line/armeria/issues/2254"},"#2254")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Before:\nFunction<Service<HttpRequest, HttpResponse>,\n         ? extends Service<HttpRequest, HttpResponse>> httpServiceDecorator;\nFunction<Service<RpcRequest, RpcResponse>,\n         ? extends Service<RpcRequest, RpcResponse>> rpcServiceDecorator;\nFunction<Client<HttpRequest, HttpResponse>,\n         ? extends Client<HttpRequest, HttpResponse>> httpClientDecorator;\nFunction<Client<RpcRequest, RpcResponse>,\n         ? extends Client<RpcRequest, RpcResponse>> rpcClientDecorator;\n// After:\nFunction<? super HttpService, ? extends HttpService> httpServiceDecorator;\nFunction<? super RpcService, ? extends RpcService> rpcServiceDecorator;\nFunction<? super HttpClient, ? extends HttpClient> httpClientDecorator;\nFunction<? super RpcClient, ? extends RpcClient> rpcClientDecorator;\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Some types, which could be used at both HTTP- and RPC- level, have been split into two different types. For example:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DecoratingClientFunction")," has been split into ",(0,r.kt)("inlineCode",{parentName:"li"},"DecoratingHttpClientFunction")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"DecoratingRpcClientFunction"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DecoratingServiceFunction")," has been split into ",(0,r.kt)("inlineCode",{parentName:"li"},"DecoratingHttpServiceFunction")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"DecoratingRpcServiceFunction"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LoggingClient")," has been split into ",(0,r.kt)("inlineCode",{parentName:"li"},"LoggingClient")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"LoggingRpcClient"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServiceWithRoutes")," has been split into ",(0,r.kt)("inlineCode",{parentName:"li"},"HttpServiceWithRoutes")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"RpcServiceWithRoutes"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TransientService")," has been split into ",(0,r.kt)("inlineCode",{parentName:"li"},"TransientHttpService")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"TransientRpcService"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The following services are now provided only at HTTP-level. Please let us know if you need an RPC-level version of them."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LoggingService")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"MetricCollectingService")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"StructuredLoggingService")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KafkaStructuredLoggingService"))))),(0,r.kt)("h2",{id:"-dependencies",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-dependencies","aria-label":" dependencies permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"⛓ Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Brave 5.8.0 -> 5.9.0"),(0,r.kt)("li",{parentName:"ul"},"gRPC 1.24.1 -> 1.25.0"),(0,r.kt)("li",{parentName:"ul"},"Jackson 2.10.0 -> 2.10.1"),(0,r.kt)("li",{parentName:"ul"},"Micrometer 1.3.0 -> 1.3.1"),(0,r.kt)("li",{parentName:"ul"},"Netty TCNative BoringSSL 2.0.26 -> 2.0.27"),(0,r.kt)("li",{parentName:"ul"},"Protobuf 3.9.1 -> 3.10.0"),(0,r.kt)("li",{parentName:"ul"},"RxJava 2.2.13 -> 2.2.14"),(0,r.kt)("li",{parentName:"ul"},"SLF4J 1.7.28 -> 1.7.29"),(0,r.kt)("li",{parentName:"ul"},"Spring Boot 2.1.9 -> 2.1.10")),(0,r.kt)("h2",{id:"-thank-you",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-thank-you","aria-label":" thank you permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🙇 Thank you"),(0,r.kt)(o,{usernames:["anuraaga","delegacy","eunchan-kim","heowc","hirakida","ikhoon","imasahiro","jrhee17","jyblue","matsumana","mauhiz","minwoox","rmohta","sivaalli","snaiper80","Stupremee","trustin","yanghun0070"],mdxType:"ThankYou"}))}u.isMDXComponent=!0},20370:function(e,t,n){n(88025);var a=n(1923),i=n(25444),r=n(67294),l=n(55746),s=n(8284),p=n(96759),o=n(46731),c=n(9396),m=a.Z.Title,u=Object.keys(s)[0],h=d(u);function d(e){return e.substring(e.lastIndexOf("/")+1)}t.Z=function(e){var t={},n={},a={root:{"Latest news items":"/news","Latest release notes":"/release-notes","Past news items":"/news/list","Past release notes":"/release-notes/list"},"Recent news items":t,"Recent releases":n};Object.entries(l).forEach((function(e){var n=e[0],a=e[1];t[a]=n})),Object.entries(s).forEach((function(e){var t=e[0],a=e[1];n[a]=t}));var k=(0,c.Z)(e.location),N=e.version||d(k);return N.match(/^[0-9]/)||(N=void 0),r.createElement(o.Z,Object.assign({},e,{candidateMdxNodes:[],index:a,prefix:"release-notes",pageTitle:N?N+" release notes":e.pageTitle,pageTitleSuffix:"Armeria release notes"}),N&&N!==h?r.createElement(p.Ch,null,"You're seeing the release note of an old version. Check out"," ",r.createElement(i.Link,{to:u},"the latest release note"),"."):"",N?r.createElement(m,{id:"release-notes",level:1},r.createElement("a",{href:"#release-notes","aria-label":"release notes permalink",className:"anchor before"},r.createElement("svg",{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},r.createElement("path",{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),N," release notes"):"",e.children)}},55746:function(e){e.exports=JSON.parse('{"/news/20231208-newsletter-6":"Armeria Newsletter vol. 6","/news/20230426-newsletter-5":"Armeria Newsletter vol. 5","/news/20220714-newsletter-4":"Armeria Newsletter vol. 4","/news/20211029-newsletter-3":"Armeria Newsletter vol. 3","/news/20210202-newsletter-2":"Armeria Newsletter vol. 2","/news/20200703-newsletter-1":"Armeria Newsletter vol. 1","/news/20200514-newsletter-0":"Armeria Newsletter vol. 0"}')},8284:function(e){e.exports=JSON.parse('{"/release-notes/1.29.4":"v1.29.4","/release-notes/1.29.3":"v1.29.3","/release-notes/1.29.2":"v1.29.2","/release-notes/1.29.1":"v1.29.1","/release-notes/1.29.0":"v1.29.0","/release-notes/1.28.4":"v1.28.4","/release-notes/1.28.3":"v1.28.3","/release-notes/1.28.2":"v1.28.2","/release-notes/1.28.1":"v1.28.1","/release-notes/1.28.0":"v1.28.0","/release-notes/1.27.3":"v1.27.3","/release-notes/1.27.2":"v1.27.2","/release-notes/1.27.1":"v1.27.1","/release-notes/1.27.0":"v1.27.0","/release-notes/1.26.4":"v1.26.4","/release-notes/1.26.3":"v1.26.3"}')}}]);
//# sourceMappingURL=component---src-pages-release-notes-0-96-0-mdx-51654f3d45785e61aadd.js.map