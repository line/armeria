{"version":3,"file":"component---src-pages-tutorials-thrift-blog-implement-read-mdx-533835572a282075ff0f.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/tutorials/thrift/blog/implement-read.mdx","webpack://armeria-site/./src/layouts/tutorials.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/tutorials.tsx\";\nexport const pageTitle = \"Implementing READ operation\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TutorialSteps = makeShortcode(\"TutorialSteps\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst TabPane = makeShortcode(\"TabPane\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"implementing-read-operation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#implementing-read-operation\",\n        \"aria-label\": \"implementing read operation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Implementing READ operation`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#what-you-need\"\n        }}>{`What you need`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#1-implement-server-side\"\n        }}>{`1. Implement server-side`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#2-implement-client-side\"\n        }}>{`2. Implement client-side`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#3-test-retrieving-a-single-post\"\n        }}>{`3. Test retrieving a single post`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#4-test-an-error-case\"\n        }}>{`4. Test an error case`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#5-test-retrieving-multiple-posts\"\n        }}>{`5. Test retrieving multiple posts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#whats-next\"\n        }}>{`What's next`}</a></li>\n    </ul>\n    <p>{`In the earlier step, we created blog posts.\nIn this step, we'll implement a read operation and make a call to read blog posts.\nWe'll write two service methods, one for reading a single post and another for multiple posts.`}</p>\n    <TutorialSteps current={4} mdxType=\"TutorialSteps\" />\n    <h2 {...{\n      \"id\": \"what-you-need\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#what-you-need\",\n        \"aria-label\": \"what you need permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What you need`}</h2>\n    <p>{`You need to have the following files obtained from previous steps.\nYou can always `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/line/armeria-examples/tree/main/tutorials/thrift\"\n      }}>{`download`}</a>{` the full version, instead of creating one yourself.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/tutorials/thrift/blog/define-service#3-compile-the-thrift-file\"\n        }}>{`Generated Java code`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BlogServiceImpl.java`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Main.java`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BlogClient.java`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BlogServiceTest.java`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"1-implement-server-side\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#1-implement-server-side\",\n        \"aria-label\": \"1 implement server side permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`1. Implement server-side`}</h2>\n    <p>{`Let's write two methods for retrieving blog posts; one for a single post and another for multiple posts.`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`In the `}<inlineCode parentName=\"p\">{`BlogServiceImpl`}</inlineCode>{` class, implement the `}<inlineCode parentName=\"p\">{`getBlogPost()`}</inlineCode>{` method to retrieve a single post.\nLet's throw an exception in case there is no blog post for the given ID.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogServiceImpl.java\",\n            \"filename\": \"BlogServiceImpl.java\"\n          }}>{`import example.armeria.blog.thrift.BlogNotFoundException;\n...\n@Override\npublic void getBlogPost(GetBlogPostRequest request, AsyncMethodCallback<BlogPost> resultHandler)\n        throws TException {\n  final BlogPost blogPost = blogPosts.get(request.getId());\n  if (blogPost == null) {\n    // throwing an exception will also have the same effect\n    // throw new BlogNotFoundException(\"The blog post does not exist. ID: \" + request.getId());\n    resultHandler.onError(\n            new BlogNotFoundException(\"The blog post does not exist. ID: \" + request.getId()));\n  } else {\n    resultHandler.onComplete(blogPost);\n  }\n}\n`}</code></pre>\n      </TabPane>\n      <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <ol>\n          <li parentName=\"ol\">{`Implement the `}<inlineCode parentName=\"li\">{`listBlogPosts()`}</inlineCode>{` method in the `}<inlineCode parentName=\"li\">{`BlogServiceImpl`}</inlineCode>{` class to retrieve multiple posts.`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-java\",\n                \"metastring\": \"filename=BlogServiceImpl.java\",\n                \"filename\": \"BlogServiceImpl.java\"\n              }}>{`import java.util.List;\nimport java.util.stream.Collectors;\n...\n@Override\npublic void listBlogPosts(ListBlogPostsRequest request,\n                          AsyncMethodCallback<ListBlogPostsResponse> resultHandler) throws TException {\n  final List<BlogPost> blogPosts = this.blogPosts.values().stream().collect(Collectors.toList());\n  resultHandler.onComplete(new ListBlogPostsResponse().setBlogs(blogPosts));\n}\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">{`Add an if-else statement by adding line 9-16, to sort the blog posts based on the value of the `}<inlineCode parentName=\"li\">{`descending`}</inlineCode>{` parameter.`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-java\",\n                \"metastring\": \"filename=BlogServiceImpl.java showlineno=true\",\n                \"filename\": \"BlogServiceImpl.java\",\n                \"showlineno\": \"true\"\n              }}>{`import java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Map.Entry;\n...\n@Override\npublic void listBlogPosts(ListBlogPostsRequest request,\n                          AsyncMethodCallback<ListBlogPostsResponse> resultHandler) throws TException {\n  final List<BlogPost> blogPosts;\n  if (request.isDescending()) {\n    blogPosts = this.blogPosts.entrySet()\n                              .stream()\n                              .sorted(Collections.reverseOrder(Comparator.comparingInt(Entry::getKey)))\n                              .map(Entry::getValue).collect(Collectors.toList());\n  } else {\n    blogPosts = this.blogPosts.values().stream().collect(Collectors.toList());\n  }\n  resultHandler.onComplete(new ListBlogPostsResponse().setBlogs(blogPosts));\n}\n`}</code></pre>\n          </li>\n        </ol>\n      </TabPane>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"2-implement-client-side\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#2-implement-client-side\",\n        \"aria-label\": \"2 implement client side permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`2. Implement client-side`}</h2>\n    <p>{`This time, we'll implement the client-side for reading blog posts.\nLet's implement client methods for each corresponding server method.`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`In the `}<inlineCode parentName=\"p\">{`BlogClient`}</inlineCode>{` class, add a method to retrieve a single post.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`import example.armeria.blog.thrift.GetBlogPostRequest;\n...\nBlogPost getBlogPost(int id) throws TException {\n  final GetBlogPostRequest request =\n              new GetBlogPostRequest().setId(id);\n  return blogService.getBlogPost(request);\n}\n`}</code></pre>\n      </TabPane>\n      <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <p>{`In the `}<inlineCode parentName=\"p\">{`BlogClient`}</inlineCode>{` class, add a method to retrieve a list of posts.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`import example.armeria.blog.thrift.ListBlogPostsRequest;\nimport example.armeria.blog.thrift.ListBlogPostsResponse;\n...\nList<BlogPost> listBlogPosts(boolean descending) throws TException {\n  return blogService.listBlogPosts(new ListBlogPostsRequest().setDescending(descending))\n                    .getBlogs();\n}\n`}</code></pre>\n      </TabPane>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"3-test-retrieving-a-single-post\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#3-test-retrieving-a-single-post\",\n        \"aria-label\": \"3 test retrieving a single post permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`3. Test retrieving a single post`}</h2>\n    <p>{`Let's test if we can retrieve a blog post we created.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<inlineCode parentName=\"p\">{`BlogServiceTest`}</inlineCode>{` class, add a test method to retrieve the first blog post with ID `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogServiceTest.java\",\n            \"filename\": \"BlogServiceTest.java\"\n          }}>{`@Test\nvoid getBlogPost() throws TException {\n  final BlogClient client = new BlogClient(server.httpUri(), \"/thrift\");\n  final BlogPost blogPost = client.getBlogPost(0);\n\n  assertThat(blogPost.getTitle()).isEqualTo(\"My first blog\");\n  assertThat(blogPost.getContent()).isEqualTo(\"Hello Armeria!\");\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add annotations to configure the order our test methods will be executed.\nThe annotations guarantee that the first blog post will be created in the `}<inlineCode parentName=\"p\">{`createBlogPost()`}</inlineCode>{` method before we try to retrieve it in the `}<inlineCode parentName=\"p\">{`getBlogPost()`}</inlineCode>{` method.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogServiceTest.java\",\n            \"filename\": \"BlogServiceTest.java\"\n          }}>{`import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;\nimport org.junit.jupiter.api.Order;\nimport org.junit.jupiter.api.TestMethodOrder;\n\n@TestMethodOrder(OrderAnnotation.class) // Add this\nclass BlogServiceTest {\n  ...\n\n  @Test\n  @Order(1) // Add this\n  void createBlogPost() throws TException {\n    ...\n  }\n\n  @Test\n  @Order(2) // Add this\n  void getBlogPost() throws TException {\n    ...\n  }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run all the test cases on your IDE or using Gradle.`}</p>\n        <p parentName=\"li\">{`Your client retrieved a blog post from the server successfully if the test is passed.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"4-test-an-error-case\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#4-test-an-error-case\",\n        \"aria-label\": \"4 test an error case permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`4. Test an error case`}</h2>\n    <p>{`Let's try retrieving a blog post that does not exist.\nAdd a test method to retrieve a blog post with an invalid ID, asserting an exception is thrown.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogServiceTest.java\",\n        \"filename\": \"BlogServiceTest.java\"\n      }}>{`import static org.assertj.core.api.Assertions.catchThrowable;\nimport example.armeria.blog.thrift.BlogNotFoundException;\n...\n@Test\n@Order(3)\nvoid getInvalidBlogPost() {\n  final BlogClient client = new BlogClient(server.httpUri(), \"/thrift\");\n  final Throwable exception = catchThrowable(() -> {\n    client.getBlogPost(Integer.MAX_VALUE);\n  });\n  assertThat(exception)\n    .isInstanceOf(BlogNotFoundException.class)\n    .extracting(\"reason\")\n    .asString()\n    .isEqualTo(\"The blog post does not exist. ID: \" + Integer.MAX_VALUE);\n}\n`}</code></pre>\n    <p>{`Run all the test cases on your IDE or using Gradle.\nCheck that you see the test is passed.`}</p>\n    <h2 {...{\n      \"id\": \"5-test-retrieving-multiple-posts\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#5-test-retrieving-multiple-posts\",\n        \"aria-label\": \"5 test retrieving multiple posts permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`5. Test retrieving multiple posts`}</h2>\n    <p>{`Finally, let's test if we can retrieve multiple posts.\nAdd a test method like the following to create the second blog post and test retrieving the list of blog posts.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogServiceTest.java\",\n        \"filename\": \"BlogServiceTest.java\"\n      }}>{`import java.util.List;\n...\n@Test\n@Order(4)\nvoid listBlogPosts() throws TException {\n  final BlogClient client = new BlogClient(server.httpUri(), \"/thrift\");\n  client.createBlogPost(\"My second blog\", \"Armeria is awesome!\");\n\n  final List<BlogPost> blogs = client.listBlogPosts(false);\n  assertThat(blogs).hasSize(2);\n  final BlogPost firstBlog = blogs.get(0);\n  assertThat(firstBlog.getTitle()).isEqualTo(\"My first blog\");\n  assertThat(firstBlog.getContent()).isEqualTo(\"Hello Armeria!\");\n\n  final BlogPost secondBlog = blogs.get(1);\n  assertThat(secondBlog.getTitle()).isEqualTo(\"My second blog\");\n  assertThat(secondBlog.getContent()).isEqualTo(\"Armeria is awesome!\");\n}\n`}</code></pre>\n    <p>{`Run all the test cases on your IDE or using Gradle.\nCheck that you see the test is passed.`}</p>\n    <h2 {...{\n      \"id\": \"whats-next\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#whats-next\",\n        \"aria-label\": \"whats next permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What's next`}</h2>\n    <p>{`In this step, we've implemented service methods and client methods to retrieve blog posts.`}</p>\n    <p>{`Next, at `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/thrift/blog/implement-update\"\n      }}>{`Step 5. Implement UPDATE`}</a>{`, we'll implement an UPDATE operation to update a blog post.`}</p>\n    <TutorialSteps current={4} mdxType=\"TutorialSteps\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/tutorials/toc.json';\nimport MdxLayout from './mdx';\n\ninterface TutorialLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst TutorialLayout: React.FC<TutorialLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(\n        filter: { fileAbsolutePath: { glob: \"**/src/pages/tutorials/**\" } }\n      ) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n              relativeDirectory\n            }\n          }\n          frontmatter {\n            menuTitle\n            order\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"tutorials\"\n      menuTitle\n      pageTitleSuffix=\"Armeria tutorial\"\n    />\n  );\n};\n\nexport default TutorialLayout;\n"],"names":["pageTitle","_frontmatter","makeShortcode","name","props","console","warn","mdx","TutorialSteps","Tabs","TabPane","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","current","tab","key","isMDXComponent","allMdx","nodes","candidateMdxNodes","useStaticQuery","React","MdxLayout","index","docsIndex","prefix","menuTitle","pageTitleSuffix"],"sourceRoot":""}