dependencies {
    // To let a user choose between thrift and thrift0.9.
    compileOnly project(':thrift0.17')
    implementation project(':logback')

    implementation libs.micrometer13.core
    implementation libs.micrometer13.spring.legacy

    // TODO(anuraaga): Consider removing these since this module does not have related functionality.
    optionalApi libs.micrometer13.prometheus

    optionalApi libs.dropwizard.metrics.json

    api libs.javax.inject
    compileOnly libs.javax.validation
    api libs.spring.boot1.autoconfigure

    annotationProcessor libs.spring.boot1.configuration.processor

    testImplementation project(':grpc')
    testImplementation project(':thrift0.17')
    testImplementation libs.spring.boot1.starter
    testImplementation libs.spring.boot1.starter.test
    // Enables cglib for testing
    testImplementation libs.hibernate.validator6
}

// Use the sources from ':spring:boot3-autoconfigure'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
def autoconfigureProjectDir = "${rootProject.projectDir}/spring/boot3-autoconfigure"
// Copy common files from boot2-autoconfigure module to gen-src directory in order to use them as a source set.
task generateSources(type: Copy) {
    from "${autoconfigureProjectDir}/src/main/java"
    into "${project.ext.genSrcDir}/main/java"
    exclude '**/ArmeriaAutoConfiguration.java'
    exclude '**/ArmeriaBeanPostProcessor.java'
    exclude '**/ArmeriaBeanPostProcessorConfiguration.java'
    exclude '**/package-info.java'
}

tasks.compileJava.dependsOn(generateSources)
tasks.compileTestJava.source "${projectDir}/src/test/java",
        "${autoconfigureProjectDir}/src/test/java",
        "${autoconfigureProjectDir}/gen-src/test/grpc",
        "${autoconfigureProjectDir}/gen-src/test/java"
tasks.processTestResources.from "${autoconfigureProjectDir}/src/test/resources"
tasks.sourcesJar.from "${autoconfigureProjectDir}/src/main/resources"

tasks.compileTestJava.dependsOn(project(':spring:boot3-autoconfigure').tasks.compileTestJava)

// Disable checkstyle because it's checked by ':spring:boot3-autoconfigure'.
tasks.withType(Checkstyle) {
    onlyIf { false }
}

// allows illegal access by cglib
if (rootProject.ext.testJavaVersion >= 16) {
    tasks.withType(Test) {
        jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED'
    }
}
