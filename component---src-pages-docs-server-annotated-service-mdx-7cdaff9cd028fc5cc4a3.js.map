{"version":3,"file":"component---src-pages-docs-server-annotated-service-mdx-7cdaff9cd028fc5cc4a3.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/docs/server-annotated-service.mdx","webpack://armeria-site/./src/layouts/docs.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Annotated services\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Tip = makeShortcode(\"Tip\");\nconst Warning = makeShortcode(\"Warning\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"annotated-services\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#annotated-services\",\n        \"aria-label\": \"annotated services permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Annotated services`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#mapping-http-service-methods\"\n          }}>{`Mapping HTTP service methods`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#parameter-injection\"\n          }}>{`Parameter injection`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#injecting-a-parameter-as-an-enum-type\"\n            }}>{`Injecting a parameter as an Enum type`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#getting-a-query-parameter\"\n            }}>{`Getting a query parameter`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#getting-an-http-header\"\n            }}>{`Getting an HTTP header`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#getting-a-custom-attribute-value\"\n            }}>{`Getting a custom attribute value`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#other-classes-automatically-injected\"\n            }}>{`Other classes automatically injected`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#handling-exceptions\"\n          }}>{`Handling exceptions`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#conversion-between-an-http-message-and-a-java-object\"\n          }}>{`Conversion between an HTTP message and a Java object`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><a parentName=\"p\" {...{\n                \"href\": \"#converting-an-http-request-to-a-java-object\"\n              }}>{`Converting an HTTP request to a Java object`}</a></p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#injecting-value-of-parameters-and-http-headers-into-a-java-object\"\n                }}>{`Injecting value of parameters and HTTP headers into a Java object`}</a></li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><a parentName=\"p\" {...{\n                \"href\": \"#converting-a-java-object-to-an-http-response\"\n              }}>{`Converting a Java object to an HTTP response`}</a></p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#specifying-a-blocking-task-executor\"\n          }}>{`Specifying a blocking task executor`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#using-serverbuilder-to-configure-converters-and-exception-handlers\"\n          }}>{`Using ServerBuilder to configure converters and exception handlers`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#returning-a-response\"\n          }}>{`Returning a response`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#decorating-an-annotated-service\"\n          }}>{`Decorating an annotated service`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#decorating-an-annotated-service-with-a-custom-decorator-annotation\"\n            }}>{`Decorating an annotated service with a custom decorator annotation`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#evaluation-order-of-decorators\"\n            }}>{`Evaluation order of decorators`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#media-type-negotiation\"\n          }}>{`Media type negotiation`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#creating-user-defined-media-type-annotations\"\n            }}>{`Creating user-defined media type annotations`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#specifying-additional-response-headerstrailers\"\n          }}>{`Specifying additional response headers/trailers`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#using-a-composite-annotation\"\n          }}>{`Using a composite annotation`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#specifying-the-service-name\"\n          }}>{`Specifying the service name`}</a></p>\n      </li>\n    </ul>\n    <Tip mdxType=\"Tip\">\n      <p>{`Visit `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/line/armeria-examples\"\n        }}>{`armeria-examples`}</a>{` to find a fully working example.`}</p>\n    </Tip>\n    <p>{`Armeria provides a way to write an HTTP service using annotations. It helps a user make his or her code\nsimple and easy to understand. A user is able to run an HTTP service by fewer lines of code using\nannotations as follows. `}<inlineCode parentName=\"p\">{`hello()`}</inlineCode>{` method in the example would be mapped to the path of `}<inlineCode parentName=\"p\">{`/hello/{name}`}</inlineCode>{`\nwith an HTTP `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ServerBuilder sb = Server.builder();\nsb.annotatedService(new Object() {\n    @Get(\"/hello/{name}\")\n    public HttpResponse hello(@Param(\"name\") String name) {\n        return HttpResponse.of(HttpStatus.OK,\n                               MediaType.PLAIN_TEXT_UTF_8,\n                               \"Hello, %s!\", name);\n    }\n});\n`}</code></pre>\n    <Tip mdxType=\"Tip\">\n      <p>{`For more information about using some well-known clients, please refer to\n`}<a parentName=\"p\" {...{\n          \"href\": \"/docs/advanced-client-interoperability#annotated-services\"\n        }}>{`Client interoperability`}</a>{`.`}</p>\n    </Tip>\n    <h2 {...{\n      \"id\": \"mapping-http-service-methods\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#mapping-http-service-methods\",\n        \"aria-label\": \"mapping http service methods permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Mapping HTTP service methods`}</h2>\n    <p>{`To map a service method in an annotated HTTP service class to an HTTP path, it has to be annotated with one of\nHTTP method annotations. The following is the list of HTTP method annotations where each of them is mapped\nto an HTTP method.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html\"\n        }}>{`type://@Get`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Head:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Head.html\"\n        }}>{`type://@Head`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html\"\n        }}>{`type://@Post`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Put:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Put.html\"\n        }}>{`type://@Put`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Delete:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Delete.html\"\n        }}>{`type://@Delete`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Options:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Options.html\"\n        }}>{`type://@Options`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Patch:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Patch.html\"\n        }}>{`type://@Patch`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://@Trace:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Trace.html\"\n        }}>{`type://@Trace`}</a></li>\n    </ul>\n    <p>{`To handle an HTTP request with a service method, you can annotate your service method simply as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Get(\"/hello\")\n    public HttpResponse hello() { ... }\n}\n`}</code></pre>\n    <p>{`There are 5 different path types that you can define:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Exact path, e.g. `}<inlineCode parentName=\"p\">{`/hello`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`exact:/hello`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`a service method will handle the path exactly matched with the specified path.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Prefix path, e.g. `}<inlineCode parentName=\"p\">{`prefix:/hello`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`a service method will handle every path which starts with the specified prefix.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Path containing path variables, e.g `}<inlineCode parentName=\"p\">{`/hello/{name}`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`/hello/:name`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`a service method will handle the path matched with the specified path pattern. A path variable in the\nspecified pattern may be mapped to a parameter of the service method.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Regular expression path, e.g. `}<inlineCode parentName=\"p\">{`regex:^/hello/(?<name>.*)$`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`a service method will handle the path matched with the specified regular expression. If a named capturing\ngroup exists in the regular expression, it may be mapped to a parameter of the service method.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Glob pattern path, e.g. `}<inlineCode parentName=\"p\">{`glob:/*/hello/**`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`a service method will handle the path matched with the specified glob pattern. Each wildcard is mapped to\nan index which starts with `}<inlineCode parentName=\"li\">{`0`}</inlineCode>{`, so it may be mapped to a parameter of the service method.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`You can get the value of a path variable, a named capturing group of the regular expression or wildcards of\nthe glob pattern in your service method by annotating a parameter with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{` as follows.\nPlease refer to `}<a parentName=\"p\" {...{\n        \"href\": \"#parameter-injection\"\n      }}>{`Parameter injection`}</a>{` for more information about `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello/{name}\")\n    public HttpResponse pathVar(@Param(\"name\") String name) { ... }\n\n    @Get(\"regex:^/hello/(?<name>.*)$\")\n    public HttpResponse regex(@Param(\"name\") String name) { ... }\n\n    @Get(\"glob:/*/hello/**\")\n    public HttpResponse glob(@Param(\"0\") String prefix,\n                             @Param(\"1\") String name) { ... }\n}\n`}</code></pre>\n    <p>{`Every service method in the examples so far had a single HTTP method annotation with it. What if you want\nto map more than one HTTP method or path to your service method? You can use `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Path:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Path.html\"\n      }}>{`type://@Path`}</a>{` annotations to\nspecify multiple paths, and use the HTTP method annotations without a path to map multiple HTTP methods, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Get\n    @Post\n    @Put\n    @Delete\n    @Path(\"/hello\")\n    @Path(\"/hi\")\n    public HttpResponse greeting() { ... }\n}\n`}</code></pre>\n    <p>{`Every service method assumes that it returns an HTTP response with `}<inlineCode parentName=\"p\">{`200 OK`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`204 No Content`}</inlineCode>{` status\naccording to its return type. If the return type is `}<inlineCode parentName=\"p\">{`void`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Void`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`204 No Content`}</inlineCode>{` would be applied.\n`}<inlineCode parentName=\"p\">{`200 OK`}</inlineCode>{` would be applied for the other types. If you want to return an alternative status code for a method,\nyou can use `}<a parentName=\"p\" {...{\n        \"href\": \"type://@StatusCode:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/StatusCode.html\"\n      }}>{`type://@StatusCode`}</a>{` annotation as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @StatusCode(201)\n    @Post(\"/users/{name}\")\n    public User createUser(@Param(\"name\") String name) { ... }\n\n    // @StatusCode(200) would be applied by default.\n    @Get(\"/users/{name}\")\n    public User getUser(@Param(\"name\") String name) { ... }\n\n    // @StatusCode(204) would be applied by default.\n    @Delete(\"/users/{name}\")\n    public void deleteUser(@Param(\"name\") String name) { ... }\n}\n`}</code></pre>\n    <p>{`You can define a service method which handles a request only if it contains a header or parameter the method\nrequires. The following methods are bound to the same path `}<inlineCode parentName=\"p\">{`/users`}</inlineCode>{` but a request may be routed based on the\n`}<inlineCode parentName=\"p\">{`client-type`}</inlineCode>{` header.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    // Handles a request which contains 'client-type: android' header.\n    @Get(\"/users\")\n    @MatchesHeader(\"client-type=android\")\n    public User getUsers1() { ... }\n\n    // Handles a request which contains 'client-type' header.\n    // Any values of the 'client-type' header are accepted.\n    @Get(\"/users\")\n    @MatchesHeader(\"client-type\")\n    public User getUsers2() { ... }\n\n    // Handles a request which doesn't contain 'client-type' header.\n    @Get(\"/users\")\n    public User getUsers3() { ... }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"parameter-injection\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#parameter-injection\",\n        \"aria-label\": \"parameter injection permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Parameter injection`}</h2>\n    <p>{`Let's see the example in the above section again.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello/{name}\")\n    public HttpResponse pathvar(@Param(\"name\") String name) { ... }\n\n    @Get(\"regex:^/hello/(?<name>.*)$\")\n    public HttpResponse regex(@Param(\"name\") String name) { ... }\n\n    @Get(\"glob:/*/hello/**\")\n    public HttpResponse glob(@Param(\"0\") String prefix,\n                             @Param(\"1\") String name) { ... }\n}\n`}</code></pre>\n    <p>{`A value of a parameter `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` is automatically injected as a `}<inlineCode parentName=\"p\">{`String`}</inlineCode>{` by Armeria.\nArmeria will try to convert the value appropriately if the parameter type is not `}<inlineCode parentName=\"p\">{`String`}</inlineCode>{`.\n`}<inlineCode parentName=\"p\">{`IllegalArgumentException`}</inlineCode>{` will be raised if the conversion fails or the parameter type is not\none of the following supported types:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Primitive types and their wrapper types:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`boolean`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Boolean`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`byte`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Byte`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`short`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Short`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`integer`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Integer`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`long`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Long`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`float`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Float`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`double`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Double`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Well-known JDK classes:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`String`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`CharSequence`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`AsciiString`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Enum`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UUID`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`java.time`}</inlineCode>{` package classes`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Instant`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Duration`}</inlineCode>{` and  `}<inlineCode parentName=\"li\">{`Period`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LocalDate`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`LocalDateTime`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`LocalTime`}</inlineCode>{`,`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`OffsetDateTime`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`OffsetTime`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ZonedDateTime`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`ZoneId`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`ZoneOffset`}</inlineCode></li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Custom types with either of the following public static methods/constructor taking a single `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{` parameter.\nNote that these are scanned for in the order below. The first matching method being is used,\nand if that method throws an exception, no other methods will be tried and that exception will\nbe propagated.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`public static T of(String)`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`public static T valueOf(String)`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`public static T fromString(String)`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`public T(String)`}</inlineCode>{` (constructor)`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`Note that you can omit the value of `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{` if you compiled your code with `}<inlineCode parentName=\"p\">{`-parameters`}</inlineCode>{` javac\noption. In this case the variable name is used as the value.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Get(\"/hello/{name}\")\n    public HttpResponse hello1(@Param String name) { ... }\n}\n`}</code></pre>\n    <p>{`Please refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup#configure--parameters-javac-option\"\n      }}>{`Configure -parameters javac option`}</a>{`\nfor more information.`}</p>\n    <h3 {...{\n      \"id\": \"injecting-a-parameter-as-an-enum-type\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#injecting-a-parameter-as-an-enum-type\",\n        \"aria-label\": \"injecting a parameter as an enum type permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Injecting a parameter as an `}<inlineCode parentName=\"h3\">{`Enum`}</inlineCode>{` type`}</h3>\n    <p><inlineCode parentName=\"p\">{`Enum`}</inlineCode>{` type is also automatically converted if you annotate a parameter of your service method with\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{` annotation. If your `}<inlineCode parentName=\"p\">{`Enum`}</inlineCode>{` type can be handled in a case-insensitive way, Armeria\nautomatically converts the string value of a parameter to a value of `}<inlineCode parentName=\"p\">{`Enum`}</inlineCode>{` in a case-insensitive way.\nOtherwise, case-sensitive exact match will be performed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public enum CaseInsensitive {\n    ALPHA, BRAVO, CHARLIE\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public enum CaseSensitive {\n    ALPHA, alpha\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello1/{there}\")\n    public HttpResponse hello1(@Param(\"there\") CaseInsensitive there) {\n        // 'there' is converted in a case-insensitive way.\n    }\n\n    @Get(\"/hello2/{there}\")\n    public HttpResponse hello2(@Param(\"there\") CaseSensitive there) {\n        // 'there' must be converted in a case-sensitive way.\n        // So 'ALPHA' and 'alpha' are only acceptable.\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getting-a-query-parameter\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#getting-a-query-parameter\",\n        \"aria-label\": \"getting a query parameter permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Getting a query parameter`}</h3>\n    <p>{`When the value of `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{` annotation is not shown in the path pattern, it will be handled as a\nparameter name of the query string of the request. If you have a service class like the example below and\na user sends an HTTP `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` request with URI of `}<inlineCode parentName=\"p\">{`/hello1?name=armeria`}</inlineCode>{`, the service method will get `}<inlineCode parentName=\"p\">{`armeria`}</inlineCode>{`\nas the value of parameter `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`.`}</p>\n    <p>{`If there is no parameter named `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` in the query string, the service method that requires it will not be\ninvoked, but the client will get a `}<inlineCode parentName=\"p\">{`400 Bad Request`}</inlineCode>{` response.  If you want to allow `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` to be injected,\nyou can use `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html\"\n      }}>{`type://@Default`}</a>{` annotation, `}<inlineCode parentName=\"p\">{`@Nullable`}</inlineCode>{` annotation or `}<inlineCode parentName=\"p\">{`Optional<?>`}</inlineCode>{` class, like demonstrated\nbelow in `}<inlineCode parentName=\"p\">{`hello2()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`hello3()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`hello4()`}</inlineCode>{` methods:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello1\")\n    // Will not be invoked but return a 400 status when 'name' parameter is missing.\n    public HttpResponse hello1(@Param(\"name\") String name) { ... }\n\n    @Get(\"/hello2\")\n    public HttpResponse hello2(@Param(\"name\") @Default(\"armeria\") String name) { ... }\n\n    @Get(\"/hello3\")\n    public HttpResponse hello3(@Param(\"name\") @Nullable String name) {\n        String clientName = name != null ? name : \"armeria\";\n        // ...\n    }\n\n    @Get(\"/hello4\")\n    public HttpResponse hello4(@Param(\"name\") Optional<String> name) {\n        String clientName = name.orElse(\"armeria\");\n        // ...\n    }\n}\n`}</code></pre>\n    <Tip mdxType=\"Tip\">\n      <p><inlineCode parentName=\"p\">{`@Nullable`}</inlineCode>{` annotation can be from `}<em parentName=\"p\">{`any`}</em>{` package as long as its simple name is `}<inlineCode parentName=\"p\">{`Nullable`}</inlineCode>{`.\nFor example, it can be `}<inlineCode parentName=\"p\">{`@javax.annotation.Nullable`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`@org.checkerframework.checker.nullness.qual.Nullable`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`@io.reactivex.annotations.Nullable`}</inlineCode>{`.`}</p>\n    </Tip>\n    <p>{`If multiple parameters exist with the same name in a query string, they can be injected as a `}<inlineCode parentName=\"p\">{`List<?>`}</inlineCode>{`\nor `}<inlineCode parentName=\"p\">{`Set<?>`}</inlineCode>{`, e.g. `}<inlineCode parentName=\"p\">{`/hello1?number=1&number=2&number=3`}</inlineCode>{`. You can use `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html\"\n      }}>{`type://@Default`}</a>{` annotation\nor `}<inlineCode parentName=\"p\">{`Optional<?>`}</inlineCode>{` class here, too.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Get(\"/hello1\")\n    public HttpResponse hello1(@Param(\"number\") List<Integer> numbers) { ... }\n\n    // If there is no 'number' parameter, the default value \"1\" will be converted to\n    // Integer 1, then it will be added to the 'numbers' list.\n    @Get(\"/hello2\")\n    public HttpResponse hello2(@Param(\"number\") @Default(\"1\")\n                               List<Integer> numbers) { ... }\n\n    @Get(\"/hello3\")\n    public HttpResponse hello3(@Param(\"number\")\n                               Optional<List<Integer>> numbers) { ... }\n}\n`}</code></pre>\n    <p>{`If you specify query delimiter while building an annotated service, or a `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Delimiter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Delimiter.html\"\n      }}>{`type://@Delimiter`}</a>{` annotation with a\nquery parameter, a single parameter will be converted into separated values if the parameter is mapped to a\n`}<inlineCode parentName=\"p\">{`List<?>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Set<?>`}</inlineCode>{`, e.g. `}<inlineCode parentName=\"p\">{`/hello1?number=1,2,3`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`sb.annotatedService()\n  .queryDelimiter(\",\")\n  .build(new MyAnnotatedService());\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Get(\"/hello1\")\n    public HttpResponse hello1(@Param(\"number\") @Delimiter(\",\") List<Integer> numbers) { ... }\n}\n`}</code></pre>\n    <p>{`If an HTTP `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` request with a `}<inlineCode parentName=\"p\">{`Content-Type: x-www-form-urlencoded`}</inlineCode>{` header is received and\nno `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{` value appears in the path pattern, Armeria will aggregate the received request and\ndecode its body as a URL-encoded form. After that, Armeria will inject the decoded value into the parameter.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Post(\"/hello4\")\n    public HttpResponse hello4(@Param(\"name\") String name) {\n        // 'x-www-form-urlencoded' request will be aggregated.\n        // The other requests may get a '400 Bad Request' because\n        // there is no way to inject a mandatory parameter 'name'.\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getting-an-http-header\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#getting-an-http-header\",\n        \"aria-label\": \"getting an http header permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Getting an HTTP header`}</h3>\n    <p>{`Armeria also provides `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html\"\n      }}>{`type://@Header`}</a>{` annotation to inject an HTTP header value into a parameter.\nThe parameter annotated with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html\"\n      }}>{`type://@Header`}</a>{` can also be specified as one of the built-in types as follows.\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html\"\n      }}>{`type://@Default`}</a>{` and `}<inlineCode parentName=\"p\">{`Optional<?>`}</inlineCode>{` are also supported. `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html\"\n      }}>{`type://@Header`}</a>{` annotation also supports\n`}<inlineCode parentName=\"p\">{`List<?>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Set<?>`}</inlineCode>{` because HTTP headers can be added several times with the same name.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello1\")\n    public HttpResponse hello1(@Header(\"Authorization\") String auth) { ... }\n\n    @Post(\"/hello2\")\n    public HttpResponse hello2(@Header(\"Content-Length\") long contentLength) { ... }\n\n    @Post(\"/hello3\")\n    public HttpResponse hello3(@Header(\"Forwarded\") List<String> forwarded) { ... }\n\n    @Post(\"/hello4\")\n    public HttpResponse hello4(@Header(\"Forwarded\")\n                               Optional<Set<String>> forwarded) { ... }\n}\n`}</code></pre>\n    <p>{`Note that you can omit the value of `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html\"\n      }}>{`type://@Header`}</a>{` if you compiled your code with `}<inlineCode parentName=\"p\">{`-parameters`}</inlineCode>{` javac\noption. Read `}<a parentName=\"p\" {...{\n        \"href\": \"#parameter-injection\"\n      }}>{`Parameter injection`}</a>{` for more information.\nIn this case, the variable name is used as the value, but it will be converted to hyphen-separated lowercase\nstring to be suitable for general HTTP header names. e.g. a variable name `}<inlineCode parentName=\"p\">{`contentLength`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`content_length`}</inlineCode>{` will be converted to `}<inlineCode parentName=\"p\">{`content-length`}</inlineCode>{` as the value of `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html\"\n      }}>{`type://@Header`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Post(\"/hello2\")\n    public HttpResponse hello2(@Header long contentLength) { ... }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getting-a-custom-attribute-value\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#getting-a-custom-attribute-value\",\n        \"aria-label\": \"getting a custom attribute value permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Getting a custom attribute value`}</h3>\n    <p>{`Armeria also provides the `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Attribute:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Attribute.html\"\n      }}>{`type://@Attribute`}</a>{` annotation to inject a\ncustom attribute value of a `}<a parentName=\"p\" {...{\n        \"href\": \"type://RequestContext:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/RequestContext.html\"\n      }}>{`type://RequestContext`}</a>{` into the annotated\nparameter. The `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Attribute:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Attribute.html\"\n      }}>{`type://@Attribute`}</a>{` annotation has two attributes:\n`}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` and  `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{`, as shown in the example below. If both `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{`\nand `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` are specified, `}<inlineCode parentName=\"p\">{`AttributeKey.valueOf(prefix, value)`}</inlineCode>{` will\nbe used to look up the `}<inlineCode parentName=\"p\">{`AttributeKey`}</inlineCode>{` of the custom attribute.\nIf `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{` is unspecified, the class of the annotated service will be\ntried as the `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{` (e.g. `}<inlineCode parentName=\"p\">{`Attribute.valueOf(MyAnnotatedService.class, value)`}</inlineCode>{`),\nand then if there's no such attribute, `}<inlineCode parentName=\"p\">{`Attribute.valueOf(value)`}</inlineCode>{`\nwill be tried as a fallback.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAttributes {\n    public static final AttributeKey<String> USERNAME =\n            AttributeKey.valueOf(MyAttributes.class, \"USERNAME\");\n}\n\npublic class MyAnnotatedService {\n\n    // Uses \\`AttributeKey.valueOf(MyAttributes.class, \"USERNAME\")\\`\n    @Get(\"/hello1\")\n    public HttpResponse hello1(@Attribute(prefix = MyAttributes.class,\n                                          value = \"USERNAME\")\n                               String username) { ... }\n\n    // Uses \\`AttributeKey.valueOf(MyAnnotatedService.class, \"USERNAME\")\\`\n    // if possible. If non-existent, use \\`AttributeKey.valueOf(\"USERNAME\")\\`.\n    @Post(\"/hello2\")\n    public HttpResponse hello2(@Attribute(\"USERNAME\") String username) { ... }\n}\n`}</code></pre>\n    <p>{`Note that if no attribute for the specified `}<inlineCode parentName=\"p\">{`AttributeKey`}</inlineCode>{` is found in `}<a parentName=\"p\" {...{\n        \"href\": \"type://RequestContext:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/RequestContext.html\"\n      }}>{`type://RequestContext`}</a>{`, `}<inlineCode parentName=\"p\">{`IllegalArgumentException`}</inlineCode>{` will occur at runtime.`}</p>\n    <h3 {...{\n      \"id\": \"other-classes-automatically-injected\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#other-classes-automatically-injected\",\n        \"aria-label\": \"other classes automatically injected permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Other classes automatically injected`}</h3>\n    <p>{`The following classes are automatically injected when you specify them on the parameter list of your method.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://ServiceRequestContext:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html\"\n        }}>{`type://ServiceRequestContext`}</a>{` (or `}<a parentName=\"li\" {...{\n          \"href\": \"type://RequestContext:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/RequestContext.html\"\n        }}>{`type://RequestContext`}</a>{`)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://RequestHeaders:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/RequestHeaders.html\"\n        }}>{`type://RequestHeaders`}</a>{` (or `}<a parentName=\"li\" {...{\n          \"href\": \"type://HttpHeaders:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpHeaders.html\"\n        }}>{`type://HttpHeaders`}</a>{`)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://HttpRequest:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpRequest.html\"\n        }}>{`type://HttpRequest`}</a>{` (or `}<a parentName=\"li\" {...{\n          \"href\": \"type://Request:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/Request.html\"\n        }}>{`type://Request`}</a>{`)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://AggregatedHttpRequest:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/AggregatedHttpRequest.html\"\n        }}>{`type://AggregatedHttpRequest`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://QueryParams:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/QueryParams.html\"\n        }}>{`type://QueryParams`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"type://Cookies:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/Cookies.html\"\n        }}>{`type://Cookies`}</a></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello1\")\n    public HttpResponse hello1(ServiceRequestContext ctx, HttpRequest req) {\n        // Use the context and request inside a method.\n    }\n\n    @Post(\"/hello2\")\n    public HttpResponse hello2(AggregatedHttpRequest aggregatedRequest) {\n        // Armeria aggregates the received HttpRequest and\n        // calls this method with the aggregated request.\n    }\n\n    @Get(\"/hello3\")\n    public HttpResponse hello3(QueryParams params) {\n        // 'params' holds the parameters parsed from a query string of a request.\n    }\n\n    @Post(\"/hello4\")\n    public HttpResponse hello4(QueryParams params) {\n        // If a request has a url-encoded form as its body,\n        // it can be accessed via 'params'.\n    }\n\n    @Post(\"/hello5\")\n    public HttpResponse hello5(Cookies cookies) {\n        // If 'Cookie' header exists, it will be injected into\n        // the specified 'cookies' parameter.\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"handling-exceptions\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#handling-exceptions\",\n        \"aria-label\": \"handling exceptions permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Handling exceptions`}</h2>\n    <p>{`It is often useful to extract exception handling logic from service methods into a separate common class.\nArmeria provides `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ExceptionHandler:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandler.html\"\n      }}>{`type://@ExceptionHandler`}</a>{` annotation to transform an exception into a response.\nYou can write your own exception handler by implementing `}<a parentName=\"p\" {...{\n        \"href\": \"type://ExceptionHandlerFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandlerFunction.html\"\n      }}>{`type://ExceptionHandlerFunction`}</a>{` interface and\nannotate your service object or method with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ExceptionHandler:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandler.html\"\n      }}>{`type://@ExceptionHandler`}</a>{` annotation. Here is an example of\nan exception handler. If your exception handler is not able to handle a given exception, you can call\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://ExceptionHandlerFunction#fallthrough():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandlerFunction.html#fallthrough()\"\n      }}>{`type://ExceptionHandlerFunction#fallthrough()`}</a>{` to pass the exception to the next exception handler.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyExceptionHandler implements ExceptionHandlerFunction {\n    @Override\n    public HttpResponse handleException(ServiceRequestContext ctx,\n                                        HttpRequest req, Throwable cause) {\n        if (cause instanceof MyServiceException) {\n            return HttpResponse.of(HttpStatus.CONFLICT);\n        }\n\n        // To the next exception handler.\n        return ExceptionHandlerFunction.fallthrough();\n    }\n}\n`}</code></pre>\n    <p>{`You can annotate at class level to catch an exception from every method in your service class.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@ExceptionHandler(MyExceptionHandler.class)\npublic class MyAnnotatedService {\n    @Get(\"/hello\")\n    public HttpResponse hello() { ... }\n}\n`}</code></pre>\n    <p>{`You can also annotate at method level to catch an exception from a single method in your service class.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Get(\"/hello\")\n    @ExceptionHandler(MyExceptionHandler.class)\n    public HttpResponse hello() { ... }\n}\n`}</code></pre>\n    <p>{`If there is no exception handler which is able to handle an exception, the exception would be passed to\nthe default exception handler. It handles `}<inlineCode parentName=\"p\">{`IllegalArgumentException`}</inlineCode>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpStatusException:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpStatusException.html\"\n      }}>{`type://HttpStatusException`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpResponseException:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpResponseException.html\"\n      }}>{`type://HttpResponseException`}</a>{` by default. `}<inlineCode parentName=\"p\">{`IllegalArgumentException`}</inlineCode>{` would be converted into\n`}<inlineCode parentName=\"p\">{`400 Bad Request`}</inlineCode>{` response, and the other two exceptions would be converted into a response with\nthe status code which they are holding. For another exceptions, `}<inlineCode parentName=\"p\">{`500 Internal Server Error`}</inlineCode>{` would be\nsent to the client.`}</p>\n    <h2 {...{\n      \"id\": \"conversion-between-an-http-message-and-a-java-object\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#conversion-between-an-http-message-and-a-java-object\",\n        \"aria-label\": \"conversion between an http message and a java object permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Conversion between an HTTP message and a Java object`}</h2>\n    <h3 {...{\n      \"id\": \"converting-an-http-request-to-a-java-object\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#converting-an-http-request-to-a-java-object\",\n        \"aria-label\": \"converting an http request to a java object permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Converting an HTTP request to a Java object`}</h3>\n    <p>{`In some cases like receiving a JSON document from a client, it may be useful to convert the document to\na Java object automatically. Armeria provides `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://@RequestConverter`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html\"\n      }}>{`type://@RequestObject`}</a>{`\nannotations so that such conversion can be done conveniently.\nYou can write your own request converter by implementing `}<a parentName=\"p\" {...{\n        \"href\": \"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html\"\n      }}>{`type://RequestConverterFunction`}</a>{` as follows.\nSimilar to the exception handler, you can call `}<a parentName=\"p\" {...{\n        \"href\": \"type://RequestConverterFunction#fallthrough():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html#fallthrough()\"\n      }}>{`type://RequestConverterFunction#fallthrough()`}</a>{` when your request\nconverter is not able to convert the request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class ToEnglishConverter implements RequestConverterFunction {\n    @Override\n    public Object convertRequest(ServiceRequestContext ctx,\n                                 AggregatedHttpRequest request,\n                                 Class<?> expectedResultType) {\n        if (expectedResultType == Greeting.class) {\n            // Convert the request to a Java object.\n            return new Greeting(translateToEnglish(request.contentUtf8()));\n        }\n\n        // To the next request converter.\n        return RequestConverterFunction.fallthrough();\n    }\n\n    private String translateToEnglish(String greetingInAnyLanguage) { ... }\n}\n`}</code></pre>\n    <p>{`Then, you can write your service method as follows. Custom request objects will be converted automatically\nby the converters you registered with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://@RequestConverter`}</a>{` annotation.\nNote that `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://@RequestConverter`}</a>{` annotation can be specified on a class, a method or a parameter\nin an annotated service, and its scope is determined depending on where it is specified.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@RequestConverter(ToEnglishConverter.class)\npublic class MyAnnotatedService {\n\n    @Post(\"/hello\")\n    public HttpResponse hello(Greeting greeting) {\n        // ToEnglishConverter will be used to convert a request.\n        // ...\n    }\n\n    @Post(\"/hola\")\n    @RequestConverter(ToSpanishConverter.class)\n    public HttpResponse hola(Greeting greeting) {\n        // ToSpanishConverter will be tried to convert a request first.\n        // ToEnglishConverter will be used if ToSpanishConverter fell through.\n        // ...\n    }\n\n    @Post(\"/greet\")\n    public HttpResponse greet(@RequestConverter(ToGermanConverter.class)\n                              Greeting greetingInGerman,\n                              Greeting greetingInEnglish) {\n        // For the 1st parameter 'greetingInGerman':\n        // ToGermanConverter will be tried to convert a request first.\n        // ToEnglishConverter will be used if ToGermanConverter fell through.\n        //\n        // For the 2nd parameter 'greetingInEnglish':\n        // ToEnglishConverter will be used to convert a request.\n        // ...\n    }\n}\n`}</code></pre>\n    <p>{`Armeria also provides built-in request converters such as, a request converter for a Java Bean,\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://JacksonRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/JacksonRequestConverterFunction.html\"\n      }}>{`type://JacksonRequestConverterFunction`}</a>{` for a JSON document, `}<a parentName=\"p\" {...{\n        \"href\": \"type://StringRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/StringRequestConverterFunction.html\"\n      }}>{`type://StringRequestConverterFunction`}</a>{`\nfor a string and `}<a parentName=\"p\" {...{\n        \"href\": \"type://ByteArrayRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ByteArrayRequestConverterFunction.html\"\n      }}>{`type://ByteArrayRequestConverterFunction`}</a>{` for binary data. They will be applied\nafter your request converters, so you don't have to specify any `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://@RequestConverter`}</a>{` annotations:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    // JacksonRequestConverterFunction will work for the content type of\n    // 'application/json' or one of '+json' types.\n    @Post(\"/hello1\")\n    public HttpResponse hello1(JsonNode body) { ... }\n\n    @Post(\"/hello2\")\n    public HttpResponse hello2(MyJsonRequest body) { ... }\n\n    // StringRequestConverterFunction will work regardless of the content type.\n    @Post(\"/hello3\")\n    public HttpResponse hello3(String body) { ... }\n\n    @Post(\"/hello4\")\n    public HttpResponse hello4(CharSequence body) { ... }\n\n    // ByteArrayRequestConverterFunction will work regardless of the content type.\n    @Post(\"/hello5\")\n    public HttpResponse hello5(byte[] body) { ... }\n\n    @Post(\"/hello6\")\n    public HttpResponse hello6(HttpData body) { ... }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"injecting-value-of-parameters-and-http-headers-into-a-java-object\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#injecting-value-of-parameters-and-http-headers-into-a-java-object\",\n        \"aria-label\": \"injecting value of parameters and http headers into a java object permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Injecting value of parameters and HTTP headers into a Java object`}</h4>\n    <p>{`Armeria provides a generic built-in request converter that converts a request into a Java object.\nJust define a plain old Java class and specify it as a parameter of your service method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Post(\"/hello\")\n    public HttpResponse hello(MyRequestObject myRequestObject) { ... }\n}\n`}</code></pre>\n    <p>{`We also need to define the `}<inlineCode parentName=\"p\">{`MyRequestObject`}</inlineCode>{` class which was used in the method `}<inlineCode parentName=\"p\">{`hello()`}</inlineCode>{` above.\nTo tell Armeria which constructor parameter, setter method or field has to be injected with what value,\nwe should put `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html\"\n      }}>{`type://@Header`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html\"\n      }}>{`type://@RequestObject`}</a>{` annotations on any of the following elements:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Fields`}</li>\n      <li parentName=\"ul\">{`Constructors with only one parameter`}</li>\n      <li parentName=\"ul\">{`Methods with only one parameter`}</li>\n      <li parentName=\"ul\">{`Constructor parameters`}</li>\n      <li parentName=\"ul\">{`Method parameters`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyRequestObject {\n    @Param(\"name\") // This field will be injected by the value of parameter \"name\".\n    private String name;\n\n    @Header(\"age\") // This field will be injected by the value of HTTP header \"age\".\n    private int age;\n\n    @RequestObject // This field will be injected by another request converter.\n    private MyAnotherRequestObject obj;\n\n    // You can omit the value of @Param or @Header if you compiled your code with\n    // \\`-parameters\\` javac option.\n    @Param // This field will be injected by the value of parameter \"gender\".\n    private String gender;\n\n    @Header // This field will be injected by the value of \"accept-language\" header.\n    private String acceptLanguage;\n\n    @Param(\"address\") // You can annotate a single-parameter method\n                      // with @Param or @Header.\n    public void setAddress(String address) { ... }\n\n    @Header(\"id\") // You can annotate a single-parameter constructor\n    @Default(\"0\") // with @Param or @Header.\n    public MyRequestObject(long id) { ... }\n\n    // You can annotate all parameters of method or constructor with @Param or @Header.\n    public void init(@Header(\"permissions\") String permissions,\n                     @Param(\"client-id\") @Default(\"0\") int clientId)\n}\n`}</code></pre>\n    <p>{`The usage of `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html\"\n      }}>{`type://@Header`}</a>{` annotations on Java object elements is much like\nusing them on the parameters of a service method because even you can use `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html\"\n      }}>{`type://@Default`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html\"\n      }}>{`type://@RequestObject`}</a>{` annotations defined there.\nPlease refer to `}<a parentName=\"p\" {...{\n        \"href\": \"#parameter-injection\"\n      }}>{`Parameter injection`}</a>{`, and\n`}<a parentName=\"p\" {...{\n        \"href\": \"#getting-an-http-header\"\n      }}>{`Getting an HTTP header`}</a>{` for more information.`}</p>\n    <h3 {...{\n      \"id\": \"converting-a-java-object-to-an-http-response\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#converting-a-java-object-to-an-http-response\",\n        \"aria-label\": \"converting a java object to an http response permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Converting a Java object to an HTTP response`}</h3>\n    <p>{`Every object returned by an annotated service method can be converted to an HTTP response message by\nresponse converters, except for `}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n      }}>{`type://HttpResponse`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"type://AggregatedHttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/AggregatedHttpResponse.html\"\n      }}>{`type://AggregatedHttpResponse`}</a>{` which are already\nin a form of response message. You can also write your own response converter by implementing\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://ResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ResponseConverterFunction.html\"\n      }}>{`type://ResponseConverterFunction`}</a>{` as follows. Also similar to `}<a parentName=\"p\" {...{\n        \"href\": \"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html\"\n      }}>{`type://RequestConverterFunction`}</a>{`,\nyou can call `}<inlineCode parentName=\"p\">{`ResponseConverterFunction.fallthrough()`}</inlineCode>{` when your response converter is not able to\nconvert the result to an `}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n      }}>{`type://HttpResponse`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyResponseConverter implements ResponseConverterFunction {\n    @Override\n    HttpResponse convertResponse(ServiceRequestContext ctx,\n                                 ResponseHeaders headers,\n                                 @Nullable Object result,\n                                 HttpHeaders trailers) throws Exception {\n        if (result instanceof MyObject) {\n            return HttpResponse.of(HttpStatus.OK,\n                                   MediaType.PLAIN_TEXT_UTF_8,\n                                   \"Hello, %s!\", ((MyObject) result).processedName(),\n                                   trailers);\n        }\n\n        // To the next response converter.\n        return ResponseConverterFunction.fallthrough();\n    }\n}\n`}</code></pre>\n    <p>{`You can annotate your service method and class as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@ResponseConverter(MyResponseConverter.class)\npublic class MyAnnotatedService {\n\n    @Post(\"/hello\")\n    public MyObject hello() {\n        // MyResponseConverter will be used to make a response.\n        // ...\n    }\n\n    @Post(\"/hola\")\n    @ResponseConverter(MySpanishResponseConverter.class)\n    public MyObject hola() {\n        // MySpanishResponseConverter will be tried to convert MyObject\n        // to a response first, and then MyResponseConverter will be used\n        // if MySpanishResponseConverter fell through.\n        // ...\n    }\n}\n`}</code></pre>\n    <p>{`Armeria supports `}<a parentName=\"p\" {...{\n        \"href\": \"#media-type-negotiation\"\n      }}>{`Media type negotiation`}</a>{`. So you may want to get\na negotiated media type in order to set a `}<inlineCode parentName=\"p\">{`Content-Type`}</inlineCode>{` header on your response.\nIn this case, you can access it in your response converter as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyResponseConverter implements ResponseConverterFunction {\n    @Override\n    HttpResponse convertResponse(ServiceRequestContext ctx,\n                                 ResponseHeaders headers,\n                                 @Nullable Object result,\n                                 HttpHeaders trailers) throws Exception {\n        MediaType mediaType = ctx.negotiatedResponseMediaType();\n        if (mediaType != null) {\n            // Do something based on the media type.\n            // ...\n        }\n    }\n}\n`}</code></pre>\n    <p>{`Even if you do not specify any `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ResponseConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ResponseConverter.html\"\n      }}>{`type://@ResponseConverter`}</a>{` annotation, the response object can be converted into\nan `}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n      }}>{`type://HttpResponse`}</a>{` by one of the following response converters which performs the conversion based on\nthe negotiated media type and the type of the object.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"type://JacksonResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/JacksonResponseConverterFunction.html\"\n          }}>{`type://JacksonResponseConverterFunction`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`converts an object to a JSON document if the negotiated media type is `}<inlineCode parentName=\"li\">{`application/json`}</inlineCode>{`.\n`}<inlineCode parentName=\"li\">{`JsonNode`}</inlineCode>{` object can be converted to a JSON document even if there is no media type negotiated.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"type://StringResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/StringResponseConverterFunction.html\"\n          }}>{`type://StringResponseConverterFunction`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`converts an object to a string if the negotiated main media type is one of `}<inlineCode parentName=\"li\">{`text`}</inlineCode>{` types.\nIf there is no media type negotiated, `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`CharSequence`}</inlineCode>{` object will be written as a text\nwith `}<inlineCode parentName=\"li\">{`Content-Type: text/plain; charset=utf-8`}</inlineCode>{` header.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"type://ByteArrayResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ByteArrayResponseConverterFunction.html\"\n          }}>{`type://ByteArrayResponseConverterFunction`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`converts an object to a byte array. Only `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpData:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpData.html\"\n            }}>{`type://HttpData`}</a>{` and `}<inlineCode parentName=\"li\">{`byte[]`}</inlineCode>{` will be handled\neven if the negotiated media type is `}<inlineCode parentName=\"li\">{`application/binary`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`application/octet-stream`}</inlineCode>{`.\nIf there is no media type negotiated, `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpData:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpData.html\"\n            }}>{`type://HttpData`}</a>{` and `}<inlineCode parentName=\"li\">{`byte[]`}</inlineCode>{` object will be written as a binary\nwith `}<inlineCode parentName=\"li\">{`Content-Type: application/binary`}</inlineCode>{` header.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`Let's see the following example about the default response conversion.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    // JacksonResponseConverterFunction will convert the return values\n    // to JSON documents:\n    @Get(\"/json1\")\n    @ProducesJson    // the same as @Produces(\"application/json; charset=utf-8\")\n    public MyObject json1() { ... }\n\n    @Get(\"/json2\")\n    public JsonNode json2() { ... }\n\n    // StringResponseConverterFunction will convert the return values to strings:\n    @Get(\"/string1\")\n    @ProducesText    // the same as @Produces(\"text/plain; charset=utf-8\")\n    public int string1() { ... }\n\n    @Get(\"/string2\")\n    public CharSequence string2() { ... }\n\n    // ByteArrayResponseConverterFunction will convert the return values\n    // to byte arrays:\n    @Get(\"/byte1\")\n    @ProducesBinary  // the same as @Produces(\"application/binary\")\n    public HttpData byte1() { ... }\n\n    @Get(\"/byte2\")\n    public byte[] byte2() { ... }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"specifying-a-blocking-task-executor\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#specifying-a-blocking-task-executor\",\n        \"aria-label\": \"specifying a blocking task executor permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Specifying a blocking task executor`}</h2>\n    <p>{`An annotated service is executed by an `}<a parentName=\"p\" {...{\n        \"href\": \"https://netty.io/4.1/api/io/netty/channel/EventLoop.html\"\n      }}>{`EventLoop`}</a>{`,\nso you must not make a blocking call within the `}<inlineCode parentName=\"p\">{`EventLoop`}</inlineCode>{`. If you want to make a blocking call,\nyou should delegate the call to another thread. You can use your own thread or a blocking task executor that\nArmeria provides.`}</p>\n    <p>{`If you specify the `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Blocking:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Blocking.html\"\n      }}>{`type://@Blocking`}</a>{` annotation to the method, the method will be executed by\nthe blocking task executor that is returned by `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServiceRequestContext#blockingTaskExecutor():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#blockingTaskExecutor()\"\n      }}>{`type://ServiceRequestContext#blockingTaskExecutor()`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Blocking // 👈\n    @Get(\"/hello\")\n    public HttpResponse hello(ServiceRequestContext ctx) {\n        // ctx.blockingTaskExecutor() executes this method.\n        assert !ctx.eventLoop().inEventLoop();\n\n        try {\n            Statement stmt = ...;\n            // Make a blocking call.\n            ResultSet resultSet = stmt.executeQuery(...);\n            return responseFrom(resultSet);\n        } catch (Throwable t) {\n            return HttpResponse.of(HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n    }\n`}</code></pre>\n    <Tip mdxType=\"Tip\">\n      <p>{`You can apply the `}<a parentName=\"p\" {...{\n          \"href\": \"type://@Blocking:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Blocking.html\"\n        }}>{`type://@Blocking`}</a>{` annotation at the class level so all methods are executed by the\nblocking task executor:`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-java\"\n        }}>{`@Blocking // 👈\npublic class MyBlockingAnnotatedService {\n    @Get(\"/hello\")\n    public HttpResponse hello(ServiceRequestContext ctx) {\n        // ctx.blockingTaskExecutor() executes this method.\n        ...\n    }\n    @Get(\"/hello2\")\n    public HttpResponse hello2(ServiceRequestContext ctx) {\n        // ctx.blockingTaskExecutor() executes this method.\n        ...\n    }\n}\n`}</code></pre>\n    </Tip>\n    <p>{`You can also submit a task to the `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServiceRequestContext#blockingTaskExecutor():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#blockingTaskExecutor()\"\n      }}>{`type://ServiceRequestContext#blockingTaskExecutor()`}</a>{` or any `}<inlineCode parentName=\"p\">{`Executor`}</inlineCode>{`\ninstead of using the `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Blocking:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Blocking.html\"\n      }}>{`type://@Blocking`}</a>{` annotation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello\")\n    public HttpResponse hello(ServiceRequestContext ctx) {\n        // The current thread is an event loop.\n        assert ctx.eventLoop().inEventLoop();\n\n        CompletableFuture<HttpResponse> future = new CompletableFuture<>();\n        // Delegate a blocking call to the blocking task executor.\n        ctx.blockingTaskExecutor().execute(() -> { // 👈\n            try {\n                Statement stmt = ...;\n                // Make a blocking call.\n                ResultSet resultSet = stmt.executeQuery(...);\n                HttpResponse res = responseFrom(resultSet);\n                future.complete(res);\n            } catch (Throwable t) {\n                future.complete(HttpResponse.of(HttpStatus.INTERNAL_SERVER_ERROR));\n            }\n        });\n        return HttpResponse.from(future);\n    }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-serverbuilder-to-configure-converters-and-exception-handlers\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#using-serverbuilder-to-configure-converters-and-exception-handlers\",\n        \"aria-label\": \"using serverbuilder to configure converters and exception handlers permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Using `}<inlineCode parentName=\"h2\">{`ServerBuilder`}</inlineCode>{` to configure converters and exception handlers`}</h2>\n    <p>{`You can specify converters and exception handlers using `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html\"\n      }}>{`type://ServerBuilder`}</a>{`, without using the annotations\nexplained in the previous sections:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`sb.annotatedService(new MyAnnotatedService(),\n                    // Exception handlers\n                    new MyExceptionHandler(),\n                    // Converters\n                    new MyRequestConverter(), new MyResponseConverter());\n`}</code></pre>\n    <p>{`Also, they have a different method signature for conversion and exception handling so you can even write them\nin a single class and add it to your `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html\"\n      }}>{`type://ServerBuilder`}</a>{` at once, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAllInOneHandler implements RequestConverterFunction,\n                                          ResponseConverterFunction,\n                                          ExceptionHandlerFunction {\n    @Override\n    public Object convertRequest(ServiceRequestContext ctx,\n                                 AggregatedHttpRequest request,\n                                 Class<?> expectedResultType) { ... }\n\n    @Override\n    HttpResponse convertResponse(ServiceRequestContext ctx,\n                                 ResponseHeaders headers,\n                                 @Nullable Object result,\n                                 HttpHeaders trailers) throws Exception { ... }\n\n    @Override\n    public HttpResponse handleException(ServiceRequestContext ctx,\n                                        HttpRequest req, Throwable cause) { ... }\n}\n\n// ...\n\nsb.annotatedService(new MyAnnotatedService(), new MyAllInOneHandler());\n`}</code></pre>\n    <p>{`When you specify exception handlers in a mixed manner like below, they will be evaluated in the following\norder commented. It is also the same as the evaluation order of the converters.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@ExceptionHandler(MyClassExceptionHandler3.class)           // order 3\n@ExceptionHandler(MyClassExceptionHandler4.class)           // order 4\npublic class MyAnnotatedService {\n    @Get(\"/hello\")\n    @ExceptionHandler(MyMethodExceptionHandler1.class)      // order 1\n    @ExceptionHandler(MyMethodExceptionHandler2.class)      // order 2\n    public HttpResponse hello() { ... }\n}\n\n// ...\n\nsb.annotatedService(new MyAnnotatedService(),\n                    new MyGlobalExceptionHandler5(),        // order 5\n                    new MyGlobalExceptionHandler6());       // order 6\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"returning-a-response\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#returning-a-response\",\n        \"aria-label\": \"returning a response permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Returning a response`}</h2>\n    <p>{`In the earlier examples, the annotated service methods only return `}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n      }}>{`type://HttpResponse`}</a>{`, however there are\nmore response types which can be used in the annotated service.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n          }}>{`type://HttpResponse`}</a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"type://AggregatedHttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/AggregatedHttpResponse.html\"\n          }}>{`type://AggregatedHttpResponse`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`It will be sent to the client without any modification. If an exception is raised while the response is\nbeing sent, exception handlers will handle it. If no message has been sent to the client yet,\nthe exception handler can send an `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n            }}>{`type://HttpResponse`}</a>{` instead.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"type://ResponseEntity:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/ResponseEntity.html\"\n          }}>{`type://ResponseEntity`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`It contains the `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpHeaders:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpHeaders.html\"\n            }}>{`type://HttpHeaders`}</a>{` and the object which can be converted into HTTP response body by\nresponse converters. A user can customize the HTTP status and headers including the trailers, with this type.`}</li>\n        </ul>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`public class MyAnnotatedService {\n    @Get(\"/users\")\n    public ResponseEntity<List<User>> getUsers(@Param int start) {\n        List<User> users = ...;\n        ResponseHeaders headers = ResponseHeaders.builder()\n            .status(HttpStatus.OK)\n            .add(HttpHeaderNames.LINK,\n                 String.format(\"<https://example.com/users?from=%s>; rel=\\\\\"next\\\\\"\",\n                               start + 10))\n            .build();\n        return ResponseEntity.of(headers, users);\n    }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Reactive Streams `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.reactive-streams.org/reactive-streams-1.0.2-javadoc/org/reactivestreams/Publisher.html\"\n          }}>{`Publisher`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`All objects which are produced by the publisher will be collected, then the collected ones will be\nconverted to an `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n            }}>{`type://HttpResponse`}</a>{` by response converters. If a single object is produced, it will be\npassed into the response converters as it is. But if multiple objects are produced, they will be passed\ninto the response converters as a list. If the producer produces an error, exception handlers will handle it.\nNote that RxJava `}<a parentName=\"li\" {...{\n              \"href\": \"http://reactivex.io/RxJava/javadoc/io/reactivex/ObservableSource.html\"\n            }}>{`ObservableSource`}</a>{`\nwill be treated in the same way as `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.reactive-streams.org/reactive-streams-1.0.2-javadoc/org/reactivestreams/Publisher.html\"\n            }}>{`Publisher`}</a>{` if you add `}<inlineCode parentName=\"li\">{`armeria-rxjava`}</inlineCode>{` to the dependencies.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`CompletionStage`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CompletableFuture`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`An object which is generated by the `}<inlineCode parentName=\"li\">{`CompletionStage`}</inlineCode>{` will be converted to an `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n            }}>{`type://HttpResponse`}</a>{`\nby response converters. If the `}<inlineCode parentName=\"li\">{`CompletionStage`}</inlineCode>{` completes exceptionally, exception handlers will\nhandle the cause.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Other types`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`As described in\n`}<a parentName=\"li\" {...{\n              \"href\": \"#converting-a-java-object-to-an-http-response\"\n            }}>{`Converting a Java object to an HTTP response`}</a>{`,\nyou can use any response types with response converters that convert them.\nIf a service method raises an exception, exception handlers will handle it.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"decorating-an-annotated-service\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#decorating-an-annotated-service\",\n        \"aria-label\": \"decorating an annotated service permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Decorating an annotated service`}</h2>\n    <p>{`Every `}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpService.html\"\n      }}>{`type://HttpService`}</a>{` can be wrapped by another `}<a parentName=\"p\" {...{\n        \"href\": \"type://HttpService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpService.html\"\n      }}>{`type://HttpService`}</a>{` in Armeria (Refer to\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-decorator\"\n      }}>{`Decorating a service`}</a>{` for more information).\nSimply, you can write your own decorator by\nimplementing `}<a parentName=\"p\" {...{\n        \"href\": \"type://DecoratingHttpServiceFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/DecoratingHttpServiceFunction.html\"\n      }}>{`type://DecoratingHttpServiceFunction`}</a>{` interface as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyDecorator implements DecoratingHttpServiceFunction {\n    @Override\n    public HttpResponse serve(HttpService delegate,\n                              ServiceRequestContext ctx,\n                              HttpRequest req) {\n        // ... Do something ...\n        return delegate.serve(ctx, req);\n    }\n}\n`}</code></pre>\n    <p>{`Then, annotate your class or method with a `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html\"\n      }}>{`type://@Decorator`}</a>{` annotation. In the following example,\n`}<inlineCode parentName=\"p\">{`MyDecorator`}</inlineCode>{` will handle a request first, then `}<inlineCode parentName=\"p\">{`AnotherDecorator`}</inlineCode>{` will handle the request next,\nand finally `}<inlineCode parentName=\"p\">{`hello()`}</inlineCode>{` method will handle the request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Decorator(MyDecorator.class)\npublic class MyAnnotatedService {\n    @Decorator(AnotherDecorator.class)\n    @Get(\"/hello\")\n    public HttpResponse hello() { ... }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"decorating-an-annotated-service-with-a-custom-decorator-annotation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#decorating-an-annotated-service-with-a-custom-decorator-annotation\",\n        \"aria-label\": \"decorating an annotated service with a custom decorator annotation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Decorating an annotated service with a custom decorator annotation`}</h3>\n    <p>{`As you read earlier, you can write your own decorator with `}<a parentName=\"p\" {...{\n        \"href\": \"type://DecoratingHttpServiceFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/DecoratingHttpServiceFunction.html\"\n      }}>{`type://DecoratingHttpServiceFunction`}</a>{` interface.\nIf your decorator does not require any parameter, that is fine. However, what if your decorator requires\na parameter? In this case, you can create your own decorator annotation. Let's see the following custom\ndecorator annotation which applies `}<a parentName=\"p\" {...{\n        \"href\": \"type://LoggingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/logging/LoggingService.html\"\n      }}>{`type://LoggingService`}</a>{` to an annotated service.`}</p>\n    <Tip mdxType=\"Tip\">\n      <p>{`This example is actually just a copy of what Armeria provides out of the box. In reality,\nyou could just use `}<a parentName=\"p\" {...{\n          \"href\": \"type://@LoggingDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/LoggingDecorator.html\"\n        }}>{`type://@LoggingDecorator`}</a>{`, without writing your own one.`}</p>\n    </Tip>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@DecoratorFactory(LoggingDecoratorFactoryFunction.class)\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ ElementType.TYPE, ElementType.METHOD })\npublic @interface LoggingDecorator {\n\n    // Specify parameters for your decorator like below.\n    LogLevel requestLogLevel() default LogLevel.TRACE;\n\n    LogLevel successfulResponseLogLevel() default LogLevel.TRACE;\n\n    LogLevel failureResponseLogLevel() default LogLevel.WARN;\n\n    float samplingRate() default 1.0f;\n\n    // A special parameter in order to specify the order of a decorator.\n    int order() default 0;\n}\n\npublic final class LoggingDecoratorFactoryFunction\n        implements DecoratorFactoryFunction<LoggingDecorator> {\n\n    @Override\n    public Function<? super HttpService, ? extends HttpService>\n    newDecorator(LoggingDecorator parameter) {\n        return LoggingService\n            .builder()\n            .requestLogLevel(parameter.requestLogLevel())\n            .successfulResponseLogLevel(parameter.successfulResponseLogLevel())\n            .failureResponseLogLevel(parameter.failureResponseLogLevel())\n            .samplingRate(parameter.samplingRate())\n            .newDecorator();\n    }\n}\n`}</code></pre>\n    <p>{`You can see `}<a parentName=\"p\" {...{\n        \"href\": \"type://@DecoratorFactory:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/DecoratorFactory.html\"\n      }}>{`type://@DecoratorFactory`}</a>{` annotation at the first line of the example. It specifies\na factory class which implements `}<a parentName=\"p\" {...{\n        \"href\": \"type://DecoratorFactoryFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/DecoratorFactoryFunction.html\"\n      }}>{`type://DecoratorFactoryFunction`}</a>{` interface. The factory will create\nan instance of `}<a parentName=\"p\" {...{\n        \"href\": \"type://LoggingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/logging/LoggingService.html\"\n      }}>{`type://LoggingService`}</a>{` with parameters which you specified on the class or method like below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @LoggingDecorator(requestLogLevel = LogLevel.INFO)\n    @Get(\"/hello1\")\n    public HttpResponse hello1() { ... }\n\n    @LoggingDecorator(requestLogLevel = LogLevel.DEBUG, samplingRate = 0.05)\n    @Get(\"/hello2\")\n    public HttpResponse hello2() { ... }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"evaluation-order-of-decorators\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#evaluation-order-of-decorators\",\n        \"aria-label\": \"evaluation order of decorators permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Evaluation order of decorators`}</h3>\n    <p>{`Note that the evaluation order of the decorators is slightly different from that of the converters and exception\nhandlers. As you read in `}<a parentName=\"p\" {...{\n        \"href\": \"#using-serverbuilder-to-configure-converters-and-exception-handlers\"\n      }}>{`Using ServerBuilder to configure converters and exception\nhandlers`}</a>{`,\nboth the converters and exception handlers are applied in the order of method-level ones,\nclass-level ones and global ones.\nUnlike them, decorators are applied in the opposite order as follows,\nbecause it is more understandable for a user to apply from the outer decorators to the inner decorators,\nwhich means the order of global decorators, class-level decorators and method-level decorators.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Decorator(MyClassDecorator2.class)                 // order 2\n@Decorator(MyClassDecorator3.class)                 // order 3\npublic class MyAnnotatedService {\n\n    @Get(\"/hello\")\n    @Decorator(MyMethodDecorator4.class)            // order 4\n    @Decorator(MyMethodDecorator5.class)            // order 5\n    public HttpResponse hello() { ... }\n}\n\n// ...\n\nsb.annotatedService(new MyAnnotatedService(),\n                    new MyGlobalDecorator1());      // order 1\n`}</code></pre>\n    <p>{`The first rule is as explained before. However, if your own decorator annotations and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html\"\n      }}>{`type://@Decorator`}</a>{`\nannotations are specified in a mixed order like below, you need to clearly specify their order using `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Decorator#order()\"\n      }}>{`type://@Decorator#order()`}</a>{`\nattribute of the annotation. In the following example, you cannot make sure in what order they decorate\nthe service because Java collects repeatable annotations like `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html\"\n      }}>{`type://@Decorator`}</a>{` into a single container\nannotation like `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Decorators:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorators.html\"\n      }}>{`type://@Decorators`}</a>{` so it does not know the specified order between `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html\"\n      }}>{`type://@Decorator`}</a>{`\nand `}<a parentName=\"p\" {...{\n        \"href\": \"type://@LoggingDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/LoggingDecorator.html\"\n      }}>{`type://@LoggingDecorator`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello\")\n    @Decorator(MyMethodDecorator1.class)\n    @LoggingDecorator\n    @Decorator(MyMethodDecorator2.class)\n    public HttpResponse hello() { ... }\n}\n`}</code></pre>\n    <p>{`To enforce the evaluation order of decorators, you can use `}<inlineCode parentName=\"p\">{`order()`}</inlineCode>{` attribute. Lower the order value is,\nearlier the decorator will be executed. The default value of `}<inlineCode parentName=\"p\">{`order()`}</inlineCode>{` attribute is `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`.\nThe `}<inlineCode parentName=\"p\">{`order()`}</inlineCode>{` attribute is applicable only to class-level and method-level decorators.`}</p>\n    <p>{`With the following example, the `}<inlineCode parentName=\"p\">{`hello()`}</inlineCode>{` will be executed with the following order:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`MyGlobalDecorator1`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`MyMethodDecorator1`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`LoggingDecorator`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`MyMethodDecorator2`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`MyAnnotatedService.hello()`}</inlineCode></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello\")\n    @Decorator(value = MyMethodDecorator1.class, order = 1)\n    @LoggingDecorator(order = 2)\n    @Decorator(value = MyMethodDecorator2.class, order = 3)\n    public HttpResponse hello() { ... }\n}\n\n// Global-level decorators will not be affected by 'order'.\nsb.annotatedService(new MyAnnotatedService(),\n                    new MyGlobalDecorator1());\n`}</code></pre>\n    <p>{`Note that you can even make a method-level decorator executed before a class-level decorator\nby adjusting the `}<inlineCode parentName=\"p\">{`order()`}</inlineCode>{` attribute:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@LoggingDecorator\npublic class MyAnnotatedService {\n\n    // LoggingDecorator -> MyMethodDecorator1 -> hello1()\n    @Get(\"/hello1\")\n    @Decorator(MyMethodDecorator1.class)\n    public HttpResponse hello1() { ... }\n\n    // MyMethodDecorator1 -> LoggingDecorator -> hello2()\n    @Get(\"/hello2\")\n    @Decorator(value = MyMethodDecorator1.class, order = -1)\n    public HttpResponse hello2() { ... }\n}\n`}</code></pre>\n    <p>{`If you built a custom decorator annotation like `}<a parentName=\"p\" {...{\n        \"href\": \"type://@LoggingDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/LoggingDecorator.html\"\n      }}>{`type://@LoggingDecorator`}</a>{`, it is recommended to\nadd an `}<inlineCode parentName=\"p\">{`order()`}</inlineCode>{` attribute so that the user of the custom annotation is able to adjust\nthe order value of the decorator:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public @interface MyDecoratorAnnotation {\n\n    // Define your attributes.\n    int myAttr1();\n\n    // A special parameter in order to specify the order of a decorator.\n    int order() default 0;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"media-type-negotiation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#media-type-negotiation\",\n        \"aria-label\": \"media type negotiation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Media type negotiation`}</h2>\n    <p>{`Armeria provides `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Produces:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Produces.html\"\n      }}>{`type://@Produces`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html\"\n      }}>{`type://@Consumes`}</a>{` annotations to support media type\nnegotiation. It is not necessary if you have only one service method for a path and an HTTP method.\nHowever, assume that you have multiple service methods for the same path and the same HTTP method as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello\")\n    public HttpResponse hello1() {\n        // Return a text document to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.PLAIN_TEXT_UTF_8,\n                               \"Armeria\");\n    }\n\n    @Get(\"/hello\")\n    public HttpResponse hello2() {\n        // Return a JSON object to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               \"{ \\\\\"name\\\\\": \\\\\"Armeria\\\\\" }\");\n    }\n}\n`}</code></pre>\n    <p>{`If the media type is not specified on any methods bound to the same path pattern, the first method declared will\nbe used and the other methods will be ignored. In this example, `}<inlineCode parentName=\"p\">{`hello1()`}</inlineCode>{` will be chosen and the client\nwill always receive a text document. What if you want to get a JSON object from the path `}<inlineCode parentName=\"p\">{`/hello`}</inlineCode>{`?\nYou can just specify the type of the content which your method produces as follows and add an `}<inlineCode parentName=\"p\">{`Accept`}</inlineCode>{` header\nto your client request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Get(\"/hello\")\n    @Produces(\"text/plain\")\n    public HttpResponse helloText() {\n        // Return a text document to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.PLAIN_TEXT_UTF_8,\n                               \"Armeria\");\n    }\n\n    @Get(\"/hello\")\n    @Produces(\"application/json\")\n    public HttpResponse helloJson() {\n        // Return a JSON object to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               \"{ \\\\\"name\\\\\": \\\\\"Armeria\\\\\" }\");\n    }\n}\n`}</code></pre>\n    <p>{`A request like the following would get a text document:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`GET /hello HTTP/1.1\nAccept: text/plain\n`}</code></pre>\n    <p>{`A request like the following would get a JSON object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`GET /hello HTTP/1.1\nAccept: application/json\n`}</code></pre>\n    <Warning mdxType=\"Warning\">\n      <p>{`Note that a `}<inlineCode parentName=\"p\">{`Content-Type`}</inlineCode>{` header of a response is not automatically set. You may want to get the\nnegotiated `}<a parentName=\"p\" {...{\n          \"href\": \"type://@Produces:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Produces.html\"\n        }}>{`type://@Produces`}</a>{` from `}<a parentName=\"p\" {...{\n          \"href\": \"type://ServiceRequestContext#negotiatedResponseMediaType():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#negotiatedResponseMediaType()\"\n        }}>{`type://ServiceRequestContext#negotiatedResponseMediaType()`}</a>{` method and\nset it as the value of the `}<inlineCode parentName=\"p\">{`Content-Type`}</inlineCode>{` header of your response.`}</p>\n    </Warning>\n    <p>{`If a client sends a request without an `}<inlineCode parentName=\"p\">{`Accept`}</inlineCode>{` header (or sending an `}<inlineCode parentName=\"p\">{`Accept`}</inlineCode>{` header with an unsupported\ncontent type), it would be usually mapped to `}<inlineCode parentName=\"p\">{`helloJson()`}</inlineCode>{` method because the methods are sorted by the\nname of the type in an alphabetical order.`}</p>\n    <p>{`In this case, you can adjust the order of the methods with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Order:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Order.html\"\n      }}>{`type://@Order`}</a>{` annotation. The default value of\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Order:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Order.html\"\n      }}>{`type://@Order`}</a>{` annotation is `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`. If you set the value less than `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`, the method is used earlier than\nthe other methods, which means that it would be used as a default when there is no matched produce type.\nIn this example, it would also make the same effect to annotate `}<inlineCode parentName=\"p\">{`helloJson()`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`@Order(1)`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Order(-1)\n    @Get(\"/hello\")\n    @Produces(\"text/plain\")\n    public HttpResponse helloText() {\n        // Return a text document to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.PLAIN_TEXT_UTF_8,\n                               \"Armeria\");\n    }\n\n    @Get(\"/hello\")\n    @Produces(\"application/json\")\n    public HttpResponse helloJson() {\n        // Return a JSON object to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               \"{ \\\\\"name\\\\\": \\\\\"Armeria\\\\\" }\");\n    }\n}\n`}</code></pre>\n    <p>{`Next, let's learn how to handle a `}<inlineCode parentName=\"p\">{`Content-Type`}</inlineCode>{` header of a request. Assume that there are two service\nmethods that expect a text document and a JSON object as a content of a request, respectively.\nYou can annotate them with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html\"\n      }}>{`type://@Consumes`}</a>{` annotation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Post(\"/hello\")\n    @Consumes(\"text/plain\")\n    public HttpResponse helloText(AggregatedHttpRequest request) {\n        // Get a text content by calling request.contentAscii().\n    }\n\n    @Post(\"/hello\")\n    @Consumes(\"application/json\")\n    public HttpResponse helloJson(AggregatedHttpRequest request) {\n        // Get a JSON object by calling request.contentUtf8().\n    }\n}\n`}</code></pre>\n    <p>{`A request like the following would be handled by `}<inlineCode parentName=\"p\">{`helloText()`}</inlineCode>{` method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`POST /hello HTTP/1.1\nContent-Type: text/plain\nContent-Length: 7\n\nArmeria\n`}</code></pre>\n    <p>{`A request like the following would be handled by `}<inlineCode parentName=\"p\">{`helloJson()`}</inlineCode>{` method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`POST /hello HTTP/1.1\nContent-Type: application/json\nContent-Length: 21\n\n{ \"name\": \"Armeria\" }\n`}</code></pre>\n    <p>{`However, if a client sends a request with a `}<inlineCode parentName=\"p\">{`Content-Type: application/octet-stream`}</inlineCode>{` header which is not\nspecified with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html\"\n      }}>{`type://@Consumes`}</a>{`, the client would get an HTTP status code of 415 which means\n`}<inlineCode parentName=\"p\">{`Unsupported Media Type`}</inlineCode>{`. If you want to make one of the methods catch-all, you can remove the annotation\nas follows. `}<inlineCode parentName=\"p\">{`helloCatchAll()`}</inlineCode>{` method would accept every request except for the request with a\n`}<inlineCode parentName=\"p\">{`Content-Type: application/json`}</inlineCode>{` header.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Post(\"/hello\")\n    public HttpResponse helloCatchAll(AggregatedHttpRequest request) {\n        // Get a content by calling request.content() and handle it as a text document or something else.\n    }\n\n    @Post(\"/hello\")\n    @Consumes(\"application/json\")\n    public HttpResponse helloJson(AggregatedHttpRequest request) {\n        // Get a JSON object by calling request.contentUtf8().\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"creating-user-defined-media-type-annotations\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#creating-user-defined-media-type-annotations\",\n        \"aria-label\": \"creating user defined media type annotations permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Creating user-defined media type annotations`}</h3>\n    <p>{`Armeria provides pre-defined annotations such as `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ConsumesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesJson.html\"\n      }}>{`type://@ConsumesJson`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ConsumesText:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesText.html\"\n      }}>{`type://@ConsumesText`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://@ConsumesBinary:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesBinary.html\"\n      }}>{`type://@ConsumesBinary`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ConsumesOctetStream:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesOctetStream.html\"\n      }}>{`type://@ConsumesOctetStream`}</a>{` which are aliases for\n`}<inlineCode parentName=\"p\">{`@Consumes(\"application/json; charset=utf-8\")`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`@Consumes(\"text/plain; charset=utf-8\")`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`@Consumes(\"application/binary\")`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`@Consumes(\"application/octet-stream\")`}</inlineCode>{` respectively.\nAlso, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html\"\n      }}>{`type://@ProducesJson`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ProducesText:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesText.html\"\n      }}>{`type://@ProducesText`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ProducesBinary:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesBinary.html\"\n      }}>{`type://@ProducesBinary`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ProducesOctetStream:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesOctetStream.html\"\n      }}>{`type://@ProducesOctetStream`}</a>{`\nare provided in the same manner.`}</p>\n    <p>{`If there is no annotation that meets your need, you can define your own annotations for `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html\"\n      }}>{`type://@Consumes`}</a>{`\nand `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Produces:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Produces.html\"\n      }}>{`type://@Produces`}</a>{` as follows. Specifying your own annotations is recommended because writing a media type\nwith a string is more error-prone.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Retention(RetentionPolicy.RUNTIME)\n@Target({ ElementType.TYPE, ElementType.METHOD })\n@Consumes(\"application/xml\")\npublic @interface MyConsumableType {}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ ElementType.TYPE, ElementType.METHOD })\n@Produces(\"application/xml\")\npublic @interface MyProducibleType {}\n`}</code></pre>\n    <p>{`Then, you can annotate your service method with your annotation as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n    @Post(\"/hello\")\n    @MyConsumableType  // the same as @Consumes(\"application/xml\")\n    @MyProducibleType  // the same as @Produces(\"application/xml\")\n    public MyResponse hello(MyRequest myRequest) { ... }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"specifying-additional-response-headerstrailers\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#specifying-additional-response-headerstrailers\",\n        \"aria-label\": \"specifying additional response headerstrailers permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Specifying additional response headers/trailers`}</h2>\n    <p>{`Armeria provides a way to configure additional headers/trailers via annotation,\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://@AdditionalHeader:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalHeader.html\"\n      }}>{`type://@AdditionalHeader`}</a>{` for HTTP headers and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@AdditionalTrailer:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalTrailer.html\"\n      }}>{`type://@AdditionalTrailer`}</a>{` for HTTP trailers.`}</p>\n    <p>{`You can annotate your service method with the annotations as follows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.server.annotation.AdditionalHeader;\nimport com.linecorp.armeria.server.annotation.AdditionalTrailer;\n\n@AdditionalHeader(name = \"custom-header\", value = \"custom-value\")\n@AdditionalTrailer(name = \"custom-trailer\", value = \"custom-value\")\npublic class MyAnnotatedService {\n    @Get(\"/hello\")\n    @AdditionalHeader(name = \"custom-header-2\", value = \"custom-value\")\n    @AdditionalTrailer(name = \"custom-trailer-2\", value = \"custom-value\")\n    public HttpResponse hello() { ... }\n}\n`}</code></pre>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"type://@AdditionalHeader:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalHeader.html\"\n      }}>{`type://@AdditionalHeader`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"type://@AdditionalTrailer:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalTrailer.html\"\n      }}>{`type://@AdditionalTrailer`}</a>{` specified at the method level takes precedence over\nwhat's specified at the class level if it has the same name, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@AdditionalHeader(name = \"custom-header\", value = \"custom-value\")\n@AdditionalTrailer(name = \"custom-trailer\", value = \"custom-value\")\npublic class MyAnnotatedService {\n    @Get(\"/hello\")\n    @AdditionalHeader(name = \"custom-header\", value = \"custom-overwritten\")\n    @AdditionalTrailer(name = \"custom-trailer\", value = \"custom-overwritten\")\n    public HttpResponse hello() { ... }\n}\n`}</code></pre>\n    <p>{`In this case, the values of the HTTP header named `}<inlineCode parentName=\"p\">{`custom-header`}</inlineCode>{` and the HTTP trailer named\n`}<inlineCode parentName=\"p\">{`custom-trailer`}</inlineCode>{` will be `}<inlineCode parentName=\"p\">{`custom-overwritten`}</inlineCode>{`, not `}<inlineCode parentName=\"p\">{`custom-value`}</inlineCode>{`.`}</p>\n    <p>{`Note that the trailers will not be injected into the responses with the following HTTP status code,\nbecause they always have an empty content.`}</p>\n    <table><thead parentName=\"table\"><tr parentName=\"thead\"><th parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"th\">{`Status code`}</p></th><th parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"th\">{`Description`}</p></th></tr></thead><tbody parentName=\"table\"><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`204`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`No content`}</p></td></tr><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`205`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Reset content`}</p></td></tr><tr parentName=\"tbody\"><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`304`}</p></td><td parentName=\"tr\" {...{\n            \"colspan\": 1,\n            \"rowspan\": 1\n          }}><p parentName=\"td\">{`Not modified`}</p></td></tr></tbody></table>\n    <h2 {...{\n      \"id\": \"using-a-composite-annotation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#using-a-composite-annotation\",\n        \"aria-label\": \"using a composite annotation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Using a composite annotation`}</h2>\n    <p>{`To avoid specifying a common set of annotations repetitively, you may want to create a composite annotation\nwhich is annotated by other annotations. For example, let's assume that there is a service class like the below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Post(\"/create\")\n    @ConsumesJson\n    @ProducesJson\n    @LoggingDecorator\n    @MyAuthenticationDecorator\n    public HttpResponse create() { ... }\n\n    @Post(\"/update\")\n    @ConsumesJson\n    @ProducesJson\n    @LoggingDecorator\n    @MyAuthenticationDecorator\n    public HttpResponse update() { ... }\n}\n`}</code></pre>\n    <p>{`In the above example, you had to add the same 4 annotations to the two different methods. It is obviously\ntoo verbose and duplicate, so we could simplify them by creating a composite annotation like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Retention(RetentionPolicy.RUNTIME)\n@ConsumesJson\n@ProducesJson\n@LoggingDecorator\n@MyAuthenticationDecorator\npublic @interface MyCreateOrUpdateApiSpec {}\n`}</code></pre>\n    <p>{`Now, let's rewrite the service class with the composite annotation. It is definitely less verbose than before.\nMoreover, you don't need to update both `}<inlineCode parentName=\"p\">{`create()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`update()`}</inlineCode>{` but only `}<inlineCode parentName=\"p\">{`MyCreateOrUpdateApiSpec`}</inlineCode>{`\nwhen you add more common annotations to them.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyAnnotatedService {\n\n    @Post(\"/create\")\n    @MyCreateOrUpdateApiSpec\n    public HttpResponse create() { ... }\n\n    @Post(\"/update\")\n    @MyCreateOrUpdateApiSpec\n    public HttpResponse update() { ... }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"specifying-the-service-name\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#specifying-the-service-name\",\n        \"aria-label\": \"specifying the service name permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Specifying the service name`}</h2>\n    <p>{`A service name is human-readable string that is often used as a meter tag or distributed trace's span name.\nBy default, an annotated service uses its class name as its service name.\nYou can override it by annotating a class or method with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ServiceName:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ServiceName.html\"\n      }}>{`type://@ServiceName`}</a>{` like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyService {\n    @Get(\"/\")\n    public String get(ServiceRequestContext ctx) {\n        ctx.log().whenAvailable(RequestLogProperty.NAME).thenAccept(log -> {\n            assert log.serviceName().equals(MyService.class.getName());\n        });\n    }\n}\n\n// Override the default service name by the class annotation\n@ServiceName(\"my-service\")\npublic class MyService {\n    @Get(\"/\")\n    public String get(ServiceRequestContext ctx) {\n        ctx.log().whenAvailable(RequestLogProperty.NAME).thenAccept(log -> {\n            assert log.serviceName().equals(\"my-service\");\n        });\n    }\n\n    // Override the default service name by the method annotation\n    @ServiceName(\"my-post-service\")\n    @Post(\"/\")\n    public String post(ServiceRequestContext ctx) {\n        ctx.log().whenAvailable(RequestLogProperty.NAME).thenAccept(log -> {\n            assert log.serviceName().equals(\"my-post-service\");\n        });\n    }\n}\n\n// Or the default name could get overridden programmatically using a decorator.\nServerBuilder sb = Server.builder();\nsb.annotatedService(\"/\", new MyService(), service -> {\n    return service.decorate((delegate, ctx, req) -> {\n        ctx.logBuilder().name(\"my-decorated-service\", ctx.method().name());\n        return delegate.serve(ctx, req);\n    });\n});\n`}</code></pre>\n    <Tip mdxType=\"Tip\">\n      <p>{`You can also use `}<a parentName=\"p\" {...{\n          \"href\": \"type://RequestLogAccess#whenComplete():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/logging/RequestLogAccess.html#whenComplete()\"\n        }}>{`type://RequestLogAccess#whenComplete()`}</a>{` to access `}<a parentName=\"p\" {...{\n          \"href\": \"type://RequestOnlyLog#name():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/logging/RequestOnlyLog.html#name()\"\n        }}>{`type://RequestOnlyLog#name()`}</a>{`.\nPlease refer to `}<a parentName=\"p\" {...{\n          \"href\": \"/docs/advanced-structured-logging\"\n        }}>{`Structured logging`}</a>{`\nfor more information about RPC and HTTP service names, and how to use it.`}</p>\n    </Tip>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n"],"names":["pageTitle","_frontmatter","makeShortcode","name","props","console","warn","mdx","Tip","Warning","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","parentName","isMDXComponent","candidateMdxNodes","useStaticQuery","allMdx","nodes","React","MdxLayout","index","docsIndex","prefix","pageTitleSuffix"],"sourceRoot":""}