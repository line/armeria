"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[1226],{39033:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return s},default:function(){return c}});var n,i=a(63366),r=(a(67294),a(64983)),l=a(20370),o=["components"],s={},p=(n="ThankYou",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),m={_frontmatter:s},u=l.Z;function c(e){var t=e.components,a=(0,i.Z)(e,o);return(0,r.kt)(u,Object.assign({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"date"},"12th February 2020"),(0,r.kt)("h2",{id:"-before-we-begin",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-before-we-begin","aria-label":" before we begin permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🎬 Before we begin"),(0,r.kt)("p",null,"This release contains more breaking changes and deprecations than usual, which were necessary for the preparation of 1.0 release and the long term evolution of our API after 1.0. We'd like to apologize for any inconveniences caused by the breaking changes. Please don't forget we're always here for you and do let us know if you have any trouble upgrading, so we can help you!"),(0,r.kt)("h2",{id:"-new-features",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-new-features","aria-label":" new features permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🌟 New features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Since this release, in preparation of 1.0 release, we annotated classes and packages which may have a chance of breaking change with the ",(0,r.kt)("inlineCode",{parentName:"li"},"@UnstableApi")," annotation. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2445"},"#2445")),(0,r.kt)("li",{parentName:"ul"},"The attribute access API of ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext")," has been revamped for simplicity. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2322"},"#2322"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'AttributeKey<String> MY_ATTR = AttributeKey.valueOf("MY_ATTR");\nRequestContext ctx = ...;\nctx.setAttr(MY_ATTR, "foo");\nassert "foo".equals(ctx.attr(MY_ATTR));\n'))),(0,r.kt)("li",{parentName:"ul"},"When a ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext")," is derived or inherited from another ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext"),", the parent context's attributes are now visible from the derived or inherited context: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2322"},"#2322"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'AttributeKey<String> MY_ATTR = AttributeKey.valueOf("MY_ATTR");\nServiceRequestContext parentCtx = ...;\nClientRequestContext childCtx = ...;\nassert childCtx.root() == parentCtx;\nparentCtx.setAttr(MY_ATTR, "foo");\n// Root context\'s attributes are visible from its children.\nassert "foo".equals(childCtx.attr(MY_ATTR));\n// Not visible anymore if the attribute is overwritten.\nchildCtx.setAttr(MY_ATTR, "bar");\nassert "foo".equals(parentCtx.attr(MY_ATTR));\nassert "bar".equals(childCtx.attr(MY_ATTR));\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Client,Service}RequestContext")," now provides more useful ways to schedule request or response timeout: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2343"},"#2343"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Server.builder()\n      .service("/svc", myService.decorate((delegate, ctx, req) -> {\n          if (req.headers().contains("x-extend-timeout")) {\n              // Extend the timeout by 10 seconds.\n              ctx.extendRequestTimeout(Duration.ofSeconds(10));\n          }\n          return delegate.serve(ctx, req);\n      }));\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestLog")," API has been revamped for safety and usability. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2342"},"#2342"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"RequestContext ctx = ...;\n// Asynchronous retrieval:\nctx.log().whenRequestComplete().thenAccept(log -> {\n    // Can't access response properties at compilation level.\n    assert log instanceof RequestOnlyLog;\n    System.err.println(log.toStringRequestOnly());\n})\nctx.log().whenComplete().thenAccept(log -> {\n    // Can access all properties.\n    assert log instanceof RequestLog;\n    System.err.println(log.toStringResponseOnly());\n});\nctx.log().whenAvailable(RequestLogProperty.SESSION).thenAccept(log -> {\n    // Advanced use case:\n    // Raises an exception if accessing an unavailable property.\n    System.err.println(log.channel());\n});\n// Accessing a property ensuring availability:\nctx.log().ensureRequestComplete().requestEndTimeNanos();\nctx.log().ensureComplete().responseEndTimeNanos();\nctx.log().ensureAvailable(RequestLogProperty.RESPONSE_CONTENT)\n   .responseContent();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestLog")," also has a new property ",(0,r.kt)("inlineCode",{parentName:"li"},"NAME"),", which can be used as a method name in an RPC call, a span name in distributed tracing or any other human-readable string that can be used for identifying a request. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2413"},"#2413")),(0,r.kt)("li",{parentName:"ul"},"Added a new immutable API for encoding and decoding HTTP query strings: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2307"},"#2307"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'QueryParams params = QueryParams.builder()\n                                .add("foo", "1")\n                                .add("bar", "2")\n                                .build();\n// Encoding\nString queryString = params.toQueryString();\nassert "foo=1&bar=2".equals(queryString);\n// Decoding\nQueryParams decodedParams = QueryParams.fromQueryString("foo=1&bar=2");\nassert decodedParams.equals(params);\n// Mutation\nQueryParams newParams = params.toBuilder()\n                              .add("baz", "3")\n                              .build();\nassert "foo=1&bar=2&baz=3".equals(newParams.toQueryString());\n'))),(0,r.kt)("li",{parentName:"ul"},"Added various convenient boolean getter methods to ",(0,r.kt)("inlineCode",{parentName:"li"},"HttpStatus"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2435"},"#2435"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"assert HttpStatus.CONTINUE.isInformational();\nassert HttpStatus.OK.isSuccess();\nassert HttpStatus.FOUND.isRedirect();\nassert HttpStatus.BAD_REQUEST.isClientError();\nassert HttpStatus.SERVICE_UNAVAILABLE.isServerError();\n// No need to write like this anymore\nassert HttpStatus.OK.codeClass() == HttpStatusClass.SUCCESS;\n"))),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"MediaTypeNames")," which provides ",(0,r.kt)("inlineCode",{parentName:"li"},"String")," version of well known ",(0,r.kt)("inlineCode",{parentName:"li"},"MediaType"),"s, which is useful when writing an annotated service: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2438"},"#2438"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'class MyAnnotatedService {\n    @Get("/download/zip")\n    @Produces(MediaTypeNames.ZIP)\n    HttpResponse downloadArchive() { ... }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},"You can now add ",(0,r.kt)("inlineCode",{parentName:"li"},"{Request,Response}ConverterFunction")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ExceptionHandlerFunction")," to all annotated services in your ",(0,r.kt)("inlineCode",{parentName:"li"},"Server")," easily. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2316"},"#2316"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Server.builder()\n      .annotatedService("/users", userService)\n      .annotatedService("/posts", postService)\n      .annotatedService("/files", fileService)\n      // Applies all extensions to all 3 annotated services.\n      .annotatedServiceExtensions(\n          commonRequestConverters,\n          commonResponseConverters,\n          commonExceptionHandlers)\n      .build();\n'))),(0,r.kt)("li",{parentName:"ul"},"You can now require a route to have HTTP headers and/or query parameters: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2102"},"#2102"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Server.builder()\n      // Route to 'myService' only when:\n      // - 'x-must-exist' header exists,\n      // - and 'bar' query parameter exists.\n      .route().get(\"/foo\")\n              .matchesHeaders(\"x-must-exist\")\n              .matchesParams(\"bar\")\n              .build(myService)\n"))),(0,r.kt)("li",{parentName:"ul"},"You can now customize the ",(0,r.kt)("inlineCode",{parentName:"li"},"SslContext")," created from ",(0,r.kt)("inlineCode",{parentName:"li"},"ServerBuilder.tlsSelfSigned()")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"VirtualHost.tlsSelfSigned()"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2340"},"#2340"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Server.builder()\n      .tlsSelfSigned()\n      .tlsCustomizer(sslCtxBuilder -> {\n          sslCtxBuilder.ciphers(...);\n      })\n"))),(0,r.kt)("li",{parentName:"ul"},"You can now close an ",(0,r.kt)("inlineCode",{parentName:"li"},"EndpointGroup")," asynchronously: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2430"},"#2430"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'DnsAddressEndpointGroup group =\n    DnsAddressEndpointGroup.of("cluster.com", 8080);\ngroup.whenClosed().thenRun(() -> {\n    System.err.println("Closed!");\n});\ngroup.closeAsync();\n'))),(0,r.kt)("li",{parentName:"ul"},"You do not need to register your ",(0,r.kt)("inlineCode",{parentName:"li"},"EndpointGroup")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"EndpointGroupRegistry")," for client-side load balancing. Just specify it when you build a client: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2381"},"#2381"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'EndpointGroup group = EndpointGroup.of(\n    Endpoint.of("node1.cluster.com"),\n    Endpoint.of("node2.cluster.com"));\n// Thrift\nHelloService.Iface client =\n    Clients.builder("tbinary+http", group)\n           .path("/api/thrift/hello")\n           .build(HelloService.Iface.class);\n// gRPC\nHelloServiceBlockingStub client =\n    Clients.builder("gproto+http", group)\n           .build(HelloServiceBlockingStub.class);\n// Web\nWebClient client =\n    WebClient.of(SessionProtocol.HTTP, group);\n'))),(0,r.kt)("li",{parentName:"ul"},"You can now limit the number of endpoints in ",(0,r.kt)("inlineCode",{parentName:"li"},"HealthCheckedEndpointGroup"),", which is very useful when there are many candidate endpoints in the group but you want to send requests to only a few of them, to avoid unnecessarily large number of outbound connections: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2177"},"#2177"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'HealthCheckedEndpointGroup group =\n    HealthCheckedEndpointGroup.builder(delegateGroup, "/health")\n                              .maxEndpointCount(3)\n                              .build();\n'))),(0,r.kt)("li",{parentName:"ul"},"You can now capture the ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientRequestContext")," of your client call with ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientRequestContextCaptor"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2344"},"#2344"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'WebClient client = WebClient.of("http://foo.com/");\ntry (ClientRequestContextCaptor ctxCaptor = Clients.newContextCaptor()) {\n    HttpResponse res = client.get("/");\n    ClientRequestContext ctx = ctxCaptor.get();\n    ...\n}\n'))),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactory.insecure()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactoryBuilder.tlsNoVerify()")," to simplify testing SSL/TLS connections with self-signed certificates: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2340"},"#2340"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Using the default insecure factory\nWebClient.builder("https://127.0.0.1:8443")\n         .factory(ClientFactory.insecure())\n         .build();\n// Using a custom insecure factory\nWebClient.builder("https://127.0.0.1:8443")\n         .factory(ClientFactory.builder()\n                               .tlsNoVerify()\n                               ...\n                               .build())\n         .build();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactory")," is now part of ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientOptions")," for easier creation of derived clients. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2384"},"#2384"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ClientFactory factory = ...;\nWebClient client =\n    WebClient.builder(...)\n             .factory(factory)\n             .build();\nWebClient clientCopy =\n    WebClient.builder(...)\n             .options(client.options())\n             .build();\n// Note that ClientFactory is copied as well.\nassert client.factory() == clientCopy.factory();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RetrofitMeterIdPrefixFunction")," is now capable of adding HTTP method and request path pattern if you specify a Retrofit service class: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2356"},"#2356")),(0,r.kt)("li",{parentName:"ul"},"New module ",(0,r.kt)("inlineCode",{parentName:"li"},"armeria-dropwizard")," provides the integration with ",(0,r.kt)("a",{parentName:"li",href:"https://www.dropwizard.io/"},"Dropwizard"),", which allows you to leverage the best of the both worlds. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2236"},"#2236"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("a",{parentName:"li",href:"https://armeria.dev/docs/advanced-dropwizard-integration"},"Using Armeria with Dropwizard")," for more information."),(0,r.kt)("li",{parentName:"ul"},"Special thanks to ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cricket007"},(0,r.kt)("strong",{parentName:"a"},"@cricket007"))," who volunteered for this."))),(0,r.kt)("li",{parentName:"ul"},"You can now customize ",(0,r.kt)("inlineCode",{parentName:"li"},"DocService")," when integrating with Spring framework by injecting ",(0,r.kt)("inlineCode",{parentName:"li"},"DocServiceConfigurator"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2327"},"#2327"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\npublic DocServiceConfigurator docServiceConfigurator() {\n    // Exclude all Thrift services from DocService.\n    return docServiceBuilder -> {\n        docServiceBuilder.exclude(DocServiceFilter.ofThrift());\n    };\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServerRule")," (JUnit 4) and ",(0,r.kt)("inlineCode",{parentName:"li"},"ServerExtension")," (JUnit 5) now have more getters: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2449"},"#2449"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Endpoint")," getters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"endpoint(SessionProtocol)"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"httpEndpoint()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"httpsEndpoint()")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"URI")," getters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uri(SessionProtocol)"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"uri(SessionProtocol, SerializationFormat)"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"httpUri()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"httpUri(SerializationFormat)"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"httpsUri()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"httpsUri(SerializationFormat)")),(0,r.kt)("li",{parentName:"ul"},"The old deprecated getters return ",(0,r.kt)("inlineCode",{parentName:"li"},"String")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"URI"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"InetSocketAddress")," getters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"socketAddress(SessionProtocol)")))))),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"CompletableFuture"),"s returned by our API will leave a warning log like the following when you perform a blocking operation in an event loop thread: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2275"},"#2275"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Calling a blocking method on CompletableFuture from an event loop or\nnon-blocking thread. You should never do this ...\njava.lang.IllegalStateException: Blocking event loop, don't do this.\n")),"You can disable this functionality by specifying the ",(0,r.kt)("inlineCode",{parentName:"li"},"-Dcom.linecorp.armeria.reportBlockedEventLoop=false")," JVM option."),(0,r.kt)("li",{parentName:"ul"},"You can now serialize and deserialize ",(0,r.kt)("inlineCode",{parentName:"li"},"ThriftCall"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ThriftReply"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"TMessage")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"TBase")," into TTEXT JSON using ",(0,r.kt)("inlineCode",{parentName:"li"},"ThriftJacksonModule"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2439"},"#2439"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ObjectMapper mapper = new ObjectMapper();\nmapper.registerModule(new ThriftJacksonModule());\n"))),(0,r.kt)("li",{parentName:"ul"},"You can now make any SLF4J ",(0,r.kt)("inlineCode",{parentName:"li"},"Logger")," context-aware with ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext.makeContextAware(Logger)"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2341"},"#2341"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Prints 'Hello!'\nLogger logger = ...;\nlogger.info(\"Hello!\");\n// Prints '[<current context>] Hello!'\nLogger ctxAwareLogger = ctx.makeContextAware(logger);\nctxAwareLogger(\"Hello!\");\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestContextExporter")," is now part of the core API, allowing you to integrate with other logging frameworks than Logback, such as Log4J2. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2314"},"#2314")),(0,r.kt)("li",{parentName:"ul"},"You can now disable HTTP header validation the the ",(0,r.kt)("inlineCode",{parentName:"li"},"-Dcom.linecorp.armeria.validateHeaders=false")," JVM option.")),(0,r.kt)("h2",{id:"-improvements",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-improvements","aria-label":" improvements permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"📈 Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Slightly reduced memory footprint of ",(0,r.kt)("inlineCode",{parentName:"li"},"Logging{Client,Service}")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2341"},"#2341")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"UnknownHostException")," raised by Armeria now explains what DNS query has failed. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2332"},"#2332")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WebClient")," now accepts a URI that starts with ",(0,r.kt)("inlineCode",{parentName:"li"},"none+")," as well. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2361"},"#2361")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HealthCheckedEndpointGroup")," now logs a helpful warning message when it receives a 4XX response. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2401"},"#2401")),(0,r.kt)("li",{parentName:"ul"},"Our builder API Javadoc does not show mysterious return type parameter such as ",(0,r.kt)("inlineCode",{parentName:"li"},"B")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"SELF")," anymore. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2454"},"#2454")),(0,r.kt)("li",{parentName:"ul"},"A client now gets ",(0,r.kt)("inlineCode",{parentName:"li"},"SSLException")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"ClosedSessionException")," if a connection attempt fails with an SSL/TLS handshake error. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2338"},"#2338"))),(0,r.kt)("h2",{id:"️-bug-fixes",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#%EF%B8%8F-bug-fixes","aria-label":"️ bug fixes permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🛠️ Bug fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WebClient")," does not omit a request query string when sending a request to an absolute URI. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2309"},"#2309")),(0,r.kt)("li",{parentName:"ul"},"A user cannot start a ",(0,r.kt)("inlineCode",{parentName:"li"},"Server")," with a misconfigured ",(0,r.kt)("inlineCode",{parentName:"li"},"SslContext")," anymore. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2325"},"#2325")),(0,r.kt)("li",{parentName:"ul"},"A user now always gets the correct ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext")," even if the contexts are nested. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/1083"},"#1083")),(0,r.kt)("li",{parentName:"ul"},"Fixed a bug where thread-local context customizers were called for derived contexts unintentionally. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2344"},"#2344")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Clients.withHttpHeaders()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"withContextCustomizer()")," now work with gRPC calls. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2344"},"#2344")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientRequestContext.path()")," now returns a correct path for gRPC client calls. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2344"},"#2344")),(0,r.kt)("li",{parentName:"ul"},"You can now send a POST request with an empty body with ",(0,r.kt)("inlineCode",{parentName:"li"},"DocService")," client. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2357"},"#2357")),(0,r.kt)("li",{parentName:"ul"},"Server-side route cache hit ratio was not as good as we intended. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2358"},"#2358")),(0,r.kt)("li",{parentName:"ul"},"Fixed various potential memory leak in ",(0,r.kt)("inlineCode",{parentName:"li"},"HttpResponseWriter"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2359"},"#2359")),(0,r.kt)("li",{parentName:"ul"},"Long-polling health check mechanism now detects a stall server which accepts a connection but does not send any response. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2392"},"#2392")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactoryOptions")," does not raise a ",(0,r.kt)("inlineCode",{parentName:"li"},"NullPointerException")," anymore. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2387"},"#2387")),(0,r.kt)("li",{parentName:"ul"},"An ",(0,r.kt)("inlineCode",{parentName:"li"},"AsyncMethodCallback")," specified when making an async Thrift call now has thread-local ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientRequestContext")," set properly. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2383"},"#2383")),(0,r.kt)("li",{parentName:"ul"},"gRPC client and server now works well with non-official gRPC stub generators such as ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/salesforce/reactive-grpc/"},"reactive-grpc"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2376"},"#2376")),(0,r.kt)("li",{parentName:"ul"},"Fixed a bug where a ",(0,r.kt)("inlineCode",{parentName:"li"},"Server")," can be started back after ",(0,r.kt)("inlineCode",{parentName:"li"},"close()")," is called. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2406"},"#2406")),(0,r.kt)("li",{parentName:"ul"},"Fixed a regression where Reactor does not treat Armeria's event loop threads as non-blocking. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2404"},"#2404")),(0,r.kt)("li",{parentName:"ul"},"Armeria does not fail to initialize anymore even if it failed to load the ",(0,r.kt)("inlineCode",{parentName:"li"},"com.linecorp.armeria.versions.properties")," file. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2398"},"#2398")),(0,r.kt)("li",{parentName:"ul"},"You'll not see the ",(0,r.kt)("inlineCode",{parentName:"li"},"cannot start a new stream with a DATA frame")," errors anymore. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2429"},"#2429")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestLog.requestStartTime")," property now includes the time taken for making a connection attempt and the time taken by decorators. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2436"},"#2436")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"-Dcom.linecorp.armeria.dumpOpenSslInfo=true")," JVM option does not trigger a ",(0,r.kt)("inlineCode",{parentName:"li"},"StackOverflowError")," anymore. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2418"},"#2418")),(0,r.kt)("li",{parentName:"ul"},"Fixed cosmetic issues in ",(0,r.kt)("inlineCode",{parentName:"li"},"DocService")," client sidebar. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2470"},"#2470")),(0,r.kt)("li",{parentName:"ul"},"Made sure IPv6 DNS queries are not sent to some IPv4 only machines with a link-local IPv6 interface. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2464"},"#2464"))),(0,r.kt)("h2",{id:"️-deprecations",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#%EF%B8%8F-deprecations","aria-label":"️ deprecations permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🏚️ Deprecations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpParameters")," has been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"QueryParams")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2307"},"#2307")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServerBuilder.tls()")," methods that require a ",(0,r.kt)("inlineCode",{parentName:"li"},"Consumer")," have been deprecated. Use ",(0,r.kt)("inlineCode",{parentName:"li"},"tlsCustomizer(Consumer)")," instead. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2340"},"#2340"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Before:\nServer.builder()\n      .tls(..., sslCtxBuilder -> { ... });\n// After:\nServer.builder()\n      .tls(...)\n      .tlsCustomizer(sslCtxBuilder -> { ... });\n"))),(0,r.kt)("li",{parentName:"ul"},"Many classes which have ",(0,r.kt)("inlineCode",{parentName:"li"},"Http")," in their names have been deprecated in favor of those without ",(0,r.kt)("inlineCode",{parentName:"li"},"Http"),", e.g. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2323"},"#2323"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RetryingHttpClient")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"RetryingClient")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpFileService")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"FileService")))),(0,r.kt)("li",{parentName:"ul"},"Many builder classes' constructors have been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"builder()")," static methods, e.g. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/1719"},"#1719"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"new ClientBuilder()")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"Clients.builder()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"new ArmeriaRetrofitBuilder()")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"ArmeriaRetrofit.builder()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"new ServerCacheControlBuilder()")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"ServerCacheControl.builder()")))),(0,r.kt)("li",{parentName:"ul"},"Many public static final fields that are not truly constants have been deprecated in favor of static factory methods, e.g.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"EndpointSelectionStrategy.ROUND_ROBIN")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"roundRogin()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"NodeValueCodec.DEFAULT")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"ofDefault()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AuthTokenExtractors.BASIC")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"basic()")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"MoreNamingConventions")," has been deprecated because we follow Micrometer's recommended naming convention. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2367"},"#2367")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Version.identify()")," has been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"getAll()")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2398"},"#2398")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServiceRequestContext.setRequestTimeout*()")," has been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"extendRequestTimeout*()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"setRequestTimeoutAfter*()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"setRequestTimeoutAt*()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"clearRequestTimeout()"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2343"},"#2343")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClientRequestContext.setResponseTimeout*()")," has been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"extendResponseTimeout*()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"setResponseTimeoutAfter*()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"setResponseTimeoutAt*()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"clearResponseTimeout()"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2343"},"#2343")),(0,r.kt)("li",{parentName:"ul"},"Many methods that return a ",(0,r.kt)("inlineCode",{parentName:"li"},"CompletableFuture")," have been renamed from ",(0,r.kt)("inlineCode",{parentName:"li"},"*Future()")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"when*()"),", e.g. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2427"},"#2427"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpRequest.completionFuture()")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"whenComplete()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpResponseWriter.onDemand()")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"whenConsumed()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"EndpointGroup.initialEndpointsFuture()")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"whenReady()")))),(0,r.kt)("li",{parentName:"ul"},"Many URI-returning methods in ",(0,r.kt)("inlineCode",{parentName:"li"},"ServerRule")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ServerExtension")," have been deprecated in favor of the new methods that do not require a path parameter: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2449"},"#2449"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ServerExtension server = ...;\n// Before\nserver.httpUri("/");\nserver.httpUri("/foo");\n// After\nserver.httpUri();\nserver.httpUri().resolve("/foo");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"THttpService.allowedSerializationFormats()")," has been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"supportedSerializationFormats()")," for consistency with ",(0,r.kt)("inlineCode",{parentName:"li"},"GrpcService"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2453"},"#2453")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Service.decorate(Class)")," has been deprecated in favor of other ",(0,r.kt)("inlineCode",{parentName:"li"},"decorate()")," methods that require a function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClosedPublisherException")," has been deprecated in favor of ",(0,r.kt)("inlineCode",{parentName:"li"},"ClosedStreamException"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/line/armeria/issues/2468"},"#2468"))),(0,r.kt)("h2",{id:"️-breaking-changes",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#%EF%B8%8F-breaking-changes","aria-label":"️ breaking changes permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"☢️ Breaking changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Most revamped APIs in this release were changed in a backward-incompatible way:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestLog")),(0,r.kt)("li",{parentName:"ul"},"Attribute API in ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext")))),(0,r.kt)("li",{parentName:"ul"},"Content previewing mechanism has been revamped into decorators. Use ",(0,r.kt)("inlineCode",{parentName:"li"},"ContentPreviewingClient")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ContentPreviewingService"),"."),(0,r.kt)("li",{parentName:"ul"},"You cannot add callbacks to ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext")," anymore because we found this feature results in poor performance and confusing behavior in many cases. We may want to revisit this feature if there is a valid use case for it."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Server,VirtualHost}Builder.tls()")," methods do not throw an ",(0,r.kt)("inlineCode",{parentName:"li"},"SSLException")," anymore. ",(0,r.kt)("inlineCode",{parentName:"li"},"build()")," will throw an ",(0,r.kt)("inlineCode",{parentName:"li"},"IllegalStateException")," instead. As a result, any SSL configuration failure will be known when a user calls ",(0,r.kt)("inlineCode",{parentName:"li"},"build()"),", rather than ",(0,r.kt)("inlineCode",{parentName:"li"},"tls()"),"."),(0,r.kt)("li",{parentName:"ul"},"We were not able to keep some classes or method signatures while we remove ",(0,r.kt)("inlineCode",{parentName:"li"},"Http")," from class names."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServiceRequestContext.logger()")," has been removed due to performance issues with Log4J2."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext.isTimedOut()")," has been removed."),(0,r.kt)("li",{parentName:"ul"},"We do not support Tomcat 8.0 anymore, which was obsoleted by Tomcat 8.5 anyway."),(0,r.kt)("li",{parentName:"ul"},"The classes in ",(0,r.kt)("inlineCode",{parentName:"li"},"armeria-grpc-protocol")," have been reorganized into multiple packages."),(0,r.kt)("li",{parentName:"ul"},"Our Micrometer meter IDs have been changed, which means you might need to update your monitoring configuration. If you wish to switch back to the legacy naming style, specify the ",(0,r.kt)("inlineCode",{parentName:"li"},"-Dcom.linecorp.armeria.useLegacyMeterNamed=true")," JVM option. However, please keep in mind this option will eventually go away, because the new naming convention is recommended by Micrometer."),(0,r.kt)("li",{parentName:"ul"},"All our methods do not return ",(0,r.kt)("inlineCode",{parentName:"li"},"Optional")," anymore. They are all ",(0,r.kt)("inlineCode",{parentName:"li"},"@Nullable")," now. If you wish to continue using ",(0,r.kt)("inlineCode",{parentName:"li"},"Optional"),", just wrap the return value with ",(0,r.kt)("inlineCode",{parentName:"li"},"Optional.ofNullable()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"EndpointGroupRegistry")," has been removed, because you can now just specify an ",(0,r.kt)("inlineCode",{parentName:"li"},"EndpointGroup")," directly when creating a client.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"As a result, you need to specify an ",(0,r.kt)("inlineCode",{parentName:"li"},"EndpointSelectionStrategy")," when building an ",(0,r.kt)("inlineCode",{parentName:"li"},"EndpointGroup"),". If unspecified, ",(0,r.kt)("inlineCode",{parentName:"li"},"EndpointSelectionStrategy.weightedRoundRobin()")," is used."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"MeterIdPrefixFunction")," is not a functional interface anymore. You must implement two methods explicitly: ",(0,r.kt)("inlineCode",{parentName:"li"},"activeRequestPrefix()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"completeRequestPrefix()"),"."),(0,r.kt)("li",{parentName:"ul"},"Now that ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientFactory")," is a part of ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientOption"),", the following code will not work as expected, because ",(0,r.kt)("inlineCode",{parentName:"li"},"options(options)")," will overwrite the factory.",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ClientOptions options = ClientOptions.builder().maxResponseLength(...).build();\nClientFactory factory = ClientFactory.builder().useHttp2Preface(false).build();\nWebClient client = WebClient.builder(...)\n                            .factory(factory)\n                            .options(options)\n                            .build();\n// This will fail!\nassert client.options().factory() == factory;\n")),"To fix this, you must call ",(0,r.kt)("inlineCode",{parentName:"li"},"options()")," first, and then override the individual properties:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"WebClient client = WebClient.builder(...)\n                            .options(options)\n                            .factory(factory)\n                            .build();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"StreamMessage.subscribe(..., boolean withPooledObjects)")," has been removed. Use ",(0,r.kt)("inlineCode",{parentName:"li"},"subscribe(..., SubscriptionOption.WITH_POOLED_OBJECTS)"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"StreamMessage.drainAll(..., boolean withPooledObjects)")," has been removed. Use ",(0,r.kt)("inlineCode",{parentName:"li"},"drainAll(..., SubscriptionOption.WITH_POOLED_OBJECTS)"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpRequestDuplicator")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"HttpResponseDuplicator")," are now interfaces. Use ",(0,r.kt)("inlineCode",{parentName:"li"},"HttpRequest.toDuplicator()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"HttpResponse.toDuplicator()")," to create a duplicator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"StructuredLog")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"StructuredLoggingService")," have been removed. Use ",(0,r.kt)("inlineCode",{parentName:"li"},"AccessLogWriter"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ThriftStructuredLogJsonFormat")," has been removed. Register ",(0,r.kt)("inlineCode",{parentName:"li"},"ThriftJacksonModule")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"ObjectMapper")," to serialize or deserialize Thrift objects.")),(0,r.kt)("h2",{id:"-dependencies",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-dependencies","aria-label":" dependencies permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"⛓ Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Brave 5.9.1 -> 5.9.3"),(0,r.kt)("li",{parentName:"ul"},"Dropwizard 1.3.17 -> 1.3.18"),(0,r.kt)("li",{parentName:"ul"},"Dropwizard Metrics 4.1.1 -> 4.1.2"),(0,r.kt)("li",{parentName:"ul"},"gRPC 1.25 -> 1.27"),(0,r.kt)("li",{parentName:"ul"},"Jackson 2.10.1 -> 2.10.2.20200130"),(0,r.kt)("li",{parentName:"ul"},"java-jwt 3.8.3 -> 3.9.0"),(0,r.kt)("li",{parentName:"ul"},"Jetty 9.4.24 -> 9.4.26"),(0,r.kt)("li",{parentName:"ul"},"Micrometer 1.3.2 -> 1.3.3"),(0,r.kt)("li",{parentName:"ul"},"Netty 4.1.43 -> 4.1.45",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"TCNative BoringSSL 2.0.26 -> 2.0.28"))),(0,r.kt)("li",{parentName:"ul"},"Prometheus Java client 0.8.0 -> 0.8.1"),(0,r.kt)("li",{parentName:"ul"},"Reactor 3.3.1 -> 3.3.2"),(0,r.kt)("li",{parentName:"ul"},"Retrofit 2.6.2 -> 2.7.1"),(0,r.kt)("li",{parentName:"ul"},"RxJava 2.2.15 -> 2.2.17"),(0,r.kt)("li",{parentName:"ul"},"SLF4J 1.7.29 -> 1.7.30"),(0,r.kt)("li",{parentName:"ul"},"Spring Boot 2.2.1 -> 2.2.4, 2.1.10 -> 2.1.12"),(0,r.kt)("li",{parentName:"ul"},"Thrift 0.12.0 -> 0.13.0"),(0,r.kt)("li",{parentName:"ul"},"Tomcat 9.0.29 -> 9.0.30, 8.5.49 -> 8.5.50")),(0,r.kt)("h2",{id:"-thank-you",style:{position:"relative"}},(0,r.kt)("a",{parentName:"h2",href:"#-thank-you","aria-label":" thank you permalink",className:"anchor before"},(0,r.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"🙇 Thank you"),(0,r.kt)(p,{usernames:["4whomtbts","abkura","andrey-tpt","anuraaga","arhont375","cbornet","Charliocat","codefromthecrypt","cricket007","Cronnay","danada","dylmeadows","eonezhang","franz1981","geminiKim","heowc","hyangtack","ikhoon","ildartuykin","imasahiro","jcchavezs","jrhee17","KarboniteKream","kezhenxu94","kojilin","linxGnu","mauhiz","max904-github","mercanil","minwoox","monorisk","njhill","perlun","renaudb","rmichela","sivaalli","skkap","snaiper80","southernkasaist","Stupremee","syleeeee","tobias-","trustin","ylgrgyq"],mdxType:"ThankYou"}))}c.isMDXComponent=!0},20370:function(e,t,a){a(88025);var n=a(1923),i=a(25444),r=a(67294),l=a(55746),o=a(8284),s=a(96759),p=a(46731),m=a(9396),u=n.Z.Title,c=Object.keys(o)[0],d=h(c);function h(e){return e.substring(e.lastIndexOf("/")+1)}t.Z=function(e){var t={},a={},n={root:{"Latest news items":"/news","Latest release notes":"/release-notes","Past news items":"/news/list","Past release notes":"/release-notes/list"},"Recent news items":t,"Recent releases":a};Object.entries(l).forEach((function(e){var a=e[0],n=e[1];t[n]=a})),Object.entries(o).forEach((function(e){var t=e[0],n=e[1];a[n]=t}));var k=(0,m.Z)(e.location),N=e.version||h(k);return N.match(/^[0-9]/)||(N=void 0),r.createElement(p.Z,Object.assign({},e,{candidateMdxNodes:[],index:n,prefix:"release-notes",pageTitle:N?N+" release notes":e.pageTitle,pageTitleSuffix:"Armeria release notes"}),N&&N!==d?r.createElement(s.Ch,null,"You're seeing the release note of an old version. Check out"," ",r.createElement(i.Link,{to:c},"the latest release note"),"."):"",N?r.createElement(u,{id:"release-notes",level:1},r.createElement("a",{href:"#release-notes","aria-label":"release notes permalink",className:"anchor before"},r.createElement("svg",{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},r.createElement("path",{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),N," release notes"):"",e.children)}},55746:function(e){e.exports=JSON.parse('{"/news/20231208-newsletter-6":"Armeria Newsletter vol. 6","/news/20230426-newsletter-5":"Armeria Newsletter vol. 5","/news/20220714-newsletter-4":"Armeria Newsletter vol. 4","/news/20211029-newsletter-3":"Armeria Newsletter vol. 3","/news/20210202-newsletter-2":"Armeria Newsletter vol. 2","/news/20200703-newsletter-1":"Armeria Newsletter vol. 1","/news/20200514-newsletter-0":"Armeria Newsletter vol. 0"}')},8284:function(e){e.exports=JSON.parse('{"/release-notes/1.29.4":"v1.29.4","/release-notes/1.29.3":"v1.29.3","/release-notes/1.29.2":"v1.29.2","/release-notes/1.29.1":"v1.29.1","/release-notes/1.29.0":"v1.29.0","/release-notes/1.28.4":"v1.28.4","/release-notes/1.28.3":"v1.28.3","/release-notes/1.28.2":"v1.28.2","/release-notes/1.28.1":"v1.28.1","/release-notes/1.28.0":"v1.28.0","/release-notes/1.27.3":"v1.27.3","/release-notes/1.27.2":"v1.27.2","/release-notes/1.27.1":"v1.27.1","/release-notes/1.27.0":"v1.27.0","/release-notes/1.26.4":"v1.26.4","/release-notes/1.26.3":"v1.26.3"}')}}]);
//# sourceMappingURL=component---src-pages-release-notes-0-98-0-mdx-3758d8bb3c25cfc6a6c0.js.map