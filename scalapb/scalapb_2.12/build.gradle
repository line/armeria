plugins {
    id 'scala'
}

dependencies {
    implementation project(':grpc')
    implementation('org.scala-lang:scala-library') {
        version {
            strictly '2.12.13'
        }
    }

    // ScalaPB
    api "com.thesamet.scalapb:scalapb-json4s_2.12"
    implementation "com.thesamet.scalapb:scalapb-runtime_2.12"
    implementation "com.thesamet.scalapb:scalapb-runtime-grpc_2.12"

    testImplementation 'io.monix:monix-reactive_2.12'
}

// Use the sources from ':scalapb_2.13'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
def scalapb213ProjectDir = "${rootProject.projectDir}/scalapb/scalapb_2.13"
tasks.compileScala.source "${scalapb213ProjectDir}/src/main/scala"
tasks.processResources.from "${scalapb213ProjectDir}/src/main/resources"
// Uncomment the following three lines once we have src/main/proto in :scalapb_2.13.
//// Use the source code generated from :scalapb_2.13/src/main/proto/*.proto.
// tasks.compileScala.dependsOn(":scalapb_2.13:generateProto")
// tasks.compileScala.source "${scalapb213ProjectDir}/gen-src/main/scalapb"

tasks.compileTestScala.source "${scalapb213ProjectDir}/src/test/scala"
tasks.processTestResources.from "${scalapb213ProjectDir}/src/test/resources"
// Use the source code generated from :scalapb_2.13/src/test/proto/*.proto.
tasks.compileTestScala.dependsOn(":scalapb_2.13:generateTestProto")
tasks.compileTestScala.source "${scalapb213ProjectDir}/gen-src/test/scalapb"

tasks.sourcesJar.from "${scalapb213ProjectDir}/src/main/scala"
tasks.sourcesJar.from "${scalapb213ProjectDir}/src/main/resources"
tasks.scaladoc.source "${scalapb213ProjectDir}/src/main/scala"

compileScala.targetCompatibility = 1.8
ScalaCompileOptions.metaClass.useAnt = false

tasks.withType(Test) {
    useJUnitPlatform {
        // A workaround for 'java.lang.InternalError: Malformed class name'
        // when testing scalapb module with Java 8. This bug was fixed in Java 9.
        // - https://github.com/gradle/gradle/issues/8432
        // - https://bugs.openjdk.java.net/browse/JDK-8057919
        if (System.env.TEST_JAVA_VERSION == '8') {
            exclude("**/*\$*\$*.class")
        }
    }
}

task aggregatedScaladocs(
        type: ScalaDoc,
        description: 'Generate scaladocs from all child projects',
        group: 'Documentation') {
    destinationDir = file("$buildDir/docs/scaladoc")
    title = "$project.name $version API"

    subprojects.each { proj ->
        proj.tasks.withType(ScalaDoc).each {
            source += proj.sourceSets.main.allJava
            source += proj.sourceSets.main.allScala
            classpath += proj.sourceSets.main.compileClasspath
            excludes += scaladoc.excludes
            includes += scaladoc.includes
        }
    }
}
