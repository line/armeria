{"version":3,"file":"component---src-pages-tutorials-rest-blog-implement-read-mdx-7940f350d2e8345d3707.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/tutorials/rest/blog/implement-read.mdx","webpack://armeria-site/./src/layouts/tutorials.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/tutorials.tsx\";\nexport const pageTitle = \"Implementing READ operation\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TutorialSteps = makeShortcode(\"TutorialSteps\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst TabPane = makeShortcode(\"TabPane\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"implementing-read-operation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#implementing-read-operation\",\n        \"aria-label\": \"implementing read operation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Implementing READ operation`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#what-you-need\"\n        }}>{`What you need`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#1-map-http-method\"\n        }}>{`1. Map HTTP method`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#2-handle-parameters\"\n        }}>{`2. Handle parameters`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#3-implement-service-code\"\n        }}>{`3. Implement service code`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#4-return-response\"\n        }}>{`4. Return response`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#5-test-retrieving-a-single-post\"\n        }}>{`5. Test retrieving a single post`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#6-test-retrieving-multiple-posts\"\n        }}>{`6. Test retrieving multiple posts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#next-step\"\n        }}>{`Next step`}</a></li>\n    </ul>\n    <p>{`In this step, we'll implement two methods at once. One is for retrieving a single post and another for multiple blog\nposts. By completing this step, you'll learn to map your service with the HTTP GET (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html\"\n      }}>{`type://@Get`}</a>{`) method, use parameter injection (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{`), set default parameter value (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html\"\n      }}>{`type://@Default`}</a>{`), and return a JSON object (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html\"\n      }}>{`type://@ProducesJson`}</a>{`) as a response.`}</p>\n    <TutorialSteps current={5} mdxType=\"TutorialSteps\" />\n    <h2 {...{\n      \"id\": \"what-you-need\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#what-you-need\",\n        \"aria-label\": \"what you need permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What you need`}</h2>\n    <p>{`You need to have the following files obtained from previous steps.\nYou can always `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/line/armeria-examples/blob/main/tutorials/rest-api-annotated-service/src/main/java/example/armeria/server/blog/\"\n      }}>{`download`}</a>{` the full version, instead of creating one yourself.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Main.java`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BlogPost.java`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BlogService.java`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BlogServiceTest.java`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"1-map-http-method\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#1-map-http-method\",\n        \"aria-label\": \"1 map http method permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`1. Map HTTP method`}</h2>\n    <p>{`Let's start `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-annotated-service#mapping-http-service-methods\"\n      }}>{`mapping the HTTP GET method`}</a>{` with our service method:`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`Map the HTTP GET method for retrieving a single post:`}</p>\n        <ol>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Declare a service method `}<inlineCode parentName=\"p\">{`getBlogPost()`}</inlineCode>{` in the class `}<inlineCode parentName=\"p\">{`BlogService`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Map this service method with the HTTP GET method by adding the `}<a parentName=\"p\" {...{\n                \"href\": \"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html\"\n              }}>{`type://@Get`}</a>{` annotation as follows.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Bind the endpoint `}<inlineCode parentName=\"p\">{`/blogs`}</inlineCode>{` to the method.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-java\",\n                \"metastring\": \"filename=BlogService.java highlight=6\",\n                \"filename\": \"BlogService.java\",\n                \"highlight\": \"6\"\n              }}>{`import com.linecorp.armeria.server.annotation.Get;\n\npublic final class BlogService {\n  ...\n\n  @Get(\"/blogs\")\n  public void getBlogPost(int id) {\n    // Retrieve a single post\n  }\n}\n`}</code></pre>\n          </li>\n        </ol>\n      </TabPane>\n      <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <p>{`Map the HTTP GET method for retrieving multiple posts:`}</p>\n        <ol>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Declare a service method `}<inlineCode parentName=\"p\">{`getBlogPosts()`}</inlineCode>{` in the class `}<inlineCode parentName=\"p\">{`BlogService`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Map this service method with the HTTP GET method by adding the `}<a parentName=\"p\" {...{\n                \"href\": \"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html\"\n              }}>{`type://@Get`}</a>{` annotation as follows.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Bind the endpoint `}<inlineCode parentName=\"p\">{`/blogs`}</inlineCode>{` to the method.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-java\",\n                \"metastring\": \"filename=BlogService.java highlight=6\",\n                \"filename\": \"BlogService.java\",\n                \"highlight\": \"6\"\n              }}>{`import com.linecorp.armeria.server.annotation.Get;\n\npublic final class BlogService {\n  ...\n\n  @Get(\"/blogs\")\n  public void getBlogPosts(boolean descending) {\n    // Retrieve multiple posts\n  }\n}\n`}</code></pre>\n          </li>\n        </ol>\n      </TabPane>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"2-handle-parameters\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#2-handle-parameters\",\n        \"aria-label\": \"2 handle parameters permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`2. Handle parameters`}</h2>\n    <p>{`Take in information through `}<em parentName=\"p\">{`path`}</em>{` and `}<em parentName=\"p\">{`query`}</em>{` parameters for retrieving blog posts. For retrieving a single post, we'll take a blog post ID as the path parameter. For multiple posts, we'll take the sorting order as a query parameter.`}</p>\n    <Tabs defaultActiveKey=\"1\" mdxType=\"Tabs\">\n      <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`Let's handle parameters for retrieving a single post:`}</p>\n        <ol>\n          <li parentName=\"ol\">{`To take in a path parameter, add `}<inlineCode parentName=\"li\">{`/:id`}</inlineCode>{` to the `}<a parentName=\"li\" {...{\n              \"href\": \"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html\"\n            }}>{`type://@Get`}</a>{` annotation's parameter as in line 6.`}</li>\n          <li parentName=\"ol\"><a parentName=\"li\" {...{\n              \"href\": \"/docs/server-annotated-service#parameter-injection\"\n            }}>{`Inject the path parameter`}</a>{` to the service method, annotate the parameter with `}<a parentName=\"li\" {...{\n              \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n            }}>{`type://@Param`}</a>{` as in line 7.`}</li>\n        </ol>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java showlineno=true\",\n            \"filename\": \"BlogService.java\",\n            \"showlineno\": \"true\"\n          }}>{`import com.linecorp.armeria.server.annotation.Param;\n\npublic final class BlogService {\n ...\n\n @Get(\"/blogs/:id\")\n public void getBlogPost(@Param int id) {\n   // Retrieve a single post\n }\n}\n`}</code></pre>\n      </TabPane>\n      <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <p>{`Let's handle parameters for retrieving multiple posts:`}</p>\n        <ol>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Specify the endpoint for the service using the `}<a parentName=\"p\" {...{\n                \"href\": \"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html\"\n              }}>{`type://@Get`}</a>{` annotation.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\"><a parentName=\"p\" {...{\n                \"href\": \"/docs/server-annotated-service#parameter-injection\"\n              }}>{`Inject the parameter`}</a>{` by annotating the parameter `}<inlineCode parentName=\"p\">{`descending`}</inlineCode>{` with `}<a parentName=\"p\" {...{\n                \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n              }}>{`type://@Param`}</a>{` as in line 8.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Set the default sorting order to descending by annotating the parameter `}<inlineCode parentName=\"p\">{`descending`}</inlineCode>{` with `}<a parentName=\"p\" {...{\n                \"href\": \"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html\"\n              }}>{`type://@Default`}</a>{`, with its parameter as `}<inlineCode parentName=\"p\">{`\"true\"`}</inlineCode>{`.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-java\",\n                \"metastring\": \"filename=BlogService.java showlineno=true\",\n                \"filename\": \"BlogService.java\",\n                \"showlineno\": \"true\"\n              }}>{`import com.linecorp.armeria.server.annotation.Param;\nimport com.linecorp.armeria.server.annotation.Default;\n\npublic final class BlogService {\n  ...\n\n  @Get(\"/blogs\")\n  public void getBlogPosts(@Param @Default(\"true\") boolean descending) {\n    // Retrieve multiple posts\n  }\n}\n`}</code></pre>\n          </li>\n        </ol>\n      </TabPane>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"3-implement-service-code\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#3-implement-service-code\",\n        \"aria-label\": \"3 implement service code permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`3. Implement service code`}</h2>\n    <p>{`In this step, write the code required for service itself.`}</p>\n    <Tabs defaultActiveKey=\"1\" mdxType=\"Tabs\">\n      <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`To retrieve a single blog post information, copy the following code inside the `}<inlineCode parentName=\"p\">{`getBlogPost()`}</inlineCode>{` method.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java highlight=3\",\n            \"filename\": \"BlogService.java\",\n            \"highlight\": \"3\"\n          }}>{`@Get(\"/blogs\")\npublic void getBlogPost(@Param int id) {\n  BlogPost blogPost = blogPosts.get(id);\n}\n`}</code></pre>\n      </TabPane>\n      <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <p>{`To retrieve multiple blog posts, copy the following code inside the `}<inlineCode parentName=\"p\">{`getBlogPosts()`}</inlineCode>{` method. Note that the return type has been changed from `}<inlineCode parentName=\"p\">{`void`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`Iterable<BlogPost>`}</inlineCode>{`.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java\",\n            \"filename\": \"BlogService.java\"\n          }}>{`import java.util.Map.Entry;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.stream.Collectors;\n\n@Get(\"/blogs\")\npublic Iterable<BlogPost> getBlogPosts(@Param @Default(\"true\") boolean descending) {\n  // Descending\n  if (descending) {\n      return blogPosts.entrySet()\n                      .stream()\n                      .sorted(Collections.reverseOrder(Comparator.comparingInt(Entry::getKey)))\n                      .map(Entry::getValue).collect(Collectors.toList());\n  }\n  // Ascending\n  return blogPosts.values().stream().collect(Collectors.toList());\n}\n`}</code></pre>\n      </TabPane>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"4-return-response\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#4-return-response\",\n        \"aria-label\": \"4 return response permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`4. Return response`}</h2>\n    <p>{`Let's return a response for the service call.`}</p>\n    <Tabs defaultActiveKey=\"1\" mdxType=\"Tabs\">\n      <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`To return a response for getting a single post:`}</p>\n        <ol>\n          <li parentName=\"ol\">{`Replace the return type of the `}<inlineCode parentName=\"li\">{`getBlogPost()`}</inlineCode>{` method from `}<inlineCode parentName=\"li\">{`void`}</inlineCode>{` to `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n            }}>{`type://HttpResponse`}</a>{`.`}</li>\n          <li parentName=\"ol\">{`Return a response using Armeria's `}<a parentName=\"li\" {...{\n              \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n            }}>{`type://HttpResponse`}</a>{` containing the content of the blog post retrieved.`}</li>\n        </ol>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java highlight=5,8\",\n            \"filename\": \"BlogService.java\",\n            \"highlight\": \"5,8\"\n          }}>{`import com.linecorp.armeria.common.HttpResponse;\n\npublic final class BlogService {\n  @Get(\"/blogs/:id\")\n  public HttpResponse getBlogPost(@Param int id) {\n    ...\n\n    return HttpResponse.ofJson(blogPost);\n  }\n}\n`}</code></pre>\n      </TabPane>\n      <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <p>{`We've already implemented returning multiple blog posts in the previous step. Here, annotate the method `}<inlineCode parentName=\"p\">{`getBlogPosts()`}</inlineCode>{` with `}<a parentName=\"p\" {...{\n            \"href\": \"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html\"\n          }}>{`type://@ProducesJson`}</a>{`. This converts a list of `}<inlineCode parentName=\"p\">{`BlogPost`}</inlineCode>{` objects into a JSON response.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java highlight=4\",\n            \"filename\": \"BlogService.java\",\n            \"highlight\": \"4\"\n          }}>{`import com.linecorp.armeria.server.annotation.ProducesJson;\n\n@Get(\"/blogs\")\n@ProducesJson\npublic Iterable<BlogPost> getBlogPosts(@Param @Default(\"true\") boolean descending) {\n  // Retrieve multiple blog posts\n}\n`}</code></pre>\n      </TabPane>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"5-test-retrieving-a-single-post\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#5-test-retrieving-a-single-post\",\n        \"aria-label\": \"5 test retrieving a single post permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`5. Test retrieving a single post`}</h2>\n    <p>{`Let's test if we can retrieve a blog post we created.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<inlineCode parentName=\"p\">{`BlogServiceTest`}</inlineCode>{` class, add a test method to retrieve the first blog post with ID `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogServiceTest.java\",\n            \"filename\": \"BlogServiceTest.java\"\n          }}>{`@Test\nvoid getBlogPost() throws JsonProcessingException {\n  final WebClient client = WebClient.of(server.httpUri());\n  final AggregatedHttpResponse res = client.get(\"/blogs/0\").aggregate().join();\n  final Map<String, Object> expected = Map.of(\"id\", 0,\n              \"title\", \"My first blog\",\n              \"content\", \"Hello Armeria!\");\n\n  assertThatJson(res.contentUtf8()).whenIgnoringPaths(\"createdAt\", \"modifiedAt\")\n              .isEqualTo(mapper.writeValueAsString(expected));\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add annotations to configure the order our test methods will be executed.\nThe annotations guarantee that the first blog post will be created in the `}<inlineCode parentName=\"p\">{`createBlogPost()`}</inlineCode>{` method before we try to retrieve it in the `}<inlineCode parentName=\"p\">{`getBlogPost()`}</inlineCode>{` method.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogServiceTest.java\",\n            \"filename\": \"BlogServiceTest.java\"\n          }}>{`import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;\nimport org.junit.jupiter.api.Order;\nimport org.junit.jupiter.api.TestMethodOrder;\n\n@TestMethodOrder(OrderAnnotation.class) // Add this\nclass BlogServiceTest {\n  ...\n\n  @Test\n  @Order(1) // Add this\n  void createBlogPost() throws JsonProcessingException {\n    ...\n  }\n\n  @Test\n  @Order(2) // Add this\n  void getBlogPost() throws JsonProcessingException {\n    ...\n  }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run all the test cases on your IDE or using Gradle.`}</p>\n        <p parentName=\"li\">{`Your client retrieved a blog post from the server successfully if the test is passed.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"6-test-retrieving-multiple-posts\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#6-test-retrieving-multiple-posts\",\n        \"aria-label\": \"6 test retrieving multiple posts permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`6. Test retrieving multiple posts`}</h2>\n    <p>{`Finally, let's test if we can retrieve multiple posts.\nAdd a test method like the following to create the second blog post and test retrieving the list of blog posts.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogServiceTest.java\",\n        \"filename\": \"BlogServiceTest.java\"\n      }}>{`import java.util.List;\n\n@Test\n@Order(3)\nvoid getBlogPosts() throws JsonProcessingException {\n  final WebClient client = WebClient.of(server.httpUri());\n  final HttpRequest request = createBlogPostRequest(Map.of(\"title\", \"My second blog\",\n                \"content\", \"Armeria is awesome!\"));\n  client.execute(request).aggregate().join();\n  final AggregatedHttpResponse res = client.get(\"/blogs\").aggregate().join();\n  final List<Map<String, Object>> expected = List.of(\n          Map.of(\"id\", 1,\n                 \"title\", \"My second blog\",\n                 \"content\", \"Armeria is awesome!\"),\n          Map.of(\"id\", 0,\n                 \"title\", \"My first blog\",\n                 \"content\", \"Hello Armeria!\"));\n  assertThatJson(res.contentUtf8()).whenIgnoringPaths(\"[*].createdAt\", \"[*].modifiedAt\")\n                .isEqualTo(mapper.writeValueAsString(expected));\n}\n`}</code></pre>\n    <p>{`Run all the test cases on your IDE or using Gradle.\nCheck that you see the test is passed.`}</p>\n    <p>{`You can test this also with Armeria's `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-docservice\"\n      }}>{`Documentation service`}</a>{`. See `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/rest/blog/add-services-to-server#using-docservice-after-adding-service-methods\"\n      }}>{`Using DocService after adding service methods`}</a>{` for instructions.`}</p>\n    <h2 {...{\n      \"id\": \"next-step\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#next-step\",\n        \"aria-label\": \"next step permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Next step`}</h2>\n    <p>{`In this step, we've implemented methods for a READ operation and used Armeria's annotations; `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html\"\n      }}>{`type://@Get`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html\"\n      }}>{`type://@ProducesJson`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html\"\n      }}>{`type://@Default`}</a>{`.`}</p>\n    <p>{`Next, at `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/rest/blog/implement-update\"\n      }}>{`Step 6. Implement UPDATE`}</a>{`, we'll implement an UPDATE operation to modify existing blog posts.`}</p>\n    <TutorialSteps current={5} mdxType=\"TutorialSteps\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/tutorials/toc.json';\nimport MdxLayout from './mdx';\n\ninterface TutorialLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst TutorialLayout: React.FC<TutorialLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(\n        filter: { fileAbsolutePath: { glob: \"**/src/pages/tutorials/**\" } }\n      ) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n              relativeDirectory\n            }\n          }\n          frontmatter {\n            menuTitle\n            order\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"tutorials\"\n      menuTitle\n      pageTitleSuffix=\"Armeria tutorial\"\n    />\n  );\n};\n\nexport default TutorialLayout;\n"],"names":["pageTitle","_frontmatter","makeShortcode","name","props","console","warn","mdx","TutorialSteps","Tabs","TabPane","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","current","tab","key","defaultActiveKey","isMDXComponent","allMdx","nodes","candidateMdxNodes","useStaticQuery","React","MdxLayout","index","docsIndex","prefix","menuTitle","pageTitleSuffix"],"sourceRoot":""}