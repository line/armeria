plugins {
    id 'base'
    alias(libs.plugins.node.gradle)
}

// Do not build if 'noWeb' property exists.
if (rootProject.hasProperty('noWeb')) {
    return
}

node {
    version = '16.19.1'
    download = true
    npmInstallCommand = "ci"

    // Change the cache location under Gradle user home directory so that it's cached by CI.
    if (System.getenv('CI') != null) {
        workDir = file("${gradle.gradleUserHomeDir}/caches/nodejs/${project.name}")
        npmWorkDir = file("${gradle.gradleUserHomeDir}/caches/npm/${project.name}")
    }
}

// Add the option that works around the dependency conflicts.
tasks.npmInstall.args.add('--legacy-peer-deps')

task buildWeb(type: NpmTask) {
    dependsOn tasks.npmInstall

    args = ['run', 'build']

    inputs.dir('src')
    inputs.files('package.json', 'package-lock.json')
    outputs.dir('build/web')
}

task copyWeb(type: Copy) {
    dependsOn buildWeb

    from 'build/web'
    into 'build/javaweb/com/linecorp/armeria/server/docs'
}

tasks.assemble.dependsOn tasks.copyWeb

if (!rootProject.hasProperty('noLint')) {
    task eslint(type: NpmTask) {
        dependsOn tasks.npmInstall

        args = ['run', 'lint']

        inputs.dir('src')
        inputs.file('package.json')
        inputs.file('package-lock.json')
        outputs.upToDateWhen { true }
    }

    Task lintTask = project.ext.getLintTask()
    lintTask.dependsOn(tasks.eslint)
    tasks.buildWeb.dependsOn(lintTask)
}
