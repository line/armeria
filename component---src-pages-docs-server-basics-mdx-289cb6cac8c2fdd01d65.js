"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[1912],{24661:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return p},default:function(){return h},pageTitle:function(){return l}});var r,n=a(63366),o=(a(67294),a(64983)),i=a(28819),s=["components"],l="Server basics",p={},c=(r="Tip",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),d={pageTitle:l,_frontmatter:p},m=i.Z;function h(e){var t=e.components,a=(0,n.Z)(e,s);return(0,o.kt)(m,Object.assign({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"server-basics",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h1",href:"#server-basics","aria-label":"server basics permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Server basics"),(0,o.kt)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#ports"},"Ports")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#services"},"Services")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#path-patterns"},"Path patterns")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#per-service-configuration"},"Per service configuration")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#ssltls"},"SSL/TLS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proxy-protocol"},"PROXY protocol")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#serving-http-and-https-on-the-same-port"},"Serving HTTP and HTTPS on the same port")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#virtual-hosts"},"Virtual hosts")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#getting-an-ip-address-of-a-client-who-initiated-a-request"},"Getting an IP address of a client who initiated a request")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#see-also"},"See also"))),(0,o.kt)("p",null,"To start a server, you need to build it first. Use ",(0,o.kt)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"import com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\n\nServerBuilder sb = Server.builder();\n// TODO: Configure your server here.\nServer server = sb.build();\nCompletableFuture<Void> future = server.start();\n// Wait until the server is ready.\nfuture.join();\n")),(0,o.kt)("h2",{id:"ports",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#ports","aria-label":"ports permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Ports"),(0,o.kt)("p",null,"To serve anything, you need to specify which TCP/IP port you want to bind onto:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"ServerBuilder sb = Server.builder();\n// Configure an HTTP port.\nsb.http(8080);\n// TODO: Add your services here.\nServer server = sb.build();\nCompletableFuture<Void> future = server.start();\nfuture.join();\n")),(0,o.kt)("h2",{id:"services",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#services","aria-label":"services permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Services"),(0,o.kt)("p",null,"Even if we opened a port, it's of no use if we didn't bind any services to them. Let's add some:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.HttpRequest;\nimport com.linecorp.armeria.common.HttpResponse;\nimport com.linecorp.armeria.common.HttpStatus;\nimport com.linecorp.armeria.common.MediaType;\nimport com.linecorp.armeria.common.MediaTypeNames;\nimport com.linecorp.armeria.common.QueryParams;\n\nimport com.linecorp.armeria.server.AbstractHttpService;\nimport com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport com.linecorp.armeria.server.ServiceRequestContext;\nimport com.linecorp.armeria.server.annotation.Consumes;\nimport com.linecorp.armeria.server.annotation.Default;\nimport com.linecorp.armeria.server.annotation.Get;\nimport com.linecorp.armeria.server.annotation.Param;\nimport com.linecorp.armeria.server.annotation.Post;\nimport com.linecorp.armeria.server.annotation.Produces;\nimport com.linecorp.armeria.server.logging.LoggingService;\n\nServerBuilder sb = Server.builder();\nsb.http(8080);\n\n// Add a simple \'Hello, world!\' service.\nsb.service("/", (ctx, req) -> HttpResponse.of("Hello, world!"));\n\n// Using path variables:\nsb.service("/greet/{name}", new AbstractHttpService() {\n    @Override\n    protected HttpResponse doGet(ServiceRequestContext ctx, HttpRequest req) {\n        String name = ctx.pathParam("name");\n        return HttpResponse.of("Hello, %s!", name);\n    }\n}.decorate(LoggingService.newDecorator())); // Enable logging\n\n// Using an annotated service object:\nsb.annotatedService(new Object() {\n    @Get("/greet2/:name") // `:name` style is also available\n    public HttpResponse greet(@Param("name") String name) {\n        return HttpResponse.of("Hello, %s!", name);\n    }\n});\n\n// Just in case your name contains a slash:\nsb.serviceUnder("/greet3", (ctx, req) -> {\n    String path = ctx.mappedPath();  // Get the path without the prefix (\'/greet3\')\n    String name = path.substring(1); // Strip the leading slash (\'/\')\n    return HttpResponse.of("Hello, %s!", name);\n});\n\n// Using an annotated service object:\nsb.annotatedService(new Object() {\n    @Get("regex:^/greet4/(?<name>.*)$")\n    public HttpResponse greet(@Param("name") String name) {\n        return HttpResponse.of("Hello, %s!", name);\n    }\n});\n\n// Using a query parameter (e.g. /greet5?name=alice) on an annotated service object:\nsb.annotatedService(new Object() {\n    @Get("/greet5")\n    public HttpResponse greet(@Param("name") String name,\n                              @Param("title") @Default("Mr.") String title) {\n        // "Mr." is used by default if there is no title parameter in the request.\n        return HttpResponse.of("Hello, %s %s!", title, name);\n    }\n});\n\n// Getting a map of query parameters on an annotated service object:\nsb.annotatedService(new Object() {\n    @Get("/greet6")\n    public HttpResponse greet(QueryParams params) {\n        return HttpResponse.of("Hello, %s!", params.get("name"));\n    }\n});\n\n// Using media type negotiation:\nsb.annotatedService(new Object() {\n    @Get("/greet7")\n    @Produces(MediaTypeNames.JSON_UTF_8)\n    public HttpResponse greetGet(@Param("name") String name) {\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               "{\\"name\\":\\"%s\\"}", name);\n    }\n\n    @Post("/greet7")\n    @Consumes(MediaTypeNames.FORM_DATA)\n    public HttpResponse greetPost(@Param("name") String name) {\n        return HttpResponse.of(HttpStatus.OK);\n    }\n});\n\nServer server = sb.build();\nCompletableFuture<Void> future = server.start();\nfuture.join();\n')),(0,o.kt)("p",null,"As described in the example, ",(0,o.kt)("inlineCode",{parentName:"p"},"service()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"serviceUnder()")," perform an exact match and a prefix match\non a request path respectively. ",(0,o.kt)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder")," also provides advanced path mapping such as regex and\nglob pattern matching."),(0,o.kt)("p",null,"Also, we decorated the second service using ",(0,o.kt)("a",{parentName:"p",href:"type://LoggingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/logging/LoggingService.html"},"type://LoggingService"),", which logs all requests and responses.\nYou might be interested in decorating a service using other decorators, for example to gather metrics."),(0,o.kt)("p",null,"You can also use an arbitrary object that's annotated by the ",(0,o.kt)("a",{parentName:"p",href:"type://@Path:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Path.html"},"type://@Path")," annotation\nusing ",(0,o.kt)("inlineCode",{parentName:"p"},"annotatedService()"),"."),(0,o.kt)("h2",{id:"path-patterns",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#path-patterns","aria-label":"path patterns permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Path patterns"),(0,o.kt)("p",null,"You can use the following path patterns to map an HTTP request path to a service or a decorator."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"th"},"Pattern")),(0,o.kt)("th",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"th"},"Example")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},"Exact match")),(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},(0,o.kt)("inlineCode",{parentName:"p"},"/foo/bar")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"exact:/foo/bar")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},"Curly-brace style path variables")),(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},(0,o.kt)("inlineCode",{parentName:"p"},"/users/{userId}")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},"Colon style path variables")),(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},(0,o.kt)("inlineCode",{parentName:"p"},"/list/:productType/by/:ordering")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},"Prefix match")),(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},(0,o.kt)("inlineCode",{parentName:"p"},"prefix:/files")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},"Glob pattern")),(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},(0,o.kt)("inlineCode",{parentName:"p"},"glob:/*/downloads/**")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},"Regular expression")),(0,o.kt)("td",{parentName:"tr",colspan:1,rowspan:1},(0,o.kt)("p",{parentName:"td"},(0,o.kt)("inlineCode",{parentName:"p"},"regex:^/files/(?<filePath>.\\*)$")))))),(0,o.kt)(c,{mdxType:"Tip"},"By default, colon style path variables assume that a path segment starting with a ':' is a parameter name. If the colon starting a path segment should signify a literal, you can prefix the ':' with '\\\\'.",(0,o.kt)("p",null,"e.g."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/foo/\\\\:colon:")," will match a request with path ",(0,o.kt)("inlineCode",{parentName:"li"},"/foo/:colon:"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Note that only the first colon starting the segment should be escaped."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/foo/:colon")," will match a request with path ",(0,o.kt)("inlineCode",{parentName:"li"},"/foo/bar"),". The path parameter 'colon' will be bound to 'bar'."))),(0,o.kt)("h2",{id:"per-service-configuration",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#per-service-configuration","aria-label":"per service configuration permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Per service configuration"),(0,o.kt)("p",null,"The examples above are just mapping the path of an HTTP request on a service. If you want to set configuration\nfor a specific service, you can use fluent API:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ServerBuilder sb = Server.builder();\nsb.route()                    // Configure the service.\n  .post("/foo/bar")           // Matched when the path is "/foo/bar" and the method is POST.\n  .consumes(MediaType.JSON)   // Matched when the "content-type" header is "application/json".\n  .produces(MediaType.JSON)   // Matched when the "accept" headers is "application/json".\n  .matchesHeaders("baz=qux")  // Matched when the "baz" header is "qux".\n  .matchesParams("quux=quuz") // Matched when the "quux" parameter is "quuz".\n  .requestTimeoutMillis(5000)\n  .maxRequestLength(8192)\n  .verboseResponses(true)\n  .build((ctx, req) -> HttpResponse.of(OK)); // Should call to finish and return to the ServerBuilder.\n')),(0,o.kt)("p",null,"Or use a ",(0,o.kt)("inlineCode",{parentName:"p"},"Consumer"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.HttpMethod;\n\nServerBuilder sb = Server.builder();\nsb.withRoute(builder -> builder.path("/baz") // Matched when the path is "/baz".\n                               // Matched when the method is GET or POST.\n                               .methods(HttpMethod.GET, HttpMethod.POST)\n                               ...\n                               .build((ctx, req) -> HttpResponse.of(OK)));\n')),(0,o.kt)("h2",{id:"ssltls",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#ssltls","aria-label":"ssltls permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"SSL/TLS"),(0,o.kt)("p",null,"You can also add an HTTPS port with your certificate and its private key files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ServerBuilder sb = Server.builder();\nsb.https(8443)\n  .tls(new File("certificate.crt"), new File("private.key"), "myPassphrase");\n...\n')),(0,o.kt)("h2",{id:"proxy-protocol",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#proxy-protocol","aria-label":"proxy protocol permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"PROXY protocol"),(0,o.kt)("p",null,"Armeria supports both text (v1) and binary (v2) versions of\n",(0,o.kt)("a",{parentName:"p",href:"https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt"},"PROXY protocol"),".\nIf your server is behind a load balancer such as ",(0,o.kt)("a",{parentName:"p",href:"https://www.haproxy.org/"},"HAProxy")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/elasticloadbalancing/"},"AWS ELB"),", you could consider enabling the PROXY protocol:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"import static com.linecorp.armeria.common.SessionProtocol.HTTP;\nimport static com.linecorp.armeria.common.SessionProtocol.HTTPS;\nimport static com.linecorp.armeria.common.SessionProtocol.PROXY;\n\nServerBuilder sb = Server.builder();\nsb.port(8080, PROXY, HTTP);\nsb.port(8443, PROXY, HTTPS);\n...\n")),(0,o.kt)("h2",{id:"serving-http-and-https-on-the-same-port",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#serving-http-and-https-on-the-same-port","aria-label":"serving http and https on the same port permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Serving HTTP and HTTPS on the same port"),(0,o.kt)("p",null,"For whatever reason, you may have to serve both HTTP and HTTPS on the same port. Armeria is one of the few\nimplementations that supports port unification:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"ServerBuilder sb = Server.builder();\nsb.port(8888, HTTP, HTTPS);\n// Enable PROXY protocol, too.\nsb.port(9999, PROXY, HTTP, HTTPS);\n...\n")),(0,o.kt)("h2",{id:"virtual-hosts",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#virtual-hosts","aria-label":"virtual hosts permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Virtual hosts"),(0,o.kt)("p",null,"Use ",(0,o.kt)("a",{parentName:"p",href:"type://ServerBuilder#virtualHost(String):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html#virtualHost(java.lang.String)"},"type://ServerBuilder#virtualHost(String)")," to configure ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Virtual_hosting#Name-based"},"a name-based virtual host"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ServerBuilder sb = Server.builder();\n// Configure foo.com.\nsb.virtualHost("foo.com")\n  .service(...)\n  .tls(...)\n  .and() // Configure *.bar.com.\n  .virtualHost("*.bar.com")\n  .service(...)\n  .tls(...)\n  .and() // Configure the default virtual host.\n  .service(...)\n  .tls(...);\n...\n')),(0,o.kt)("h2",{id:"getting-an-ip-address-of-a-client-who-initiated-a-request",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#getting-an-ip-address-of-a-client-who-initiated-a-request","aria-label":"getting an ip address of a client who initiated a request permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Getting an IP address of a client who initiated a request"),(0,o.kt)("p",null,"You may want to get an IP address of a client who initiated a request in your service. In that case,\nyou can use ",(0,o.kt)("a",{parentName:"p",href:"type://ServiceRequestContext#clientAddress():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#clientAddress()"},"type://ServiceRequestContext#clientAddress()"),". But you need to configure\nyour ",(0,o.kt)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder")," before doing that:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.util.InetAddressPredicates;\nimport com.linecorp.armeria.server.ClientAddressSource;\n\nServerBuilder sb = Server.builder();\n\n// Configure a filter which evaluates whether an address of a remote endpoint is\n// trusted. If unspecified, no remote endpoint is trusted.\n// e.g. servers who have an IP address in 10.0.0.0/8.\nsb.clientAddressTrustedProxyFilter(InetAddressPredicates.ofCidr("10.0.0.0/8"));\n\n// Configure a filter which evaluates whether an address can be used as\n// a client address. If unspecified, any address would be accepted.\n// e.g. public addresses\nsb.clientAddressFilter(address -> !address.isSiteLocalAddress());\n\n// Configure a list of sources which are used to determine where to look for\n// the client address, in the order of preference. If unspecified, \'Forwarded\',\n// \'X-Forwarded-For\' and the source address of a PROXY protocol header would be used.\nsb.clientAddressSources(ClientAddressSource.ofHeader(HttpHeaderNames.FORWARDED),\n                        ClientAddressSource.ofHeader(HttpHeaderNames.X_FORWARDED_FOR),\n                        ClientAddressSource.ofProxyProtocol());\n\n// Get an IP address of a client who initiated a request.\nsb.service("/", (ctx, res) ->\n        HttpResponse.of("A request was initiated by %s!", \n                        ctx.clientAddress().getHostAddress()));\n')),(0,o.kt)("h2",{id:"see-also",style:{position:"relative"}},(0,o.kt)("a",{parentName:"h2",href:"#see-also","aria-label":"see also permalink",className:"anchor before"},(0,o.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/server-decorator"},"Decorating a service"))))}h.isMDXComponent=!0},28819:function(e,t,a){a.d(t,{Z:function(){return s}});var r=a(25444),n=a(67294),o=JSON.parse('{"root":["index","setup"],"Useful links":{"Tutorials":"/tutorials","Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-graphql","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse","server-service-registration","server-multipart","server-timeouts"],"Client":["client-http","client-thrift","client-grpc","client-factory","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-streaming-backpressure","advanced-structured-logging-kafka","advanced-metrics","advanced-unit-testing","advanced-production-checklist","advanced-saml","advanced-spring-boot-integration","advanced-spring-webflux-integration","advanced-dropwizard-integration","advanced-kotlin","advanced-scala","advanced-scalapb","advanced-flags-provider","advanced-zipkin","advanced-client-interoperability"]}'),i=a(46731),s=function(e){var t=(0,r.useStaticQuery)("1217743243").allMdx.nodes;return n.createElement(i.Z,Object.assign({},e,{candidateMdxNodes:t,index:o,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}}}]);
//# sourceMappingURL=component---src-pages-docs-server-basics-mdx-289cb6cac8c2fdd01d65.js.map