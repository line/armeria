// 0.10, 0.11, 0.12 and 0.13 are all ABI and API compatible with each other,
// so we do not publish artifacts like 'armeria-thrift0.10' but just run tests
// to make sure the classes generated by ':thrift0.13' works with the classes
// compiled with an older version of libthrift.
//
// See also: ../thrift0.9/build.gradle

dependencies {
    // Use the classes compiled with the latest libthrift,
    // but use an older version for test classes.
    testImplementation(project(':thrift0.13')) {
        exclude group: 'org.apache.thrift', module: 'libthrift'
    }
    testImplementation libs.thrift012

    // thrift api depends on httpclient4
    testImplementation libs.apache.httpclient4

    // Jetty, for testing TServlet interoperability.
    testImplementation libs.jetty94.webapp
    testImplementation libs.jetty94.http2.server

    // Dropwizard and Prometheus, for testing metrics integration
    testImplementation libs.dropwizard.metrics.core
    testImplementation libs.micrometer.prometheus
    testImplementation libs.prometheus

    // micrometer tracing
    testImplementation (libs.micrometer.tracing.integration.test) {
        exclude group: "org.mockito"
    }
    testImplementation libs.brave.instrumentation.http.tests
}

tasks.processResources.from "${rootProject.projectDir}/thrift/thrift0.13/src/main/resources"

// Use the test sources from ':thrift0.13'.
// NB: We should never add these directories using the 'sourceSets' directive because that will make
//     them added to more than one project and having a source directory with more than one output directory
//     will confuse IDEs such as IntelliJ IDEA.
tasks.compileTestJava.source "${rootProject.projectDir}/thrift/thrift0.13/src/test/java"
tasks.processTestResources.from "${rootProject.projectDir}/thrift/thrift0.13/src/test/resources"

// Use the old compiler.
def thriftFullVersion = libs.thrift012.get().versionConstraint.requiredVersion
ext {
    thriftVersion = thriftFullVersion.substring(0, thriftFullVersion.lastIndexOf('.'))
}

// Disable checkstyle because it's checked by ':thrift0.13'.
tasks.withType(Checkstyle) {
    onlyIf { false }
}
