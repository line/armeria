.. _`Java 8`: http://java.oracle.com/
.. _`Netty 4.1`: http://netty.io/
.. _`HTTP/2`: https://http2.github.io/
.. _`Thrift`: http://thrift.apache.org/
.. _`Apache License 2.0`: https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)
.. _`LINE Corporation`: http://linecorp.com/en/
.. _`the introductory slides and case study`: https://speakerdeck.com/trustin/armeria-lines-next-generation-rpc-layer
.. _`HTTP/2 connection preface`: https://tools.ietf.org/html/rfc7540#section-3.5
.. _`traditional HTTP/1 upgrade request`: https://tools.ietf.org/html/rfc7540#section-3.2
.. _`THttpClient`: https://github.com/apache/thrift/blob/0.9.3/lib/javame/src/org/apache/thrift/transport/THttpClient.java
.. _`BoringSSL`: https://boringssl.googlesource.com/boringssl/
.. _`Zipkin`: http://zipkin.io/

Welcome to Armeria
==================
*Armeria* is an open-source asynchronous RPC/API client/server library built on top of `Java 8`_, `Netty 4.1`_,
`HTTP/2`_, and `Thrift`_. Its primary goal is to help engineers build high-performance asynchronous Thrift
microservices that use HTTP/2 as a session layer protocol, although it is designed to be protocol-agnostic and
highly extensible (for example, you can serve a directory of static files via HTTP/2 and run Java EE web
applications).

It is open-sourced and licensed under `Apache License 2.0`_ by `LINE Corporation`_, who uses it in production.

Want a quick tour?
------------------
Check out `the introductory slides and case study`_.

.. raw:: html

    <div style="max-width: 512px; margin-bottom: 1em"><script async class="speakerdeck-embed" data-id="8d645c29ce33400e8360e61fd0250f91" data-ratio="1.6" src="//speakerdeck.com/assets/embed.js"></script></div>

Features
--------

HTTP/2
^^^^^^
- Supports HTTP/2 on both TLS and cleartext connections
- Supports protocol upgrade via both `HTTP/2 connection preface`_ and `traditional HTTP/1 upgrade request`_
- Fully compatible with existing HTTP/1 servers

Essential features for building microservices
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Metrics
- Circuit breaker
- Distributed call tracing via Zipkin

Even higher performance on Linux
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- JNI-based socket I/O
- `BoringSSL`_-based TLS connections

Completely asynchronous
^^^^^^^^^^^^^^^^^^^^^^^
- Asynchronous connection pool ensures your application never blocks even on pool exhaustion.
- Domain name lookups are also fully asynchronous thanks to Netty's asynchronous domain name resolver.

Compatibility with existing Thrift implementations
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Works with `THttpClient`_, the official Thrift-over-HTTP client
- Works with the code generated by the official Thrift IDL compiler
- Automatically upgrades to HTTP/2 when used with the Armeria client

Compatibility with existing Java EE web applications
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- Runs any Java EE web applications on the same TCP/IP port
- Your Java EE web application speaks HTTP/2!

Read more
---------
.. toctree::
    :maxdepth: 2

    setup
    server
    client
    Release notes <https://github.com/line/armeria/releases>
    API documentation <apidocs/index.html#://>
    Source cross-reference <xref/index.html#://>
    Fork me at GitHub <https://github.com/line/armeria>
    Contributing <https://github.com/line/armeria/blob/master/CONTRIBUTING.md>
