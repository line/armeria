{"version":3,"file":"component---src-pages-docs-server-graphql-mdx-a2ba7ced637cf8017970.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/docs/server-graphql.mdx","webpack://armeria-site/./src/layouts/docs.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Running a GraphQL service\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Tip = makeShortcode(\"Tip\");\nconst RequiredDependencies = makeShortcode(\"RequiredDependencies\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"running-a-graphql-service\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#running-a-graphql-service\",\n        \"aria-label\": \"running a graphql service permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Running a GraphQL service`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#graphqlservice\"\n        }}>{`GraphqlService`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#blocking-service-implementation\"\n        }}>{`Blocking service implementation`}</a></li>\n    </ul>\n    <Tip mdxType=\"Tip\">\n      <p>{`Visit `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/line/armeria-examples\"\n        }}>{`armeria-examples`}</a>{` to find a fully working example.`}</p>\n    </Tip>\n    <p>{`First, You need the `}<inlineCode parentName=\"p\">{`armeria-graphql`}</inlineCode>{` dependency:`}</p>\n    <RequiredDependencies boms={[{\n      groupId: 'com.linecorp.armeria',\n      artifactId: 'armeria-bom'\n    }]} dependencies={[{\n      groupId: 'com.linecorp.armeria',\n      artifactId: 'armeria-graphql'\n    }]} mdxType=\"RequiredDependencies\" />\n    <p>{`Let's assume we have the following `}<a parentName=\"p\" {...{\n        \"href\": \"https://graphql.org/learn/schema/\"\n      }}>{`GraphQL Schema`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`type Query {\n  user(id: ID): User\n}\n\ntype User {\n  id: ID\n  name: String\n}\n`}</code></pre>\n    <p>{`The schema describes that if a client requests a `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{` data using the `}<inlineCode parentName=\"p\">{`ID`}</inlineCode>{` field, the GraphQL server will\nreturn the `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{` data. The GraphQL engine uses a `}<a parentName=\"p\" {...{\n        \"href\": \"https://javadoc.io/doc/com.graphql-java/graphql-java/latest/graphql/schema/DataFetcher.html\"\n      }}>{`DataFetcher`}</a>{`\nto resolve the ID and fetch the corresponding object. For the sake of simplicity, let's implement\n`}<inlineCode parentName=\"p\">{`UserDataFetcher`}</inlineCode>{` that stores `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{`s in a `}<inlineCode parentName=\"p\">{`Map`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import graphql.schema.DataFetcher;\nimport graphql.schema.DataFetchingEnvironment;\n\nclass UserDataFetcher implements DataFetcher<User> {\n\n    private final Map<String, User> data = Map.of(\"1\", new User(\"1\", \"hero\"),\n                                                  \"2\", new User(\"2\", \"human\"),\n                                                  \"3\", new User(\"3\", \"droid\"));\n\n    @Override\n    public User get(DataFetchingEnvironment environment) throws Exception {\n        final String id = environment.getArgument(\"id\");\n        return data.get(id);\n    }\n}\n`}</code></pre>\n    <Tip mdxType=\"Tip\">\n      <p>{`Please note that this is entirely based on `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.graphql-java.com/\"\n        }}>{`graphql-java`}</a>{`.`}</p>\n    </Tip>\n    <h2 {...{\n      \"id\": \"graphqlservice\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#graphqlservice\",\n        \"aria-label\": \"graphqlservice permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a><inlineCode parentName=\"h2\">{`GraphqlService`}</inlineCode></h2>\n    <p>{`Once you've finished the implementation of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://javadoc.io/doc/com.graphql-java/graphql-java/latest/graphql/schema/DataFetcher.html\"\n      }}>{`DataFetcher`}</a>{`, you need to build a `}<a parentName=\"p\" {...{\n        \"href\": \"type://GraphqlService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/graphql/GraphqlService.html\"\n      }}>{`type://GraphqlService`}</a>{` using\na `}<a parentName=\"p\" {...{\n        \"href\": \"type://GraphqlServiceBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/graphql/GraphqlServiceBuilder.html\"\n      }}>{`type://GraphqlServiceBuilder`}</a>{` and add it to the `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html\"\n      }}>{`type://ServerBuilder`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport com.linecorp.armeria.server.graphql.GraphqlService;\n\nServerBuilder sb = Server.builder();\n...\nsb.service(\"/graphql\",\n           GraphqlService.builder()\n                         .runtimeWiring(c -> {\n                            c.type(\"Query\",\n                                   typeWiring -> typeWiring.dataFetcher(\"user\", new UserDataFetcher()));\n                         })\n                         .build());\n...\nServer server = sb.build();\nserver.start();\n`}</code></pre>\n    <p>{`We used `}<a parentName=\"p\" {...{\n        \"href\": \"https://javadoc.io/doc/com.graphql-java/graphql-java/latest/graphql/schema/idl/RuntimeWiring.html\"\n      }}>{`RuntimeWiring`}</a>{` to wire the type with DataFetcher. Please see `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.graphql-java.com/documentation/master/schema/#creating-a-schema-using-the-sdl\"\n      }}>{`Creating a schema using the SDL`}</a>{` to find more wiring examples.`}</p>\n    <h2 {...{\n      \"id\": \"blocking-service-implementation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#blocking-service-implementation\",\n        \"aria-label\": \"blocking service implementation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Blocking service implementation`}</h2>\n    <p>{`Armeria does not run service logic in a separate thread pool by default. If your service implementation\nrequires blocking, either run the individual blocking logic in a thread pool, or set\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://GraphqlServiceBuilder#useBlockingTaskExecutor(boolean):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/graphql/GraphqlServiceBuilder.html#useBlockingTaskExecutor(boolean)\"\n      }}>{`type://GraphqlServiceBuilder#useBlockingTaskExecutor(boolean)`}</a>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` so the service runs in\nall service methods and lifecycle callbacks.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ServerBuilder sb = Server.builder();\nsb.service(\"/graphql\",\n           GraphqlService.builder()\n                         .runtimeWiring(c -> {\n                            c.type(\"Query\",\n                                   typeWiring -> typeWiring.dataFetcher(\"user\", new UserDataFetcher()));\n                         })\n                         // All service methods will be run within\n                         // the blocking executor.\n                         .useBlockingTaskExecutor(true)\n                         .build());\n`}</code></pre>\n    <Tip mdxType=\"Tip\">\n      <p>{`You can wrap a `}<a parentName=\"p\" {...{\n          \"href\": \"https://javadoc.io/doc/com.graphql-java/graphql-java/latest/graphql/schema/DataFetcher.html\"\n        }}>{`DataFetcher`}</a>{` using `}<a parentName=\"p\" {...{\n          \"href\": \"https://javadoc.io/doc/com.graphql-java/graphql-java/latest/graphql/schema/AsyncDataFetcher.html\"\n        }}>{`AsyncDataFetcher`}</a>{` to run it asynchronously.`}</p>\n    </Tip>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n"],"names":["pageTitle","_frontmatter","makeShortcode","name","props","console","warn","mdx","Tip","RequiredDependencies","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","parentName","boms","groupId","artifactId","dependencies","isMDXComponent","candidateMdxNodes","useStaticQuery","allMdx","nodes","React","MdxLayout","index","docsIndex","prefix","pageTitleSuffix"],"sourceRoot":""}