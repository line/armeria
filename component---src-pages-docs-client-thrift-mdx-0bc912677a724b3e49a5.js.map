{"version":3,"file":"component---src-pages-docs-client-thrift-mdx-0bc912677a724b3e49a5.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/docs/client-thrift.mdx","webpack://armeria-site/./src/layouts/docs.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Calling a Thrift service\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"calling-a-thrift-service\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#calling-a-thrift-service\",\n        \"aria-label\": \"calling a thrift service permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Calling a Thrift service`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#see-also\"\n        }}>{`See also`}</a></li>\n    </ul>\n    <Tip mdxType=\"Tip\">\n      <p>{`Visit `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/line/armeria-examples\"\n        }}>{`armeria-examples`}</a>{` to find a fully working example.`}</p>\n    </Tip>\n    <p>{`Let's assume we have the following Thrift IDL, served at `}<inlineCode parentName=\"p\">{`http://127.0.0.1:8080/hello`}</inlineCode>{`, just like what we\nused in `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-thrift\"\n      }}>{`Running a Thrift service`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-protobuf\"\n      }}>{`namespace java com.example.thrift.hello\n\nservice HelloService {\n    string hello(1:string name)\n}\n`}</code></pre>\n    <p>{`Making a call starts from creating a client:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.client.thrift.ThriftClients;\n\n// Use the tbinary format by default.\nHelloService.Iface helloService = ThriftClients.newClient(\n    \"http://127.0.0.1:8080/hello\",\n    HelloService.Iface.class); // or AsyncIface.class\n\nString greeting = helloService.hello(\"Armerian World\");\nassert greeting.equals(\"Hello, Armerian World!\");\n`}</code></pre>\n    <p>{`Note that if a serialization format is unspecified, `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftSerializationFormats#BINARY:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#BINARY\"\n      }}>{`type://ThriftSerializationFormats#BINARY`}</a>{` is used by\ndefault. You can also specify one of `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftSerializationFormats#BINARY:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#BINARY\"\n      }}>{`type://ThriftSerializationFormats#BINARY`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftSerializationFormats#COMPACT:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#COMPACT\"\n      }}>{`type://ThriftSerializationFormats#COMPACT`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftSerializationFormats#JSON:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#JSON\"\n      }}>{`type://ThriftSerializationFormats#JSON`}</a>{`\nand `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftSerializationFormats#TEXT:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#TEXT\"\n      }}>{`type://ThriftSerializationFormats#TEXT`}</a>{`\nusing `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftClientBuilder#serializationFormat(SerializationFormat):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/thrift/ThriftClientBuilder.html#serializationFormat(com.linecorp.armeria.common.SerializationFormat)\"\n      }}>{`type://ThriftClientBuilder#serializationFormat(SerializationFormat)`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.thrift.ThriftSerializationFormats;\n\nHelloService.Iface helloService =\n    ThriftClient.builder(\"http://127.0.0.1:8080\")\n                .path(\"/hello\")\n                .serializationFormat(ThriftSerializationFormats.JSON)\n                .build(HelloService.Iface.class); // or AsyncIface.class\n`}</code></pre>\n    <p>{`Since we specified `}<inlineCode parentName=\"p\">{`HelloService.Iface`}</inlineCode>{` as the client type, `}<inlineCode parentName=\"p\">{`ThriftClients.newClient()`}</inlineCode>{` will return a\nsynchronous client implementation. If we specified `}<inlineCode parentName=\"p\">{`HelloService.AsyncIface`}</inlineCode>{`, the calling code would have looked\nlike the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.thrift.ThriftFuture;\nimport com.linecorp.armeria.common.util.CompletionActions;\nimport com.linecorp.armeria.client.thrift.ThriftClients;\n\nHelloService.AsyncIface helloService = \n    ThriftClients.newClient(\"http://127.0.0.1:8080/hello\",\n                            HelloService.AsyncIface.class);\n\nThriftFuture<String> future = new ThriftFuture<String>();\nhelloService.hello(\"Armerian World\", future);\n\nfuture.thenAccept(response -> assert response.equals(\"Hello, Armerian World!\"))\n      .exceptionally(cause -> {\n          cause.printStackTrace();\n          return null;\n      });\n\n// You can also wait until the call is finished.\nString reply = future.get();\n`}</code></pre>\n    <p>{`The example above introduces a new class called `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftFuture:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftFuture.html\"\n      }}>{`type://ThriftFuture`}</a>{`. It is a subtype of Java 8\nCompletableFuture_ that implements Thrift `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apache/thrift/blob/bd964c7f3460c308161cb6eb90583874a7d8d848/lib/java/src/org/apache/thrift/async/AsyncMethodCallback.java#L22\"\n      }}>{`AsyncMethodCallback`}</a>{`. Once passed as a callback of an asynchronous\nThrift call, `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftFuture:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftFuture.html\"\n      }}>{`type://ThriftFuture`}</a>{` will complete itself when the reply is received or the call\nfails. You'll find it way more convenient to consume the reply than `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apache/thrift/blob/bd964c7f3460c308161cb6eb90583874a7d8d848/lib/java/src/org/apache/thrift/async/AsyncMethodCallback.java#L22\"\n      }}>{`AsyncMethodCallback`}</a>{` thanks to the rich set\nof methods provided by `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/CompletableFuture.html\"\n      }}>{`CompletableFuture`}</a>{`.`}</p>\n    <p>{`You can also use the builder pattern for client construction:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.HttpRequest;\nimport com.linecorp.armeria.common.HttpResponse;\n\nHelloService.Iface helloService =\n    ThriftClients.builder(\"http://127.0.0.1:8080\")\n                 .path(\"/hello\")\n                 .responseTimeoutMillis(10000)\n                 .decorator(LoggingClient.newDecorator())\n                 .build(HelloService.Iface.class); // or AsyncIface.class\n\nString greeting = helloService.hello(\"Armerian World\");\nassert greeting.equals(\"Hello, Armerian World!\");\n`}</code></pre>\n    <p>{`As you might have noticed already, we decorated the client using `}<a parentName=\"p\" {...{\n        \"href\": \"type://LoggingClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/logging/LoggingClient.html\"\n      }}>{`type://LoggingClient`}</a>{`, which logs all\nrequests and responses. You might be interested in decorating a client using other decorators, for example\nto gather metrics. Please also refer to `}<a parentName=\"p\" {...{\n        \"href\": \"type://ThriftClientBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/thrift/ThriftClientBuilder.html\"\n      }}>{`type://ThriftClientBuilder`}</a>{` for more configuration options.`}</p>\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/server-thrift\"\n        }}>{`Running a Thrift service`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/client-decorator\"\n        }}>{`Decorating a client`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/client-custom-http-headers\"\n        }}>{`Sending custom HTTP headers`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n"],"names":["name","pageTitle","_frontmatter","Tip","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","parentName","isMDXComponent","candidateMdxNodes","useStaticQuery","allMdx","nodes","React","MdxLayout","index","docsIndex","prefix","pageTitleSuffix"],"sourceRoot":""}