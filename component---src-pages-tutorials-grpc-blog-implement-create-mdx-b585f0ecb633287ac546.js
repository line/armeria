"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[3465],{71829:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return p},default:function(){return v},pageTitle:function(){return s}});var r,n=a(63366),i=(a(67294),a(64983)),o=a(89791),l=["components"],s="Implementing CREATE operation",p={},c=(r="TutorialSteps",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),m={pageTitle:s,_frontmatter:p},d=o.Z;function v(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)(d,Object.assign({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"implementing-create-operation",style:{position:"relative"}},(0,i.kt)("a",{parentName:"h1",href:"#implementing-create-operation","aria-label":"implementing create operation permalink",className:"anchor before"},(0,i.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Implementing CREATE operation"),(0,i.kt)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#what-you-need"},"What you need")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1-implement-server-side"},"1. Implement server-side")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#2-register-a-serverextension"},"2. Register a ServerExtension")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#3-set-up-a-client-for-testing"},"3. Set up a client for testing")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#4-test-creating-a-blog-post"},"4. Test creating a blog post")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#whats-next"},"What's next"))),(0,i.kt)("p",null,"In the previous step, we defined service methods.\nIn this step, we'll implement one of the service methods to create a blog post and again, try making a call to a service method.\nAlso, we'll use Armeria's ",(0,i.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension")," for testing."),(0,i.kt)(c,{current:3,mdxType:"TutorialSteps"}),(0,i.kt)("h2",{id:"what-you-need",style:{position:"relative"}},(0,i.kt)("a",{parentName:"h2",href:"#what-you-need","aria-label":"what you need permalink",className:"anchor before"},(0,i.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What you need"),(0,i.kt)("p",null,"You need to have the following files obtained from previous steps.\nYou can always ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/line/armeria-examples/tree/main/tutorials/grpc"},"download")," the full version, instead of creating one yourself."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tutorials/grpc/blog/define-service#6-compile-the-proto-file"},"Generated Java code")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BlogService.java")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Main.java")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BlogServiceTest.java"))),(0,i.kt)("h2",{id:"1-implement-server-side",style:{position:"relative"}},(0,i.kt)("a",{parentName:"h2",href:"#1-implement-server-side","aria-label":"1 implement server side permalink",className:"anchor before"},(0,i.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"1. Implement server-side"),(0,i.kt)("p",null,"Let's implement a service method ",(0,i.kt)("inlineCode",{parentName:"p"},"createBlogPost()")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"BlogService")," class."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create an ID generator to issue temporary blog post IDs and a map to contain blogs posts."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java",filename:"BlogService.java"},"import java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.atomic.AtomicInteger;\n\npublic final class BlogService extends BlogServiceGrpc.BlogServiceImplBase {\n  private final AtomicInteger idGenerator = new AtomicInteger();\n  private final Map<Integer, BlogPost> blogPosts = new ConcurrentHashMap<>();\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add a service method, ",(0,i.kt)("inlineCode",{parentName:"p"},"createBlogPost()"),":"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Create a ",(0,i.kt)("inlineCode",{parentName:"li"},"BlogPost")," object with request parameters."),(0,i.kt)("li",{parentName:"ol"},"Save the post information in the map."),(0,i.kt)("li",{parentName:"ol"},"Return the information of the blog post created.")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java",filename:"BlogService.java"},"import java.time.Instant;\nimport io.grpc.stub.StreamObserver;\n\nfinal class BlogService extends BlogServiceGrpc.BlogServiceImplBase {\n  @Override\n  public void createBlogPost(CreateBlogPostRequest request, StreamObserver<BlogPost> responseObserver) {\n    final int id = idGenerator.getAndIncrement(); // Generate post ID\n    final Instant now = Instant.now();            // Get current time\n    final BlogPost updated = BlogPost.newBuilder()\n                     .setId(id)\n                     .setTitle(request.getTitle())\n                     .setContent(request.getContent())\n                     .setModifiedAt(now.toEpochMilli())\n                     .setCreatedAt(now.toEpochMilli())\n                     .build();\n    blogPosts.put(id, updated);\n    responseObserver.onNext(updated);\n    responseObserver.onCompleted();\n  }\n}\n")))),(0,i.kt)("h2",{id:"2-register-a-serverextension",style:{position:"relative"}},(0,i.kt)("a",{parentName:"h2",href:"#2-register-a-serverextension","aria-label":"2 register a serverextension permalink",className:"anchor before"},(0,i.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"2. Register a ServerExtension"),(0,i.kt)("p",null,"In the previous test code, we've connected directly to the server.\nThis time, let's use Armeria's ",(0,i.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension")," instead.\nThis approach automatically handles set-up and tear-down of a server for testing.\nNow we don't have to invoke the main method to set up a server before running our tests."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"BlogServiceTest")," class, remove the ",(0,i.kt)("inlineCode",{parentName:"p"},"connect()")," method to eliminate dependency on the main method."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},"public class BlogServiceTest {\n  ...\n  @Test\n  void connect() {...} // Remove this method\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Register a ",(0,i.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension")," as follows.\nNote that the service instance is added to the configuration."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},"import org.junit.jupiter.api.extension.RegisterExtension;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport com.linecorp.armeria.server.grpc.GrpcService;\nimport com.linecorp.armeria.testing.junit5.server.ServerExtension;\n\npublic class BlogServiceTest {\n  ...\n  @RegisterExtension\n  static final ServerExtension server = new ServerExtension() {\n    @Override\n    protected void configure(ServerBuilder sb) throws Exception {\n      sb.service(GrpcService.builder()\n                    // Add the service to the configuration\n                    .addService(new BlogService())\n                    .build());\n    }\n  };\n}\n")))),(0,i.kt)("h2",{id:"3-set-up-a-client-for-testing",style:{position:"relative"}},(0,i.kt)("a",{parentName:"h2",href:"#3-set-up-a-client-for-testing","aria-label":"3 set up a client for testing permalink",className:"anchor before"},(0,i.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"3. Set up a client for testing"),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"BlogServiceTest")," class, add a method as follows.\nThis will set up a client before executing each test cases."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},"import org.junit.jupiter.api.BeforeAll;\n\n@BeforeAll\nstatic void beforeAll() {\n  client = GrpcClients.newClient(server.httpUri(),\n                 BlogServiceBlockingStub.class);\n}\n")),(0,i.kt)("h2",{id:"4-test-creating-a-blog-post",style:{position:"relative"}},(0,i.kt)("a",{parentName:"h2",href:"#4-test-creating-a-blog-post","aria-label":"4 test creating a blog post permalink",className:"anchor before"},(0,i.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"4. Test creating a blog post"),(0,i.kt)("p",null,"Let's test if we can create a blog post."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"BlogServiceTest")," class, add a test method as follows."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceTest.java",filename:"BlogServiceTest.java"},'import static org.assertj.core.api.Assertions.assertThat;\nimport com.fasterxml.jackson.core.JsonProcessingException;\n\n@Test\nvoid createBlogPost() throws JsonProcessingException {\n  final CreateBlogPostRequest request = CreateBlogPostRequest.newBuilder()\n                   .setTitle("My first blog")\n                   .setContent("Hello Armeria!")\n                   .build();\n  final BlogPost response = client.createBlogPost(request);\n  assertThat(response.getTitle()).isEqualTo(request.getTitle());\n  assertThat(response.getContent()).isEqualTo(request.getContent());\n}\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the test case on your IDE or using Gradle."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./gradlew test\n")))),(0,i.kt)("p",null,"The service worked as expected if you see the test case passed."),(0,i.kt)("h2",{id:"whats-next",style:{position:"relative"}},(0,i.kt)("a",{parentName:"h2",href:"#whats-next","aria-label":"whats next permalink",className:"anchor before"},(0,i.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What's next"),(0,i.kt)("p",null,"In this step, we've implemented a method for creating a blog post.\nWe've also registered ",(0,i.kt)("a",{parentName:"p",href:"type://ServerExtension:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/testing/junit5/server/ServerExtension.html"},"type://ServerExtension")," to our test."),(0,i.kt)("p",null,"Next, at ",(0,i.kt)("a",{parentName:"p",href:"/tutorials/grpc/blog/implement-read"},"Step 4. Implement READ"),", we'll implement a READ operation to read a single post and also multiple posts."),(0,i.kt)(c,{current:3,mdxType:"TutorialSteps"}))}v.isMDXComponent=!0},89791:function(e,t,a){a.d(t,{Z:function(){return l}});var r=a(25444),n=a(67294),i=JSON.parse('{"root":["index"],"Useful links":{"User manual":"/docs","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"REST service":["rest/blog","rest/blog/create-server","rest/blog/prepare-data-object","rest/blog/add-services-to-server","rest/blog/implement-create","rest/blog/implement-read","rest/blog/implement-update","rest/blog/implement-delete"],"gRPC service":["grpc/blog","grpc/blog/define-service","grpc/blog/run-service","grpc/blog/implement-create","grpc/blog/implement-read","grpc/blog/implement-update","grpc/blog/implement-delete"],"Thrift service":["thrift/blog","thrift/blog/define-service","thrift/blog/run-service","thrift/blog/implement-create","thrift/blog/implement-read","thrift/blog/implement-update","thrift/blog/implement-delete"]}'),o=a(46731),l=function(e){var t=(0,r.useStaticQuery)("3172452987").allMdx.nodes;return n.createElement(o.Z,Object.assign({},e,{candidateMdxNodes:t,index:i,prefix:"tutorials",menuTitle:!0,pageTitleSuffix:"Armeria tutorial"}))}}}]);
//# sourceMappingURL=component---src-pages-tutorials-grpc-blog-implement-create-mdx-b585f0ecb633287ac546.js.map