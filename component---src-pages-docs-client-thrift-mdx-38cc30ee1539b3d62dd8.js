"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[9218],{53747:function(e,a,r){r.d(a,{A:function(){return l}});var t=r(41015),i=r(96540),n=JSON.parse('{"root":["index","setup"],"Useful links":{"Tutorials":"/tutorials","Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-graphql","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse","server-service-registration","server-multipart","server-timeouts"],"Client":["client-http","client-thrift","client-grpc","client-factory","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-streaming-backpressure","advanced-structured-logging-kafka","advanced-metrics","advanced-unit-testing","advanced-production-checklist","advanced-saml","advanced-athenz","advanced-spring-boot-integration","advanced-spring-webflux-integration","advanced-dropwizard-integration","advanced-kotlin","advanced-scala","advanced-scalapb","advanced-flags-provider","advanced-zipkin","advanced-client-interoperability"]}'),o=r(61023);var l=e=>{const{allMdx:{nodes:a}}=(0,t.useStaticQuery)("1217743243");return i.createElement(o.A,Object.assign({},e,{candidateMdxNodes:a,index:n,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}},72170:function(e,a,r){r.r(a),r.d(a,{_frontmatter:function(){return c},default:function(){return d},pageTitle:function(){return l}});var t=r(80045),i=(r(96540),r(28619)),n=r(53747);const o=["components"],l="Calling a Thrift service",c={},s=(m="Tip",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.yg)("div",e)});var m;const p={pageTitle:l,_frontmatter:c},h=n.A;function d(e){let{components:a}=e,r=(0,t.A)(e,o);return(0,i.yg)(h,Object.assign({},p,r,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"calling-a-thrift-service",style:{position:"relative"}},(0,i.yg)("a",{parentName:"h1",href:"#calling-a-thrift-service","aria-label":"calling a thrift service permalink",className:"anchor before"},(0,i.yg)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Calling a Thrift service"),(0,i.yg)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#see-also"},"See also"))),(0,i.yg)(s,{mdxType:"Tip"},(0,i.yg)("p",null,"Visit ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/line/armeria-examples"},"armeria-examples")," to find a fully working example.")),(0,i.yg)("p",null,"Let's assume we have the following Thrift IDL, served at ",(0,i.yg)("inlineCode",{parentName:"p"},"http://127.0.0.1:8080/hello"),", just like what we\nused in ",(0,i.yg)("a",{parentName:"p",href:"/docs/server-thrift"},"Running a Thrift service"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-protobuf"},"namespace java com.example.thrift.hello\n\nservice HelloService {\n    string hello(1:string name)\n}\n")),(0,i.yg)("p",null,"Making a call starts from creating a client:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.client.thrift.ThriftClients;\n\n// Use the tbinary format by default.\nHelloService.Iface helloService = ThriftClients.newClient(\n    "http://127.0.0.1:8080/hello",\n    HelloService.Iface.class); // or AsyncIface.class\n\nString greeting = helloService.hello("Armerian World");\nassert greeting.equals("Hello, Armerian World!");\n')),(0,i.yg)("p",null,"Note that if a serialization format is unspecified, ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftSerializationFormats#BINARY:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#BINARY"},"type://ThriftSerializationFormats#BINARY")," is used by\ndefault. You can also specify one of ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftSerializationFormats#BINARY:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#BINARY"},"type://ThriftSerializationFormats#BINARY"),",\n",(0,i.yg)("a",{parentName:"p",href:"type://ThriftSerializationFormats#COMPACT:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#COMPACT"},"type://ThriftSerializationFormats#COMPACT"),", ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftSerializationFormats#JSON:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#JSON"},"type://ThriftSerializationFormats#JSON"),"\nand ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftSerializationFormats#TEXT:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftSerializationFormats.html#TEXT"},"type://ThriftSerializationFormats#TEXT"),"\nusing ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftClientBuilder#serializationFormat(SerializationFormat):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/thrift/ThriftClientBuilder.html#serializationFormat(com.linecorp.armeria.common.SerializationFormat)"},"type://ThriftClientBuilder#serializationFormat(SerializationFormat)"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.thrift.ThriftSerializationFormats;\n\nHelloService.Iface helloService =\n    ThriftClients.builder("http://127.0.0.1:8080")\n                 .path("/hello")\n                 .serializationFormat(ThriftSerializationFormats.JSON)\n                 .build(HelloService.Iface.class); // or AsyncIface.class\n')),(0,i.yg)("p",null,"Since we specified ",(0,i.yg)("inlineCode",{parentName:"p"},"HelloService.Iface")," as the client type, ",(0,i.yg)("inlineCode",{parentName:"p"},"ThriftClients.newClient()")," will return a\nsynchronous client implementation. If we specified ",(0,i.yg)("inlineCode",{parentName:"p"},"HelloService.AsyncIface"),", the calling code would have looked\nlike the following:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.thrift.ThriftFuture;\nimport com.linecorp.armeria.common.util.CompletionActions;\nimport com.linecorp.armeria.client.thrift.ThriftClients;\n\nHelloService.AsyncIface helloService = \n    ThriftClients.newClient("http://127.0.0.1:8080/hello",\n                            HelloService.AsyncIface.class);\n\nThriftFuture<String> future = new ThriftFuture<String>();\nhelloService.hello("Armerian World", future);\n\nfuture.thenAccept(response -> assert response.equals("Hello, Armerian World!"))\n      .exceptionally(cause -> {\n          cause.printStackTrace();\n          return null;\n      });\n\n// You can also wait until the call is finished.\nString reply = future.get();\n')),(0,i.yg)("p",null,"The example above introduces a new class called ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftFuture:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftFuture.html"},"type://ThriftFuture"),". It is a subtype of Java 8\nCompletableFuture_ that implements Thrift ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/apache/thrift/blob/bd964c7f3460c308161cb6eb90583874a7d8d848/lib/java/src/org/apache/thrift/async/AsyncMethodCallback.java#L22"},"AsyncMethodCallback"),". Once passed as a callback of an asynchronous\nThrift call, ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftFuture:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/thrift/ThriftFuture.html"},"type://ThriftFuture")," will complete itself when the reply is received or the call\nfails. You'll find it way more convenient to consume the reply than ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/apache/thrift/blob/bd964c7f3460c308161cb6eb90583874a7d8d848/lib/java/src/org/apache/thrift/async/AsyncMethodCallback.java#L22"},"AsyncMethodCallback")," thanks to the rich set\nof methods provided by ",(0,i.yg)("a",{parentName:"p",href:"https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/CompletableFuture.html"},"CompletableFuture"),"."),(0,i.yg)("p",null,"You can also use the builder pattern for client construction:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.HttpRequest;\nimport com.linecorp.armeria.common.HttpResponse;\n\nHelloService.Iface helloService =\n    ThriftClients.builder("http://127.0.0.1:8080")\n                 .path("/hello")\n                 .responseTimeoutMillis(10000)\n                 .decorator(LoggingClient.newDecorator())\n                 .build(HelloService.Iface.class); // or AsyncIface.class\n\nString greeting = helloService.hello("Armerian World");\nassert greeting.equals("Hello, Armerian World!");\n')),(0,i.yg)("p",null,"As you might have noticed already, we decorated the client using ",(0,i.yg)("a",{parentName:"p",href:"type://LoggingClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/logging/LoggingClient.html"},"type://LoggingClient"),", which logs all\nrequests and responses. You might be interested in decorating a client using other decorators, for example\nto gather metrics. Please also refer to ",(0,i.yg)("a",{parentName:"p",href:"type://ThriftClientBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/thrift/ThriftClientBuilder.html"},"type://ThriftClientBuilder")," for more configuration options."),(0,i.yg)("h2",{id:"see-also",style:{position:"relative"}},(0,i.yg)("a",{parentName:"h2",href:"#see-also","aria-label":"see also permalink",className:"anchor before"},(0,i.yg)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"See also"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/server-thrift"},"Running a Thrift service")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/client-decorator"},"Decorating a client")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/client-custom-http-headers"},"Sending custom HTTP headers"))))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-client-thrift-mdx-38cc30ee1539b3d62dd8.js.map