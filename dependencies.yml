#
# NB: Update NOTICE.txt and add/remove LICENSE.*.txt when adding/removing a dependency.
#

ch.qos.logback:
  logback-classic:
    version: '1.2.3'
    javadocs:
    - https://logback.qos.ch/apidocs/

com.fasterxml.jackson.core:
  jackson-annotations:
    version: &JACKSON_VERSION '2.9.5'
    javadocs:
    - https://fasterxml.github.io/jackson-annotations/javadoc/2.9/
  jackson-core:
    version: *JACKSON_VERSION
    javadocs:
    - https://fasterxml.github.io/jackson-core/javadoc/2.9/
  jackson-databind:
    version: *JACKSON_VERSION
    javadocs:
    - https://fasterxml.github.io/jackson-databind/javadoc/2.9/

com.github.ben-manes.caffeine:
  caffeine:
    version: '2.6.2'
    javadocs:
    - https://static.javadoc.io/com.github.ben-manes.caffeine/caffeine/2.6.2/
    relocations:
    - from: com.github.benmanes.caffeine
      to: com.linecorp.armeria.internal.shaded.caffeine

com.github.jengelman.gradle.plugins:
  shadow: { version: '2.0.3' }

com.google.code.findbugs:
  jsr305: { version: '3.0.2' }

com.google.guava:
  guava:
    version: &GUAVA_VERSION '25.1-jre'
    exclusions:
    - com.google.errorprone:error_prone_annotations
    - com.google.j2objc:j2objc-annotations
    - org.codehaus.mojo:animal-sniffer-annotations
    relocations:
    - from: com.google.common
      to: com.linecorp.armeria.internal.shaded.guava
    - from: com.google.thirdparty.publicsuffix
      to: com.linecorp.armeria.internal.shaded.publicsuffix
  guava-testlib:
    version: *GUAVA_VERSION
    exclusions:
    - com.google.errorprone:error_prone_annotations
    - com.google.j2objc:j2objc-annotations
    relocations:
    - from: com.google.common
      to: com.linecorp.armeria.internal.shaded.guava

com.google.protobuf:
  protoc: { version: '3.5.1-1' }
  protobuf-gradle-plugin: { version: '0.8.5' }

com.puppycrawl.tools:
  checkstyle: { version: '8.10' }

com.spotify:
  completable-futures:
    version: '0.3.2'
    relocations:
    - from: com.spotify.futures
      to: com.linecorp.armeria.internal.shaded.futures

com.squareup.retrofit2:
  retrofit:
    version: &RETROFIT2_VERSION '2.4.0'
    javadocs:
    - https://square.github.io/retrofit/2.x/retrofit/
  adapter-java8: { version: *RETROFIT2_VERSION }
  converter-jackson: { version: *RETROFIT2_VERSION }

gradle.plugin.net.davidecavestro:
  gradle-jxr-plugin: { version: '0.2.1' }

io.dropwizard.metrics:
  metrics-core:
    version: &DROPWIZARD_VERSION '4.0.2'
    javadocs:
    - https://metrics.dropwizard.io/4.0.0/apidocs/
  metrics-json: { version: *DROPWIZARD_VERSION }

io.grpc:
  grpc-core:
    version: &GRPC_VERSION '1.12.0'
    javadocs:
    - https://grpc.io/grpc-java/javadoc/
    - https://developers.google.com/protocol-buffers/docs/reference/java/
    exclusions:
    - com.google.errorprone:error_prone_annotations
  grpc-interop-testing:
    version: *GRPC_VERSION
    exclusions:
    - com.google.guava:guava-jdk5
    - io.netty:netty-codec-http
    - io.netty:netty-codec-http2
    - io.netty:netty-codec-socks
    - io.netty:netty-handler-proxy
    - io.netty:netty-transport
    - io.netty:netty-tcnative-boringssl-static
  grpc-netty: { version: *GRPC_VERSION }
  grpc-okhttp: { version: *GRPC_VERSION }
  grpc-protobuf: { version: *GRPC_VERSION }
  grpc-stub: { version: *GRPC_VERSION }
  grpc-testing: { version: *GRPC_VERSION }

io.micrometer:
  micrometer-core:
    version: &MICROMETER_VERSION '1.0.4'
    javadocs:
    - https://static.javadoc.io/io.micrometer/micrometer-core/1.0.4/
  micrometer-registry-prometheus:
    version: *MICROMETER_VERSION
    javadocs:
    - https://static.javadoc.io/io.micrometer/micrometer-registry-prometheus/1.0.4/
  micrometer-spring-legacy:
    version: *MICROMETER_VERSION
    javadocs:
    - https://static.javadoc.io/io.micrometer/micrometer-spring-legacy/1.0.4/
    exclusions:
    - org.springframework:spring-web
    - org.springframework:spring-webmvc

io.netty:
  netty-codec-http2: { version: &NETTY_VERSION '4.1.25.Final' }
  netty-codec-haproxy: { version: *NETTY_VERSION }
  netty-handler: { version: *NETTY_VERSION }
  netty-resolver-dns: { version: *NETTY_VERSION }
  netty-transport:
    version: *NETTY_VERSION
    javadocs:
    - https://netty.io/4.1/api/
  netty-transport-native-epoll: { version: *NETTY_VERSION }
  netty-transport-native-unix-common: { version: *NETTY_VERSION }
  netty-tcnative-boringssl-static: { version: '2.0.8.Final' }

io.prometheus:
  simpleclient_common:
    version: '0.4.0'
    javadocs:
    - https://prometheus.github.io/client_java/

io.reactivex.rxjava2:
  rxjava:
    version: '2.1.14'
    javadocs:
    - http://reactivex.io/RxJava/2.x/javadoc/

io.zipkin.brave:
  brave:
    version: &BRAVE_VERSION '5.0.0'
    javadocs:
    - https://static.javadoc.io/io.zipkin.brave/brave/5.0.0/

it.unimi.dsi:
  fastutil:
    version: '8.2.1'
    relocations:
    - from: it.unimi.dsi.fastutil
      to: com.linecorp.armeria.internal.shaded.fastutil

javax.inject:
  javax.inject: { version: '1' }

javax.validation:
  validation-api: { version: '2.0.1.Final' }

junit:
  junit:
    version: '4.12'
    javadocs:
    - https://junit.org/junit4/javadoc/4.12/

kr.motd.gradle:
  sphinx-gradle-plugin: { version: '2.2.2' }

# We do not depend on log4j. We just need this to stop dependency-management-plugin from
# complaining about its bad POM.
# See: https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/59
log4j:
  log4j: { version: '1.2.17' }

me.champeau.gradle:
  jmh-gradle-plugin: { version: '0.4.5' }

net.javacrumbs.json-unit:
  json-unit: { version: &JSON_UNIT_VERSION '1.29.1' }
  json-unit-fluent: { version: *JSON_UNIT_VERSION }

net.sf.proguard:
  proguard-gradle: { version: '6.0.3' }

org.apache.curator:
  curator-recipes:
    version: '4.0.1'
    javadocs:
    - https://static.javadoc.io/org.apache.curator/curator-recipes/4.0.1/
    exclusions:
    - org.apache.zookeeper:zookeeper

org.apache.hbase:
  hbase-shaded-client:
    version: '1.2.6'
    exclusions:
    - com.github.stephenc.findbugs:findbugs-annotations
    - commons-logging:commons-logging
    - log4j:log4j
    - org.slf4j:slf4j-log4j12

org.apache.httpcomponents:
  httpclient:
    version: '4.5.5'
    exclusions:
    - commons-logging:commons-logging

org.apache.kafka:
  kafka-clients:
    version: '1.1.0'
    javadocs:
    - https://kafka.apache.org/0100/javadoc/

org.apache.thrift:
  libthrift:
    version: '0.11.0'
    javadocs:
    - https://static.javadoc.io/org.apache.thrift/libthrift/0.11.0/
    exclusions:
    - org.apache.httpcomponents:httpcore
    - org.apache.httpcomponents:httpclient

org.apache.tomcat.embed:
  tomcat-embed-core:
    version: &TOMCAT_VERSION '9.0.8'
    javadocs:
    - https://tomcat.apache.org/tomcat-9.0-doc/api/
  tomcat-embed-jasper: { version: *TOMCAT_VERSION }
  tomcat-embed-el: { version: *TOMCAT_VERSION }

org.apache.zookeeper:
  zookeeper:
    version: '3.4.12'
    exclusions:
    - jline:jline
    - log4j:log4j
    - org.slf4j:slf4j-log4j12

org.assertj:
  assertj-core: { version: '3.10.0' }

org.awaitility:
  awaitility: { version: '3.1.0' }

org.bouncycastle:
  bcprov-jdk15on:
    version: '1.59'
    relocations:
    - from: org.bouncycastle
      to: com.linecorp.armeria.internal.shaded.bouncycastle

org.checkerframework:
  checker-compat-qual: { version: '2.5.1' }

org.curioswitch.curiostack:
  protobuf-jackson: { version: '0.2.1' }

org.dmonix.junit:
  zookeeper-junit: { version: '1.2' }

org.eclipse.jetty:
  apache-jsp: { version: &JETTY_VERSION '9.4.10.v20180503' }
  apache-jstl: { version: *JETTY_VERSION }
  jetty-annotations:
    version: *JETTY_VERSION
    exclusions:
    - org.ow2.asm:asm
    - org.ow2.asm:asm-commons
  jetty-server:
    version: *JETTY_VERSION
    javadocs:
    - https://www.eclipse.org/jetty/javadoc/current/
  jetty-webapp: { version: *JETTY_VERSION }

org.eclipse.jetty.alpn:
  alpn-api: { version: '1.1.3.v20160715' }

org.eclipse.jetty.http2:
  http2-server: { version: *JETTY_VERSION }

org.hibernate.validator:
  hibernate-validator: { version: '6.0.10.Final' }

org.javassist:
  javassist: { version: '3.22.0-GA' }

org.jctools:
  jctools-core:
    version: '2.1.2'
    relocations:
    - from: org.jctools
      to: com.linecorp.armeria.internal.shaded.jctools

org.mockito:
  mockito-core: { version: '2.18.3' }

org.mortbay.jetty.alpn:
  jetty-alpn-agent: { version: '2.0.7' }

org.openjdk.jmh:
  jmh-core: { version: &JMH_VERSION '1.20' }
  jmh-generator-annprocess: { version: *JMH_VERSION }

org.reactivestreams:
  reactive-streams: { version: &REACTIVE_STREAMS_VERSION '1.0.2' }
  reactive-streams-tck:
    version: *REACTIVE_STREAMS_VERSION
    exclusions:
    - org.yaml:snakeyaml

org.reflections:
  reflections:
    version: '0.9.11'
    relocations:
    - from: org.reflections
      to: com.linecorp.armeria.internal.shaded.reflections

org.slf4j:
  jcl-over-slf4j: { version: &SLF4J_VERSION '1.7.25' }
  jul-to-slf4j: { version: *SLF4J_VERSION }
  log4j-over-slf4j: { version: *SLF4J_VERSION }
  slf4j-api:
    version: *SLF4J_VERSION
    javadocs:
    - https://www.slf4j.org/api/

org.springframework.boot:
  spring-boot-starter:
    version: &SPRING_BOOT_VERSION '2.0.2.RELEASE'
    javadocs:
    - https://docs.spring.io/spring/docs/current/javadoc-api/
  spring-boot-starter-actuator: { version: *SPRING_BOOT_VERSION }
  spring-boot-starter-test: { version: *SPRING_BOOT_VERSION }
